
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVDEREFUSUBUADDleftARROWPOSTINCPOSTDECLBRACKETADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DEREF DIV DOWHILE ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF UADD USUB WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DOWHILE expr COLON suitewhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT expr %prec DEREFexpr : PLUS expr %prec UADDexpr : MINUS expr %prec USUBexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarray_contents : array_contents COMMAarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'ASSIGN':([11,28,36,39,43,45,46,47,59,67,69,72,73,74,77,78,80,85,89,91,114,115,118,126,129,132,137,138,139,140,146,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,184,187,189,190,191,193,194,216,],[-139,-132,-118,-138,-141,-142,-133,93,-140,-138,-143,-125,-124,-131,-129,-128,-137,-130,-56,-54,-127,-126,-123,-144,-121,183,-64,-62,-65,-63,-134,-105,-107,-114,-110,-111,-102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,-57,-66,-67,-55,-135,-136,-122,-68,]),'DIV':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,94,-140,-138,-143,94,94,-125,-124,-131,94,-129,-128,94,-137,-130,-127,-126,94,-123,94,94,-144,-121,94,94,-134,94,-105,94,94,94,94,94,94,-103,94,94,94,-104,94,-120,94,94,94,94,94,94,94,94,-135,-136,-122,94,94,94,94,]),'BREAK':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[30,-5,-74,-77,-75,30,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,30,-83,-7,30,-99,-88,-81,-98,-100,-84,-85,-86,]),'WHILE':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[31,-5,-74,-77,-75,31,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,31,-83,-7,31,-99,-88,-81,-98,-100,-84,-85,-86,]),'AND':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,98,-140,-138,-143,98,98,-125,-124,-131,98,-129,-128,98,-137,-130,-127,-126,98,-123,98,98,-144,-121,98,98,-134,98,-105,-107,-114,-110,-111,-102,98,-103,-113,-119,-106,-104,-101,-120,98,-109,-117,-115,-108,-116,98,98,-135,-136,-122,98,98,98,98,]),'COLON':([11,28,36,39,43,45,46,59,67,69,71,72,73,74,77,78,79,80,85,114,115,117,118,121,126,129,146,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,173,176,191,193,194,203,206,212,222,225,234,239,242,243,258,],[-139,-132,-118,84,-141,-142,-133,-140,-138,-143,128,-125,-124,-131,-129,-128,131,-137,-130,-127,-126,170,-123,172,-144,-121,-134,-105,-107,-114,-110,-111,-102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,200,84,-135,-136,-122,-8,84,235,240,-9,247,251,-96,253,-97,]),'AMP':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[33,33,-139,-5,33,33,-74,33,-77,-75,33,33,33,-132,33,33,33,-118,33,-138,33,-141,-73,-142,-133,102,33,33,33,33,-16,-140,-15,-6,-76,-138,-143,102,102,-125,-124,-131,102,33,-129,-128,102,-137,-17,-3,-4,-130,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-127,-126,102,-123,102,102,-144,33,-121,102,33,102,-134,102,-105,-107,-114,-110,-111,-102,102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,33,102,-87,-79,33,102,-135,33,-136,-122,-78,-82,-80,33,102,33,-83,-7,33,33,-99,102,102,-88,-81,-98,-100,-84,33,-85,102,-86,]),'EQ':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,104,-140,-138,-143,104,104,-125,-124,-131,104,-129,-128,104,-137,-130,-127,-126,104,-123,104,104,-144,-121,104,104,-134,104,-105,-107,104,-110,104,-102,104,-103,104,-119,-106,-104,-101,-120,104,-109,-117,104,-108,-116,104,104,-135,-136,-122,104,104,104,104,]),'ELSE':([181,198,210,230,231,244,249,256,257,],[212,222,234,234,-93,-94,-98,222,-95,]),'INT':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[11,11,-5,11,11,-74,11,-77,-75,11,11,11,11,11,11,11,11,-73,11,11,11,11,-16,-15,-6,-76,11,-17,-3,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-87,-79,11,11,-78,-82,-80,11,11,-83,-7,11,11,-99,-88,-81,-98,-100,-84,11,-85,-86,]),'COMMA':([11,28,36,43,45,46,59,67,68,69,70,72,73,74,77,78,80,85,89,91,114,115,118,126,127,129,132,134,136,137,138,139,140,144,145,146,147,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,175,177,178,184,187,189,190,191,193,194,196,197,201,202,204,205,206,214,215,216,217,227,238,241,242,243,258,],[-139,-132,-118,-141,-142,-133,-140,-138,127,-143,-145,-125,-124,-131,-129,-128,-137,-130,-56,-54,-127,-126,-123,-144,-147,-121,-52,-60,186,-64,-62,-65,-63,-149,-150,-134,192,-105,-107,-114,-110,-111,-102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,-48,207,-146,-57,-66,-67,-55,-135,-136,-122,-41,219,-12,226,-10,-13,-11,-53,-61,-68,-148,-47,-42,-14,-96,254,-97,]),'NAME':([0,4,10,13,14,15,16,17,20,21,22,23,24,27,29,31,33,37,40,41,44,48,49,50,51,52,54,57,58,61,63,64,65,76,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,125,127,133,137,138,139,140,141,169,171,174,179,181,183,184,186,187,189,190,192,195,198,199,207,211,213,216,219,220,221,224,226,229,236,237,246,248,249,250,252,254,256,259,],[39,66,67,-5,67,67,-74,67,-77,-75,67,67,76,67,67,67,67,39,67,91,-73,91,67,67,119,67,67,123,-16,-15,124,-6,-76,67,-17,-3,-4,91,91,142,-56,91,-54,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,162,67,67,67,67,67,67,176,67,91,-64,-62,-65,-63,67,67,196,206,-87,-79,67,-57,91,-66,-67,-55,67,-78,-82,91,176,-80,39,-68,238,67,-83,-7,206,67,39,-99,-88,-81,-98,-100,-84,67,-85,-86,]),'CHAR':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[45,45,-5,45,45,-74,45,-77,-75,45,45,45,45,45,45,45,45,-73,45,45,45,45,-16,-15,-6,-76,45,-17,-3,-4,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-87,-79,45,45,-78,-82,-80,45,45,-83,-7,45,45,-99,-88,-81,-98,-100,-84,45,-85,-86,]),'ARROW':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,86,114,115,117,118,120,121,126,129,130,135,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,173,178,185,188,191,193,194,203,214,225,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,107,-140,-138,-143,107,107,107,107,107,107,107,107,107,107,107,133,-127,-126,107,107,107,107,-144,-121,107,-58,107,-134,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-120,107,107,107,107,107,107,199,107,-59,107,-135,-136,107,-8,107,-9,107,107,107,]),'NOT':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[40,40,-5,40,40,-74,40,-77,-75,40,40,40,40,40,40,40,40,-73,40,40,40,40,-16,-15,-6,-76,40,-17,-3,-4,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-87,-79,40,40,-78,-82,-80,40,40,-83,-7,40,40,-99,-88,-81,-98,-100,-84,40,-85,-86,]),'OR':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,108,-140,-138,-143,108,108,-125,-124,-131,108,-129,-128,108,-137,-130,-127,-126,108,-123,108,108,-144,-121,108,108,-134,108,-105,-107,-114,-110,-111,-102,108,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,108,108,-135,-136,-122,108,108,108,108,]),'TYPEDEF':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[41,-5,-74,-77,-75,41,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,41,-83,-7,41,-99,-88,-81,-98,-100,-84,-85,-86,]),'PASS':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[6,-5,-74,-77,-75,6,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,6,-83,-7,6,-99,-88,-81,-98,-100,-84,-85,-86,]),'STRING':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,55,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[43,43,-5,43,43,-74,43,-77,-75,43,43,43,43,43,43,43,43,-73,43,43,43,43,122,-16,-15,-6,-76,43,-17,-3,-4,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-87,-79,43,43,-78,-82,-80,43,43,-83,-7,43,43,-99,-88,-81,-98,-100,-84,43,-85,-86,]),'RSHIFT':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,110,-140,-138,-143,110,110,-125,-124,-131,110,-129,-128,110,-137,-130,-127,-126,110,-123,110,110,-144,-121,110,110,-134,110,-105,110,110,110,110,-102,110,-103,110,110,110,-104,-101,-120,110,110,-117,110,110,-116,110,110,-135,-136,-122,110,110,110,110,]),'MOD':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,105,-140,-138,-143,105,105,-125,-124,-131,105,-129,-128,105,-137,-130,-127,-126,105,-123,105,105,-144,-121,105,105,-134,105,-105,105,105,105,105,105,105,-103,105,105,105,-104,105,-120,105,105,105,105,105,105,105,105,-135,-136,-122,105,105,105,105,]),'STRUCT':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[4,-5,-74,-77,-75,4,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,4,-83,-7,4,-99,-88,-81,-98,-100,-84,-85,-86,]),'RPAR':([11,28,36,43,45,46,59,67,69,72,73,74,75,77,78,80,85,87,89,91,92,114,115,118,126,129,132,134,136,137,138,139,140,144,145,146,147,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,174,184,187,189,190,191,193,194,201,202,204,205,206,214,215,216,217,241,],[-139,-132,-118,-141,-142,-133,-140,-138,-143,-125,-124,-131,129,-129,-128,-137,-130,135,-56,-54,146,-127,-126,-123,-144,-121,-52,-60,185,-64,-62,-65,-63,-149,-150,-134,191,-105,-107,-114,-110,-111,-102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,203,-57,-66,-67,-55,-135,-136,-122,-12,225,-10,-13,-11,-53,-61,-68,-148,-14,]),'LBRACKET':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,120,121,126,127,129,130,132,134,137,138,139,140,141,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,184,187,188,189,190,191,192,193,194,195,198,211,213,214,215,216,220,221,223,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[10,10,-139,-5,10,10,-74,10,-77,-75,10,10,10,-132,10,10,10,-118,10,-138,10,-141,-73,-142,-133,100,10,10,10,10,-16,-140,-15,-6,-76,-138,-143,100,100,100,100,100,100,10,100,100,100,100,-17,-3,-4,100,141,-56,-54,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-127,-126,141,100,100,100,100,-144,10,-121,100,141,141,-64,141,-65,-63,10,141,100,-134,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-120,100,100,100,100,100,100,10,100,-87,-79,10,-57,-66,100,-67,-55,-135,10,-136,100,-78,-82,-80,10,100,141,-68,10,-83,141,-7,10,10,-99,100,100,-88,-81,-98,-100,-84,10,-85,100,-86,]),'ELLIPSIS':([174,226,],[205,205,]),'$end':([0,13,16,20,21,35,37,44,56,58,61,64,65,81,82,83,179,181,195,198,211,221,224,246,248,249,252,256,259,],[-151,-5,-74,-77,-75,0,-1,-73,-2,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,-83,-7,-88,-81,-98,-84,-85,-86,]),'NEWLINE':([0,1,2,3,5,6,7,8,9,11,12,13,16,18,19,20,21,25,26,28,30,32,34,36,37,38,39,42,43,44,45,46,47,53,58,59,60,61,62,64,65,67,69,72,73,74,76,77,78,80,81,82,83,85,89,91,114,115,118,120,122,123,126,128,129,130,131,132,137,138,139,140,142,146,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,170,172,173,179,181,184,187,189,190,191,193,194,195,198,200,203,211,214,216,218,221,223,224,225,228,235,240,246,247,248,249,251,252,253,256,259,],[13,-21,-29,-27,-18,-37,-23,-25,-19,-139,-24,-5,-74,-31,-22,-77,-75,-51,-43,-132,-38,-39,81,-118,82,-26,-138,-20,-141,-73,-142,-133,-70,-28,-16,-140,-36,-15,-30,-6,-76,-138,-143,-125,-124,-131,-34,-129,-128,-137,-17,-3,-4,-130,-56,-54,-127,-126,-123,-72,-69,-35,-144,180,-121,-33,182,-52,-64,-62,-65,-63,-32,-134,-71,-105,-107,-114,-110,-111,-102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,182,182,-49,-87,-79,-57,-66,-67,-55,-135,-136,-122,-78,-82,182,-8,-80,-53,-68,-40,-83,-50,-7,-9,-44,182,182,-88,182,-81,-98,182,-84,182,-85,-86,]),'SWITCH':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[14,-5,-74,-77,-75,14,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,14,-83,-7,14,-99,-88,-81,-98,-100,-84,-85,-86,]),'LSHIFT':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,113,-140,-138,-143,113,113,-125,-124,-131,113,-129,-128,113,-137,-130,-127,-126,113,-123,113,113,-144,-121,113,113,-134,113,-105,113,113,113,113,-102,113,-103,113,113,113,-104,-101,-120,113,113,-117,113,113,-116,113,113,-135,-136,-122,113,113,113,113,]),'ELIF':([198,249,256,],[220,-98,220,]),'PIPE':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,96,-140,-138,-143,96,96,-125,-124,-131,96,-129,-128,96,-137,-130,-127,-126,96,-123,96,96,-144,-121,96,96,-134,96,-105,-107,-114,-110,-111,-102,96,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,96,96,-135,-136,-122,96,96,96,96,]),'CASE':([210,230,231,244,249,257,],[229,229,-93,-94,-98,-95,]),'LT':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[48,48,-139,-5,48,48,-74,48,-77,-75,48,48,48,-132,48,48,48,-118,48,-138,48,-141,-73,-142,-133,95,48,48,48,48,-16,-140,-15,-6,-76,-138,-143,95,95,-125,-124,-131,95,48,-129,-128,95,-137,-17,-3,-4,-130,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-127,-126,95,-123,95,95,-144,48,-121,95,48,95,-134,95,-105,-107,95,-110,95,-102,95,-103,95,95,95,-104,-101,-120,95,-109,-117,95,-108,-116,48,95,-87,-79,48,95,-135,48,-136,-122,-78,-82,-80,48,95,48,-83,-7,48,48,-99,95,95,-88,-81,-98,-100,-84,48,-85,95,-86,]),'DOWHILE':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[49,-5,-74,-77,-75,49,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,49,-83,-7,49,-99,-88,-81,-98,-100,-84,-85,-86,]),'GE':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,97,-140,-138,-143,97,97,-125,-124,-131,97,-129,-128,97,-137,-130,-127,-126,97,-123,97,97,-144,-121,97,97,-134,97,-105,-107,97,-110,97,-102,97,-103,97,97,97,-104,-101,-120,97,-109,-117,97,-108,-116,97,97,-135,-136,-122,97,97,97,97,]),'ENUM':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[51,-5,-74,-77,-75,51,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,51,-83,-7,51,-99,-88,-81,-98,-100,-84,-85,-86,]),'MINUS':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[15,15,-139,-5,15,15,-74,15,-77,-75,15,15,15,-132,15,15,15,-118,15,-138,15,-141,-73,-142,-133,99,15,15,15,15,-16,-140,-15,-6,-76,-138,-143,99,99,-125,-124,-131,99,15,-129,-128,99,-137,-17,-3,-4,-130,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-127,-126,99,-123,99,99,-144,15,-121,99,15,99,-134,99,-105,99,99,99,99,-102,99,-103,99,99,99,-104,-101,-120,99,99,99,99,99,99,15,99,-87,-79,15,99,-135,15,-136,-122,-78,-82,-80,15,99,15,-83,-7,15,15,-99,99,99,-88,-81,-98,-100,-84,15,-85,99,-86,]),'MULT':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[50,50,-139,-5,50,50,-74,50,-77,-75,50,50,50,-132,50,50,50,-118,50,-138,50,-141,-73,-142,-133,101,50,50,50,50,-16,-140,-15,-6,-76,-138,-143,101,101,-125,-124,-131,101,50,-129,-128,101,-137,-17,-3,-4,-130,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-127,-126,101,-123,101,101,-144,50,-121,101,50,101,-134,101,-105,101,101,101,101,101,101,-103,101,101,101,-104,101,-120,101,101,101,101,101,101,50,101,-87,-79,50,101,-135,50,-136,-122,-78,-82,-80,50,101,50,-83,-7,50,50,-99,101,101,-88,-81,-98,-100,-84,50,-85,101,-86,]),'RETURN':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[52,-5,-74,-77,-75,52,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,52,-83,-7,52,-99,-88,-81,-98,-100,-84,-85,-86,]),'RBRACE':([11,28,36,43,45,46,59,67,69,72,73,74,77,78,80,85,89,91,114,115,118,126,129,132,137,138,139,140,143,146,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,175,177,184,187,189,190,191,193,194,196,197,207,208,209,214,216,227,238,],[-139,-132,-118,-141,-142,-133,-140,-138,-143,-125,-124,-131,-129,-128,-137,-130,-56,-54,-127,-126,-123,-144,-121,-52,-64,-62,-65,-63,190,-134,-105,-107,-114,-110,-111,-102,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,-48,-151,-57,-66,-67,-55,-135,-136,-122,-41,218,-45,228,-46,-53,-68,-47,-42,]),'DEDENT':([16,20,21,44,58,61,65,81,179,181,195,198,211,221,224,230,231,232,233,236,237,244,245,246,248,249,250,252,255,256,257,259,],[-74,-77,-75,-73,-16,-15,-76,-17,-87,-79,-78,-82,-80,-83,-7,-89,-93,246,-91,249,-99,-94,-90,-88,-81,-98,-100,-84,-92,-85,-95,-86,]),'IF':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[54,-5,-74,-77,-75,54,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,54,-83,-7,54,-99,-88,-81,-98,-100,-84,-85,-86,]),'INCLUDE':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[55,-5,-74,-77,-75,55,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,55,-83,-7,55,-99,-88,-81,-98,-100,-84,-85,-86,]),'PLUS':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[17,17,-139,-5,17,17,-74,17,-77,-75,17,17,17,-132,17,17,17,-118,17,-138,17,-141,-73,-142,-133,106,17,17,17,17,-16,-140,-15,-6,-76,-138,-143,106,106,-125,-124,-131,106,17,-129,-128,106,-137,-17,-3,-4,-130,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-127,-126,106,-123,106,106,-144,17,-121,106,17,106,-134,106,-105,106,106,106,106,-102,106,-103,106,106,106,-104,-101,-120,106,106,106,106,106,106,17,106,-87,-79,17,106,-135,17,-136,-122,-78,-82,-80,17,106,17,-83,-7,17,17,-99,106,106,-88,-81,-98,-100,-84,17,-85,106,-86,]),'NE':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,103,-140,-138,-143,103,103,-125,-124,-131,103,-129,-128,103,-137,-130,-127,-126,103,-123,103,103,-144,-121,103,103,-134,103,-105,-107,103,-110,103,-102,103,-103,103,-119,-106,-104,-101,-120,103,-109,-117,103,-108,-116,103,103,-135,-136,-122,103,103,103,103,]),'LBRACE':([41,48,66,84,87,90,119,133,186,199,],[90,90,125,90,90,90,171,90,90,90,]),'IFNDEF':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[57,-5,-74,-77,-75,57,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,57,-83,-7,57,-99,-88,-81,-98,-100,-84,-85,-86,]),'INV':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[22,22,-5,22,22,-74,22,-77,-75,22,22,22,22,22,22,22,22,-73,22,22,22,22,-16,-15,-6,-76,22,-17,-3,-4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-87,-79,22,22,-78,-82,-80,22,22,-83,-7,22,22,-99,-88,-81,-98,-100,-84,22,-85,-86,]),'RBRACKET':([10,11,28,36,43,45,46,59,67,68,69,70,72,73,74,77,78,80,85,114,115,118,126,127,129,141,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,],[69,-139,-132,-118,-141,-142,-133,-140,-138,126,-143,-145,-125,-124,-131,-129,-128,-137,-130,-127,-126,-123,-144,-147,-121,189,-134,-105,-107,-114,-110,-111,-102,193,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,-146,216,-135,-136,-122,]),'LPAR':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,37,39,40,41,43,44,45,46,48,49,50,52,54,58,59,61,64,65,67,69,76,81,82,83,84,87,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,124,126,127,133,141,169,179,181,183,186,192,195,198,199,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[23,23,-139,-5,23,23,-74,23,-77,-75,23,23,23,-132,23,23,23,23,-138,23,87,-141,-73,-142,92,87,23,23,23,23,-16,-140,-15,-6,-76,-138,-143,23,-17,-3,-4,87,87,87,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,174,-144,23,87,23,23,-87,-79,23,87,23,-78,-82,87,-80,23,23,-83,-7,23,23,-99,-88,-81,-98,-100,-84,23,-85,-86,]),'CARROT':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,111,-140,-138,-143,111,111,-125,-124,-131,111,-129,-128,111,-137,-130,-127,-126,111,-123,111,111,-144,-121,111,111,-134,111,-105,-107,-114,-110,-111,-102,111,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,111,111,-135,-136,-122,111,111,111,111,]),'DEFINE':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[24,-5,-74,-77,-75,24,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,24,-83,-7,24,-99,-88,-81,-98,-100,-84,-85,-86,]),'ENDIF':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[60,-5,-74,-77,-75,60,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,60,-83,-7,60,-99,-88,-81,-98,-100,-84,-85,-86,]),'GT':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,89,91,114,115,116,117,118,120,121,126,129,130,137,138,139,140,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,184,187,188,189,190,191,193,194,214,216,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,112,-140,-138,-143,112,112,-125,-124,-131,112,-129,-128,112,-137,-130,-56,-54,-127,-126,169,112,-123,112,112,-144,-121,112,-64,-62,-65,-63,112,-134,112,-105,-107,112,-110,112,-102,112,-103,112,112,112,-104,-101,-120,112,-109,-117,112,-108,-116,112,-57,-66,112,-67,-55,-135,-136,-122,112,-68,112,112,112,]),'DEC':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[27,27,-139,-5,27,27,-74,27,-77,-75,27,27,27,-132,27,27,27,-118,27,-138,27,-141,-73,-142,-133,114,27,27,27,27,-16,-140,-15,-6,-76,-138,-143,114,114,-125,-124,-131,114,27,-129,-128,114,-137,-17,-3,-4,-130,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-127,-126,114,-123,114,114,-144,27,-121,114,27,114,-134,114,-105,-107,-114,-110,-111,-102,114,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,27,114,-87,-79,27,114,-135,27,-136,-122,-78,-82,-80,27,114,27,-83,-7,27,27,-99,114,114,-88,-81,-98,-100,-84,27,-85,114,-86,]),'NULL':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[28,28,-5,28,28,-74,28,-77,-75,28,28,28,28,28,28,28,28,-73,28,28,28,28,-16,-15,-6,-76,28,-17,-3,-4,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-87,-79,28,28,-78,-82,-80,28,28,-83,-7,28,28,-99,-88,-81,-98,-100,-84,28,-85,-86,]),'DEF':([0,13,16,20,21,37,44,58,61,64,65,81,82,83,179,181,195,198,211,213,221,224,236,237,246,248,249,250,252,256,259,],[63,-5,-74,-77,-75,63,-73,-16,-15,-6,-76,-17,-3,-4,-87,-79,-78,-82,-80,63,-83,-7,63,-99,-88,-81,-98,-100,-84,-85,-86,]),'INDENT':([180,182,],[210,213,]),'LE':([11,28,36,39,43,45,46,47,59,67,69,70,71,72,73,74,75,77,78,79,80,85,114,115,117,118,120,121,126,129,130,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,178,188,191,193,194,214,239,242,258,],[-139,-132,-118,-138,-141,-142,-133,109,-140,-138,-143,109,109,-125,-124,-131,109,-129,-128,109,-137,-130,-127,-126,109,-123,109,109,-144,-121,109,109,-134,109,-105,-107,109,-110,109,-102,109,-103,109,109,109,-104,-101,-120,109,-109,-117,109,-108,-116,109,109,-135,-136,-122,109,109,109,109,]),'FLOAT':([0,10,13,14,15,16,17,20,21,22,23,27,29,31,33,37,40,44,49,50,52,54,58,61,64,65,76,81,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,179,181,183,192,195,198,211,213,220,221,224,229,236,237,246,248,249,250,252,254,256,259,],[59,59,-5,59,59,-74,59,-77,-75,59,59,59,59,59,59,59,59,-73,59,59,59,59,-16,-15,-6,-76,59,-17,-3,-4,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-87,-79,59,59,-78,-82,-80,59,59,-83,-7,59,59,-99,-88,-81,-98,-100,-84,59,-85,-86,]),'INC':([0,10,11,13,14,15,16,17,20,21,22,23,27,28,29,31,33,36,37,39,40,43,44,45,46,47,49,50,52,54,58,59,61,64,65,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,120,121,126,127,129,130,141,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,178,179,181,183,188,191,192,193,194,195,198,211,213,214,220,221,224,229,236,237,239,242,246,248,249,250,252,254,256,258,259,],[29,29,-139,-5,29,29,-74,29,-77,-75,29,29,29,-132,29,29,29,-118,29,-138,29,-141,-73,-142,-133,115,29,29,29,29,-16,-140,-15,-6,-76,-138,-143,115,115,-125,-124,-131,115,29,-129,-128,115,-137,-17,-3,-4,-130,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-127,-126,115,-123,115,115,-144,29,-121,115,29,115,-134,115,-105,-107,-114,-110,-111,-102,115,-103,-113,-119,-106,-104,-101,-120,-112,-109,-117,-115,-108,-116,29,115,-87,-79,29,115,-135,29,-136,-122,-78,-82,-80,29,115,29,-83,-7,29,29,-99,115,115,-88,-81,-98,-100,-84,29,-85,115,-86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'atom':([0,10,14,15,17,22,23,27,29,31,33,37,40,49,50,52,54,76,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,183,192,213,220,229,236,254,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ifndef_stmt':([0,37,213,236,],[1,1,1,1,]),'optional_comma':([177,],[208,]),'varargslist':([174,],[202,]),'enum_decl':([0,37,213,236,],[32,32,32,32,]),'module':([0,],[35,]),'small_stmt':([0,37,213,236,],[34,34,34,34,]),'param_list_contents':([87,],[136,]),'power':([0,10,14,15,17,22,23,27,29,31,33,37,40,49,50,52,54,76,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,183,192,213,220,229,236,254,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'if_orelse':([198,256,],[221,259,]),'array':([88,116,132,134,138,143,184,215,223,],[137,137,137,137,137,137,137,137,137,]),'var_decl_stmt':([0,37,213,236,],[38,38,38,38,]),'stmts':([213,],[236,]),'switch_suite':([128,],[179,]),'return_stmt':([0,37,213,236,],[5,5,5,5,]),'expr_stmt':([0,37,213,236,],[7,7,7,7,]),'stmt_list':([0,],[37,]),'define_stmt':([0,37,213,236,],[42,42,42,42,]),'func_decl':([0,37,213,236,],[8,8,8,8,]),'if_stmt':([0,37,213,236,],[44,44,44,44,]),'empty':([0,177,],[56,209,]),'param_type_list':([41,48,84,87,90,133,186,199,],[86,86,86,86,86,86,86,86,]),'suite':([131,170,172,200,235,240,247,251,253,],[181,195,198,224,248,252,255,256,257,]),'include_stmt':([0,37,213,236,],[9,9,9,9,]),'arglist':([92,],[147,]),'pointer_or_array':([88,116,132,134,138,143,184,215,223,],[139,139,139,139,187,139,139,139,139,]),'case_list':([210,],[230,]),'expr':([0,10,14,15,17,22,23,27,29,31,33,37,40,49,50,52,54,76,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,127,141,169,183,192,213,220,229,236,254,],[47,70,71,72,73,74,75,77,78,79,80,47,85,117,118,120,121,130,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,178,188,194,214,145,47,239,242,47,258,]),'struct_decl_list':([125,],[177,]),'argument':([92,192,],[144,217,]),'while_orelse':([181,],[211,]),'enum_name_list':([171,],[197,]),'pointer':([88,116,132,134,138,143,184,215,223,],[140,140,140,140,140,140,140,140,140,]),'while_stmt':([0,37,213,236,],[16,16,16,16,]),'type_declaration':([41,48,84,87,90,133,186,199,],[88,116,132,134,143,184,215,223,]),'assign_stmt':([0,37,213,236,],[12,12,12,12,]),'struct_decl_stmt':([0,37,213,236,],[53,53,53,53,]),'parameters':([124,],[173,]),'typedef_stmt':([0,37,213,236,],[2,2,2,2,]),'enum_decl_stmt':([0,37,213,236,],[3,3,3,3,]),'bracket_list':([88,116,132,134,143,184,215,223,],[138,138,138,138,138,138,138,138,]),'default':([210,230,],[233,245,]),'pass':([0,37,213,236,],[18,18,18,18,]),'case':([210,230,],[231,244,]),'endif_stmt':([0,37,213,236,],[19,19,19,19,]),'case_expr_list':([229,],[243,]),'funcdef':([0,37,213,236,],[20,20,20,20,]),'dowhile_stmt':([0,37,213,236,],[21,21,21,21,]),'compound_stmt':([0,37,213,236,],[58,58,58,58,]),'array_contents':([10,],[68,]),'switch_stmts':([210,],[232,]),'var_decl':([0,37,125,174,207,213,226,236,],[25,25,175,201,227,25,201,25,]),'struct_decl':([0,37,213,236,],[26,26,26,26,]),'simple_stmt':([0,37,213,236,],[61,61,61,61,]),'inline_func_decl':([41,48,84,87,90,133,186,199,],[89,89,89,89,89,89,89,89,]),'break':([0,37,213,236,],[62,62,62,62,]),'stmt':([0,37,213,236,],[64,83,237,250,]),'switch_stmt':([0,37,213,236,],[65,65,65,65,]),'varaglist_elem':([174,226,],[204,241,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',63),
  ('module -> empty','module',1,'p_empty_module','cparse.py',67),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',72),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',76),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',80),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',84),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',89),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',94),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',98),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',102),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',106),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',107),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',111),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',115),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',119),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',120),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',128),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',132),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',133),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',134),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',135),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',136),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',137),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',138),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',139),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',140),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',141),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',142),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',143),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',144),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',145),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',151),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',157),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',161),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',165),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',169),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',173),
  ('break -> BREAK','break',1,'p_break','cparse.py',177),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',182),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',186),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',190),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',194),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',200),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',204),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',208),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',209),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',214),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',218),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',223),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',228),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',232),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',237),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',242),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',246),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',250),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',257),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',261),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',265),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',269),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',273),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',277),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',283),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',297),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',298),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',302),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',306),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',310),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',314),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',318),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',322),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',327),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',331),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',337),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',338),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',339),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',340),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',341),
  ('dowhile_stmt -> DOWHILE expr COLON suite','dowhile_stmt',4,'p_dowhile','cparse.py',350),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',355),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',359),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',363),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',369),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',373),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',377),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',381),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',385),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',390),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',394),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',398),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',402),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',406),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',410),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',414),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',418),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',422),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',426),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',430),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',435),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',439),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',443),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',451),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',455),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',459),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',463),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',467),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',471),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',475),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',479),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',483),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',487),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',491),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',495),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',501),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',505),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',509),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',513),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',517),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',521),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',525),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',529),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',533),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',537),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',541),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',545),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',549),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',555),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',559),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',565),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',569),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',573),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',577),
  ('atom -> NULL','atom',1,'p_null','cparse.py',581),
  ('power -> atom','power',1,'p_power_1','cparse.py',585),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',589),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',593),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',599),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',605),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',609),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',613),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',617),
  ('atom -> STRING','atom',1,'p_atom_str','cparse.py',621),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',625),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',629),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',633),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',637),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',641),
  ('array_contents -> array_contents COMMA','array_contents',2,'p_array_litral_contents_3','cparse.py',645),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',655),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',659),
  ('argument -> expr','argument',1,'p_argument','cparse.py',663),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',667),
]
