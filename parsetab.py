
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVDEREFleftARROWPOSTINCPOSTDECADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DEREF DIV DOWHILE ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DOWHILE expr COLON suitewhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT expr %prec DEREFexpr : PLUS exprexpr : MINUS exprexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'ARROW':([22,27,30,39,46,49,62,64,65,66,67,68,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,132,137,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,179,184,192,198,199,200,219,222,228,250,258,],[-118,-141,-132,111,-133,-138,-139,-142,-140,-138,111,125,111,-143,111,111,111,111,111,111,111,-126,-127,111,111,111,111,111,111,-58,-144,-121,190,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-120,111,111,111,111,-134,111,-59,111,-8,111,-136,-135,-9,111,111,111,111,]),'ELSE':([182,206,216,234,235,245,247,253,259,],[210,226,233,233,-93,-98,-94,210,-95,]),'RBRACKET':([11,22,27,30,46,62,64,65,66,75,76,77,78,83,88,90,94,110,116,118,121,122,127,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,169,177,184,198,199,200,],[75,-118,-141,-132,-133,-139,-142,-140,-138,-143,137,-145,-130,-128,-123,-137,-126,-127,-131,-129,-125,-124,176,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-115,-105,-104,199,-120,-110,-109,-134,207,-146,-122,-136,-135,]),'LT':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[33,-5,33,33,33,33,33,33,-74,33,-118,33,-73,-141,-77,-132,-76,33,33,91,-6,33,-133,33,-138,-75,-16,33,33,33,33,-15,-139,-142,-140,-138,91,91,-143,91,-130,-3,-4,91,-128,91,-123,-137,33,33,33,-126,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-127,33,33,-17,33,-131,33,-129,-125,-124,91,91,33,-144,33,-121,33,-107,-103,91,-108,91,91,91,91,-116,-117,91,-101,-102,91,91,-105,-104,91,-120,-110,-109,91,91,-134,91,-82,91,-87,-122,-136,-135,33,33,-78,-79,-83,33,33,-7,91,-80,91,33,-99,33,-84,-100,-98,-88,91,-81,-85,33,-86,91,]),'MULT':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[34,-5,34,34,34,34,34,34,-74,34,-118,34,-73,-141,-77,-132,-76,34,34,92,-6,34,-133,34,-138,-75,-16,34,34,34,34,-15,-139,-142,-140,-138,92,92,-143,92,-130,-3,-4,92,-128,92,-123,-137,34,34,34,-126,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-127,34,34,-17,34,-131,34,-129,92,92,92,92,34,-144,34,-121,34,92,-103,92,92,92,92,92,92,92,92,92,92,92,92,92,-105,-104,92,-120,92,92,92,92,-134,92,-82,92,-87,-122,-136,-135,34,34,-78,-79,-83,34,34,-7,92,-80,92,34,-99,34,-84,-100,-98,-88,92,-81,-85,34,-86,92,]),'RBRACE':([22,27,30,46,62,64,65,66,69,71,75,78,83,88,90,94,110,116,118,121,122,128,129,130,131,135,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,169,171,175,176,178,181,186,187,198,199,200,203,204,207,213,214,215,222,231,240,],[-118,-141,-132,-133,-139,-142,-140,-138,-54,-56,-143,-130,-128,-123,-137,-126,-127,-131,-129,-125,-124,-64,-65,-63,-62,181,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-115,-105,-104,-120,-110,-109,-134,-52,-57,-67,-66,-55,-48,-150,-122,-136,-135,-41,224,-68,-45,232,-46,-53,-47,-42,]),'INCLUDE':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[36,-5,36,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,36,-7,-80,36,-99,-84,-100,-98,-88,-81,-85,-86,]),'LSHIFT':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,100,-133,-138,-139,-142,-140,-138,100,100,-143,100,-130,100,-128,100,-123,-137,-126,-127,-131,-129,-125,-124,100,100,-144,-121,100,-103,100,100,100,100,100,100,-116,-117,100,-101,-102,100,100,-105,-104,100,-120,100,100,100,100,-134,100,100,-122,-136,-135,100,100,100,100,]),'ENDIF':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[37,-5,37,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,37,-7,-80,37,-99,-84,-100,-98,-88,-81,-85,-86,]),'AMP':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[38,-5,38,38,38,38,38,38,-74,38,-118,38,-73,-141,-77,-132,-76,38,38,98,-6,38,-133,38,-138,-75,-16,38,38,38,38,-15,-139,-142,-140,-138,98,98,-143,98,-130,-3,-4,98,-128,98,-123,-137,38,38,38,-126,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-127,38,38,-17,38,-131,38,-129,-125,-124,98,98,38,-144,38,-121,38,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,98,-115,-105,-104,98,-120,-110,-109,98,98,-134,98,-82,98,-87,-122,-136,-135,38,38,-78,-79,-83,38,38,-7,98,-80,98,38,-99,38,-84,-100,-98,-88,98,-81,-85,38,-86,98,]),'AND':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,99,-133,-138,-139,-142,-140,-138,99,99,-143,99,-130,99,-128,99,-123,-137,-126,-127,-131,-129,-125,-124,99,99,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,99,-101,-102,99,-115,-105,-104,99,-120,-110,-109,99,99,-134,99,99,-122,-136,-135,99,99,99,99,]),'STRUCT':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[14,-5,14,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,14,-7,-80,14,-99,-84,-100,-98,-88,-81,-85,-86,]),'INV':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[45,-5,45,45,45,45,45,45,-74,45,45,-73,-77,-76,45,45,-6,45,45,-75,-16,45,45,45,45,-15,-3,-4,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-17,45,45,45,45,45,-82,-87,45,45,-78,-79,-83,45,45,-7,-80,45,-99,45,-84,-100,-98,-88,-81,-85,45,-86,]),'RSHIFT':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,101,-133,-138,-139,-142,-140,-138,101,101,-143,101,-130,101,-128,101,-123,-137,-126,-127,-131,-129,-125,-124,101,101,-144,-121,101,-103,101,101,101,101,101,101,-116,-117,101,-101,-102,101,101,-105,-104,101,-120,101,101,101,101,-134,101,101,-122,-136,-135,101,101,101,101,]),'RETURN':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[6,-5,6,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,6,-7,-80,6,-99,-84,-100,-98,-88,-81,-85,-86,]),'DIV':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,107,-133,-138,-139,-142,-140,-138,107,107,-143,107,-130,107,-128,107,-123,-137,-126,-127,-131,-129,107,107,107,107,-144,-121,107,-103,107,107,107,107,107,107,107,107,107,107,107,107,107,-105,-104,107,-120,107,107,107,107,-134,107,107,-122,-136,-135,107,107,107,107,]),'ELLIPSIS':([143,220,],[196,196,]),'DEFINE':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[44,-5,44,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,44,-7,-80,44,-99,-84,-100,-98,-88,-81,-85,-86,]),'$end':([0,5,15,16,18,26,28,32,40,52,53,57,61,80,81,114,182,188,205,206,209,218,225,242,245,249,252,253,257,],[-150,-5,0,-1,-74,-73,-77,-76,-6,-75,-16,-2,-15,-3,-4,-17,-82,-87,-78,-79,-83,-7,-80,-84,-98,-88,-81,-85,-86,]),'TYPEDEF':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[9,-5,9,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,9,-7,-80,9,-99,-84,-100,-98,-88,-81,-85,-86,]),'COMMA':([22,27,30,46,62,64,65,66,69,71,75,76,77,78,83,88,90,94,110,116,118,121,122,128,129,130,131,133,134,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,167,168,169,170,171,175,176,178,181,184,186,187,193,194,195,196,197,198,199,200,203,204,207,208,221,222,231,239,240,250,251,258,],[-118,-141,-132,-133,-139,-142,-140,-138,-54,-56,-143,138,-145,-130,-128,-123,-137,-126,-127,-131,-129,-125,-124,-64,-65,-63,-62,180,-60,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-115,-105,-104,-120,-110,-109,-148,-149,-134,201,-52,-57,-67,-66,-55,-146,-48,213,-11,-12,-10,-13,220,-122,-136,-135,-41,223,-68,-61,-147,-53,-47,-14,-42,-96,255,-97,]),'IF':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[10,-5,10,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,10,-7,-80,10,-99,-84,-100,-98,-88,-81,-85,-86,]),'LPAR':([0,5,6,9,10,11,13,16,17,18,19,23,26,27,28,30,32,33,34,38,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,72,73,75,80,81,86,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,119,125,127,137,138,144,180,182,188,190,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[23,-5,23,72,23,23,23,23,23,-74,23,23,-73,-141,-77,-132,-76,72,23,23,-6,23,117,23,-138,-75,-16,23,23,23,23,-15,-139,-142,-140,-138,72,72,-143,-3,-4,143,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-17,23,23,72,72,23,-144,23,23,72,-82,-87,72,23,23,-78,-79,-83,23,23,-7,-80,23,-99,23,-84,-100,-98,-88,-81,-85,23,-86,]),'DEC':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[47,-5,47,47,47,47,47,47,-74,47,-118,47,-73,-141,-77,-132,-76,47,47,110,-6,47,-133,47,-138,-75,-16,47,47,47,47,-15,-139,-142,-140,-138,110,110,-143,110,-130,-3,-4,110,-128,110,-123,-137,47,47,47,-126,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-127,47,47,-17,47,-131,47,-129,-125,-124,110,110,47,-144,47,-121,47,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,110,-115,-105,-104,110,-120,-110,-109,110,110,-134,110,-82,110,-87,-122,-136,-135,47,47,-78,-79,-83,47,47,-7,110,-80,110,47,-99,47,-84,-100,-98,-88,110,-81,-85,47,-86,110,]),'OR':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,102,-133,-138,-139,-142,-140,-138,102,102,-143,102,-130,102,-128,102,-123,-137,-126,-127,-131,-129,-125,-124,102,102,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,102,-115,-105,-104,102,-120,-110,-109,102,102,-134,102,102,-122,-136,-135,102,102,102,102,]),'STRING':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,36,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[27,-5,27,27,27,27,27,27,-74,27,27,-73,-77,-76,27,89,27,-6,27,27,-75,-16,27,27,27,27,-15,-3,-4,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-17,27,27,27,27,27,-82,-87,27,27,-78,-79,-83,27,27,-7,-80,27,-99,27,-84,-100,-98,-88,-81,-85,27,-86,]),'CASE':([216,234,235,245,247,259,],[237,237,-93,-98,-94,-95,]),'GE':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,112,-133,-138,-139,-142,-140,-138,112,112,-143,112,-130,112,-128,112,-123,-137,-126,-127,-131,-129,-125,-124,112,112,-144,-121,-107,-103,112,-108,112,112,112,112,-116,-117,112,-101,-102,112,112,-105,-104,112,-120,-110,-109,112,112,-134,112,112,-122,-136,-135,112,112,112,112,]),'IFNDEF':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[24,-5,24,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,24,-7,-80,24,-99,-84,-100,-98,-88,-81,-85,-86,]),'RPAR':([22,27,30,46,62,64,65,66,69,71,72,75,78,83,84,88,90,94,110,116,117,118,121,122,128,129,130,131,133,134,137,141,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,167,168,169,170,171,175,176,178,181,193,194,195,196,197,198,199,200,207,208,221,222,239,],[-118,-141,-132,-133,-139,-142,-140,-138,-54,-56,132,-143,-130,-128,141,-123,-137,-126,-127,-131,169,-129,-125,-124,-64,-65,-63,-62,179,-60,-144,-121,192,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-115,-105,-104,-120,-110,-109,-148,-149,-134,200,-52,-57,-67,-66,-55,-11,-12,-10,-13,219,-122,-136,-135,-68,-61,-147,-53,-14,]),'NAME':([0,5,6,9,10,11,13,14,16,17,18,19,23,24,25,26,28,32,33,34,38,40,44,45,47,52,53,54,55,56,59,60,61,69,70,71,72,73,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,117,119,125,127,128,129,130,131,138,139,143,144,172,175,176,178,180,181,182,188,190,201,202,205,206,207,209,211,212,213,218,220,223,225,229,230,237,242,244,245,249,252,253,255,257,],[49,-5,66,69,66,66,66,79,49,66,-74,66,66,85,86,-73,-77,-76,69,66,66,-6,115,66,66,-75,-16,120,66,66,66,66,-15,-54,126,-56,69,69,-3,-4,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,163,66,66,-17,66,66,69,69,66,-64,-65,-63,-62,66,185,193,66,203,-57,-67,-66,69,-55,-82,-87,69,66,66,-78,-79,-68,-83,66,49,185,-7,193,240,-80,49,-99,66,-84,-100,-98,-88,-81,-85,66,-86,]),'COLON':([22,27,30,46,49,62,64,65,66,74,75,78,82,83,88,90,94,110,116,118,121,122,123,124,137,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,169,185,192,193,198,199,200,210,219,226,228,233,250,251,258,],[-118,-141,-132,-133,119,-139,-142,-140,-138,136,-143,-130,140,-128,-123,-137,-126,-127,-131,-129,-125,-124,173,174,-144,-121,191,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-115,-105,-104,-120,-110,-109,-134,119,-8,119,-122,-136,-135,227,-9,241,243,246,-96,256,-97,]),'SWITCH':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[17,-5,17,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,17,-7,-80,17,-99,-84,-100,-98,-88,-81,-85,-86,]),'INDENT':([183,189,],[212,216,]),'NE':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,93,-133,-138,-139,-142,-140,-138,93,93,-143,93,-130,93,-128,93,-123,-137,-126,-127,-131,-129,-125,-124,93,93,-144,-121,-107,-103,-119,-108,93,-106,93,93,-116,-117,93,-101,-102,93,93,-105,-104,93,-120,-110,-109,93,93,-134,93,93,-122,-136,-135,93,93,93,93,]),'INC':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[19,-5,19,19,19,19,19,19,-74,19,-118,19,-73,-141,-77,-132,-76,19,19,94,-6,19,-133,19,-138,-75,-16,19,19,19,19,-15,-139,-142,-140,-138,94,94,-143,94,-130,-3,-4,94,-128,94,-123,-137,19,19,19,-126,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-127,19,19,-17,19,-131,19,-129,-125,-124,94,94,19,-144,19,-121,19,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,94,-115,-105,-104,94,-120,-110,-109,94,94,-134,94,-82,94,-87,-122,-136,-135,19,19,-78,-79,-83,19,19,-7,94,-80,94,19,-99,19,-84,-100,-98,-88,94,-81,-85,19,-86,94,]),'ASSIGN':([22,27,30,39,46,49,62,64,65,66,69,71,75,78,83,88,90,94,110,116,118,121,122,128,129,130,131,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,169,171,175,176,178,181,198,199,200,207,],[-118,-141,-132,105,-133,-138,-139,-142,-140,-138,-54,-56,-143,-130,-128,-123,-137,-126,-127,-131,-129,-125,-124,-64,-65,-63,-62,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-115,-105,-104,-120,-110,-109,-134,202,-57,-67,-66,-55,-122,-136,-135,-68,]),'ENUM':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[54,-5,54,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,54,-7,-80,54,-99,-84,-100,-98,-88,-81,-85,-86,]),'DEDENT':([18,26,28,32,52,53,61,114,182,188,205,206,209,218,225,229,230,234,235,236,238,242,244,245,247,248,249,252,253,254,257,259,],[-74,-73,-77,-76,-75,-16,-15,-17,-82,-87,-78,-79,-83,-7,-80,245,-99,-89,-93,249,-91,-84,-100,-98,-94,-90,-88,-81,-85,-92,-86,-95,]),'MINUS':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[55,-5,55,55,55,55,55,55,-74,55,-118,55,-73,-141,-77,-132,-76,55,55,104,-6,55,-133,55,-138,-75,-16,55,55,55,55,-15,-139,-142,-140,-138,104,104,-143,104,-130,-3,-4,104,-128,104,-123,-137,55,55,55,-126,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-127,55,55,-17,55,-131,55,-129,-125,-124,104,104,55,-144,55,-121,55,104,-103,104,104,104,104,104,104,104,104,104,-101,-102,104,104,-105,-104,104,-120,104,104,104,104,-134,104,-82,104,-87,-122,-136,-135,55,55,-78,-79,-83,55,55,-7,104,-80,104,55,-99,55,-84,-100,-98,-88,104,-81,-85,55,-86,104,]),'EQ':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,97,-133,-138,-139,-142,-140,-138,97,97,-143,97,-130,97,-128,97,-123,-137,-126,-127,-131,-129,-125,-124,97,97,-144,-121,-107,-103,-119,-108,97,-106,97,97,-116,-117,97,-101,-102,97,97,-105,-104,97,-120,-110,-109,97,97,-134,97,97,-122,-136,-135,97,97,97,97,]),'NEWLINE':([0,1,2,3,4,5,7,8,12,16,18,20,21,22,26,27,28,29,30,31,32,35,37,39,40,41,42,43,46,48,49,50,51,52,53,58,61,62,63,64,65,66,67,69,71,75,78,80,81,83,85,88,89,90,94,110,114,115,116,118,121,122,126,128,129,130,131,136,137,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,169,171,173,174,175,176,178,181,182,188,191,192,198,199,200,205,206,207,209,217,218,219,222,224,225,227,232,241,242,243,245,246,249,252,253,256,257,],[5,-21,-30,-25,-22,-5,-39,-20,-19,80,-74,-31,-38,-118,-73,-141,-77,-26,-132,-28,-76,-43,-36,-70,-6,114,-23,-24,-133,-27,-138,-51,-29,-75,-16,-37,-15,-139,-18,-142,-140,-138,-72,-54,-56,-143,-130,-3,-4,-128,-35,-123,-69,-137,-126,-127,-17,-34,-131,-129,-125,-124,-32,-64,-65,-63,-62,183,-144,189,-121,-49,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,-71,-115,-105,-104,-120,-110,-109,-33,-134,-52,183,183,-57,-67,-66,-55,-82,-87,183,-8,-122,-136,-135,-78,-79,-68,-83,-50,-7,-9,-53,-40,-80,183,-44,183,-84,183,-98,183,-88,-81,-85,183,-86,]),'LBRACKET':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,69,70,71,74,75,77,78,80,81,82,83,84,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,128,129,130,131,134,135,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,175,176,177,178,181,182,184,188,198,199,200,201,202,205,206,207,208,209,211,212,217,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[11,-5,11,11,11,11,11,11,-74,11,-118,11,-73,-141,-77,-132,-76,11,11,109,-6,11,-133,11,-138,-75,-16,11,11,11,11,-15,-139,-142,-140,-138,109,-54,127,-56,109,-143,109,-130,-3,-4,109,-128,109,127,-123,-137,11,11,11,-126,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-127,11,11,-17,11,-131,11,-129,-125,-124,109,109,11,-64,-65,-63,127,127,127,-144,11,-121,11,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,109,-115,-105,-104,109,-120,-110,-109,109,109,-134,127,-57,-67,109,-66,-55,-82,109,-87,-122,-136,-135,11,11,-78,-79,-68,127,-83,11,11,127,-7,109,-80,109,11,-99,11,-84,-100,-98,-88,109,-81,-85,11,-86,109,]),'LBRACE':([9,33,72,73,79,119,120,125,180,190,],[73,73,73,73,139,73,172,73,73,73,]),'PLUS':([0,5,6,10,11,13,16,17,18,19,22,23,26,27,28,30,32,34,38,39,40,45,46,47,49,52,53,55,56,59,60,61,62,64,65,66,67,74,75,77,78,80,81,82,83,84,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,121,122,123,124,127,137,138,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,182,184,188,198,199,200,201,202,205,206,209,211,212,218,222,225,228,229,230,237,242,244,245,249,250,252,253,255,257,258,],[56,-5,56,56,56,56,56,56,-74,56,-118,56,-73,-141,-77,-132,-76,56,56,103,-6,56,-133,56,-138,-75,-16,56,56,56,56,-15,-139,-142,-140,-138,103,103,-143,103,-130,-3,-4,103,-128,103,-123,-137,56,56,56,-126,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-127,56,56,-17,56,-131,56,-129,-125,-124,103,103,56,-144,56,-121,56,103,-103,103,103,103,103,103,103,103,103,103,-101,-102,103,103,-105,-104,103,-120,103,103,103,103,-134,103,-82,103,-87,-122,-136,-135,56,56,-78,-79,-83,56,56,-7,103,-80,103,56,-99,56,-84,-100,-98,-88,103,-81,-85,56,-86,103,]),'GT':([22,27,30,39,46,49,62,64,65,66,67,69,71,74,75,77,78,82,83,84,87,88,90,94,110,116,118,121,122,123,124,128,129,130,131,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,175,176,177,178,181,184,198,199,200,207,222,228,250,258,],[-118,-141,-132,95,-133,-138,-139,-142,-140,-138,95,-54,-56,95,-143,95,-130,95,-128,95,144,-123,-137,-126,-127,-131,-129,-125,-124,95,95,-64,-65,-63,-62,-144,-121,-107,-103,95,-108,95,95,95,95,-116,-117,95,-101,-102,95,95,-105,-104,95,-120,-110,-109,95,95,-134,-57,-67,95,-66,-55,95,-122,-136,-135,-68,95,95,95,95,]),'BREAK':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[21,-5,21,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,21,-7,-80,21,-99,-84,-100,-98,-88,-81,-85,-86,]),'CARROT':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,106,-133,-138,-139,-142,-140,-138,106,106,-143,106,-130,106,-128,106,-123,-137,-126,-127,-131,-129,-125,-124,106,106,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,106,-115,-105,-104,106,-120,-110,-109,106,106,-134,106,106,-122,-136,-135,106,106,106,106,]),'MOD':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,108,-133,-138,-139,-142,-140,-138,108,108,-143,108,-130,108,-128,108,-123,-137,-126,-127,-131,-129,108,108,108,108,-144,-121,108,-103,108,108,108,108,108,108,108,108,108,108,108,108,108,-105,-104,108,-120,108,108,108,108,-134,108,108,-122,-136,-135,108,108,108,108,]),'NOT':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[13,-5,13,13,13,13,13,13,-74,13,13,-73,-77,-76,13,13,-6,13,13,-75,-16,13,13,13,13,-15,-3,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-17,13,13,13,13,13,-82,-87,13,13,-78,-79,-83,13,13,-7,-80,13,-99,13,-84,-100,-98,-88,-81,-85,13,-86,]),'DEF':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[25,-5,25,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,25,-7,-80,25,-99,-84,-100,-98,-88,-81,-85,-86,]),'PASS':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[58,-5,58,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,58,-7,-80,58,-99,-84,-100,-98,-88,-81,-85,-86,]),'DOWHILE':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[59,-5,59,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,59,-7,-80,59,-99,-84,-100,-98,-88,-81,-85,-86,]),'FLOAT':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[65,-5,65,65,65,65,65,65,-74,65,65,-73,-77,-76,65,65,-6,65,65,-75,-16,65,65,65,65,-15,-3,-4,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-17,65,65,65,65,65,-82,-87,65,65,-78,-79,-83,65,65,-7,-80,65,-99,65,-84,-100,-98,-88,-81,-85,65,-86,]),'WHILE':([0,5,16,18,26,28,32,40,52,53,61,80,81,114,182,188,205,206,209,212,218,225,229,230,242,244,245,249,252,253,257,],[60,-5,60,-74,-73,-77,-76,-6,-75,-16,-15,-3,-4,-17,-82,-87,-78,-79,-83,60,-7,-80,60,-99,-84,-100,-98,-88,-81,-85,-86,]),'PIPE':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,96,-133,-138,-139,-142,-140,-138,96,96,-143,96,-130,96,-128,96,-123,-137,-126,-127,-131,-129,-125,-124,96,96,-144,-121,-107,-103,-119,-108,-114,-106,-113,-111,-116,-117,-112,-101,-102,96,-115,-105,-104,96,-120,-110,-109,96,96,-134,96,96,-122,-136,-135,96,96,96,96,]),'CHAR':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[64,-5,64,64,64,64,64,64,-74,64,64,-73,-77,-76,64,64,-6,64,64,-75,-16,64,64,64,64,-15,-3,-4,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-17,64,64,64,64,64,-82,-87,64,64,-78,-79,-83,64,64,-7,-80,64,-99,64,-84,-100,-98,-88,-81,-85,64,-86,]),'ELIF':([182,245,253,],[211,-98,211,]),'LE':([22,27,30,39,46,49,62,64,65,66,67,74,75,77,78,82,83,84,88,90,94,110,116,118,121,122,123,124,137,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,177,184,198,199,200,222,228,250,258,],[-118,-141,-132,113,-133,-138,-139,-142,-140,-138,113,113,-143,113,-130,113,-128,113,-123,-137,-126,-127,-131,-129,-125,-124,113,113,-144,-121,-107,-103,113,-108,113,113,113,113,-116,-117,113,-101,-102,113,113,-105,-104,113,-120,-110,-109,113,113,-134,113,113,-122,-136,-135,113,113,113,113,]),'NULL':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[30,-5,30,30,30,30,30,30,-74,30,30,-73,-77,-76,30,30,-6,30,30,-75,-16,30,30,30,30,-15,-3,-4,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-17,30,30,30,30,30,-82,-87,30,30,-78,-79,-83,30,30,-7,-80,30,-99,30,-84,-100,-98,-88,-81,-85,30,-86,]),'INT':([0,5,6,10,11,13,16,17,18,19,23,26,28,32,34,38,40,45,47,52,53,55,56,59,60,61,80,81,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,127,138,144,182,188,201,202,205,206,209,211,212,218,225,229,230,237,242,244,245,249,252,253,255,257,],[62,-5,62,62,62,62,62,62,-74,62,62,-73,-77,-76,62,62,-6,62,62,-75,-16,62,62,62,62,-15,-3,-4,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-17,62,62,62,62,62,-82,-87,62,62,-78,-79,-83,62,62,-7,-80,62,-99,62,-84,-100,-98,-88,-81,-85,62,-86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'case_list':([216,],[234,]),'switch_stmt':([0,16,212,229,],[32,32,32,32,]),'if_orelse':([182,253,],[209,257,]),'param_type_list':([9,33,72,73,119,125,180,190,],[68,68,68,68,68,68,68,68,]),'struct_decl':([0,16,212,229,],[35,35,35,35,]),'param_list_contents':([72,],[133,]),'parameters':([86,],[142,]),'ifndef_stmt':([0,16,212,229,],[1,1,1,1,]),'enum_name_list':([172,],[204,]),'func_decl':([0,16,212,229,],[3,3,3,3,]),'varargslist':([143,],[197,]),'argument':([117,201,],[167,221,]),'expr':([0,6,10,11,13,16,17,19,23,34,38,45,47,55,56,59,60,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,117,127,138,144,201,202,211,212,229,237,255,],[39,67,74,77,78,39,82,83,84,88,90,116,118,121,122,123,124,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,168,177,184,198,168,222,228,39,39,250,258,]),'endif_stmt':([0,16,212,229,],[4,4,4,4,]),'stmt':([0,16,212,229,],[40,81,230,244,]),'small_stmt':([0,16,212,229,],[41,41,41,41,]),'expr_stmt':([0,16,212,229,],[42,42,42,42,]),'array_contents':([11,],[76,]),'while_orelse':([206,],[225,]),'assign_stmt':([0,16,212,229,],[43,43,43,43,]),'case':([216,234,],[235,247,]),'define_stmt':([0,16,212,229,],[8,8,8,8,]),'default':([216,234,],[238,248,]),'pointer_or_array':([70,87,131,134,135,171,175,208,217,],[129,129,178,129,129,129,129,129,129,]),'if_stmt':([0,16,212,229,],[26,26,26,26,]),'stmts':([212,],[229,]),'include_stmt':([0,16,212,229,],[12,12,12,12,]),'enum_decl':([0,16,212,229,],[7,7,7,7,]),'var_decl_stmt':([0,16,212,229,],[29,29,29,29,]),'enum_decl_stmt':([0,16,212,229,],[48,48,48,48,]),'compound_stmt':([0,16,212,229,],[53,53,53,53,]),'module':([0,],[15,]),'stmt_list':([0,],[16,]),'varaglist_elem':([143,220,],[195,239,]),'var_decl':([0,16,139,143,212,213,220,229,],[50,50,186,194,50,231,194,50,]),'typedef_stmt':([0,16,212,229,],[51,51,51,51,]),'return_stmt':([0,16,212,229,],[63,63,63,63,]),'array':([70,87,131,134,135,171,175,208,217,],[128,128,128,128,128,128,128,128,128,]),'while_stmt':([0,16,212,229,],[18,18,18,18,]),'pass':([0,16,212,229,],[20,20,20,20,]),'arglist':([117,],[170,]),'case_expr_list':([237,],[251,]),'struct_decl_list':([139,],[187,]),'switch_suite':([140,],[188,]),'break':([0,16,212,229,],[2,2,2,2,]),'inline_func_decl':([9,33,72,73,119,125,180,190,],[71,71,71,71,71,71,71,71,]),'power':([0,6,10,11,13,16,17,19,23,34,38,45,47,55,56,59,60,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,117,127,138,144,201,202,211,212,229,237,255,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'switch_stmts':([216,],[236,]),'suite':([136,173,174,191,227,241,243,246,256,],[182,205,206,218,242,252,253,254,259,]),'type_declaration':([9,33,72,73,119,125,180,190,],[70,87,134,135,171,175,208,217,]),'empty':([0,187,],[57,215,]),'pointer':([70,87,131,134,135,171,175,208,217,],[130,130,130,130,130,130,130,130,130,]),'bracket_list':([70,87,134,135,171,175,208,217,],[131,131,131,131,131,131,131,131,]),'simple_stmt':([0,16,212,229,],[61,61,61,61,]),'atom':([0,6,10,11,13,16,17,19,23,34,38,45,47,55,56,59,60,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,115,117,127,138,144,201,202,211,212,229,237,255,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'funcdef':([0,16,212,229,],[28,28,28,28,]),'dowhile_stmt':([0,16,212,229,],[52,52,52,52,]),'optional_comma':([187,],[214,]),'struct_decl_stmt':([0,16,212,229,],[31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',53),
  ('module -> empty','module',1,'p_empty_module','cparse.py',57),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',62),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',66),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',70),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',74),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',79),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',84),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',88),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',92),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',96),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',97),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',101),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',105),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',109),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',110),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',118),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',122),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',123),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',124),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',125),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',126),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',127),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',128),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',129),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',130),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',131),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',132),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',133),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',134),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',135),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',141),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',147),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',151),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',155),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',159),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',163),
  ('break -> BREAK','break',1,'p_break','cparse.py',167),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',172),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',176),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',180),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',184),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',190),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',194),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',198),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',199),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',204),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',208),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',213),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',218),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',222),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',227),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',232),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',236),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',240),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',247),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',251),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',255),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',259),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',263),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',267),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',273),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',287),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',288),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',292),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',296),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',300),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',304),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',308),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',312),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',317),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',321),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',327),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',328),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',329),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',330),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',331),
  ('dowhile_stmt -> DOWHILE expr COLON suite','dowhile_stmt',4,'p_dowhile','cparse.py',340),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',345),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',349),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',353),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',359),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',363),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',367),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',371),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',375),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',380),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',384),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',388),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',392),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',396),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',400),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',404),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',408),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',412),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',416),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',420),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',425),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',429),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',433),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',441),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',445),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',449),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',453),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',457),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',461),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',465),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',469),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',473),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',477),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',481),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',485),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',491),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',495),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',499),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',503),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',507),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',511),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',515),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',519),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',523),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',527),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',531),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',535),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',539),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',545),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',549),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',555),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',559),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',563),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',567),
  ('atom -> NULL','atom',1,'p_null','cparse.py',571),
  ('power -> atom','power',1,'p_power_1','cparse.py',575),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',579),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',583),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',589),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',595),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',599),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',603),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',607),
  ('atom -> STRING','atom',1,'p_atom_str','cparse.py',611),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',615),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',619),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',623),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',627),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',631),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',641),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',645),
  ('argument -> expr','argument',1,'p_argument','cparse.py',649),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',653),
]
