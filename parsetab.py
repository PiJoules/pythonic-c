
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTLTLEGEleftPLUSMINUSleftMULTDIVMODrightAMPNOTCASTPREINCPREDECleftARROWPOSTINCPOSTDECAMP AND ARROW ASSIGN BREAK CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DIV DO ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT LBRACE LBRACKET LE LPAR LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR STRING STRUCT SWITCH TYPEDEF WHILE WSmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DO COLON suite WHILE exprwhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT exprexpr : PLUS exprexpr : MINUS exprexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expratom : NAMEatom : INTatom : FLOATatom : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'LPAR':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,30,31,32,33,34,36,37,39,40,42,44,52,54,55,58,60,63,66,67,69,71,73,74,75,77,78,79,82,85,86,87,88,91,94,95,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,132,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,173,178,188,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[1,1,-136,-73,67,-134,-113,-75,-5,1,1,-126,-74,-132,1,1,1,79,1,-77,1,1,-135,-16,1,-15,1,79,-6,-76,1,-133,1,1,-132,1,-118,1,79,-125,-124,-3,-4,79,79,-120,-131,-119,-123,-137,-17,143,-121,1,1,1,1,1,-122,1,1,1,1,1,1,1,1,1,1,-116,-128,79,1,1,-138,1,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,1,-129,1,1,-82,1,79,-117,79,-130,-87,-79,-78,1,-99,-83,1,-7,-80,-100,-98,1,-84,-88,-81,-85,1,-86,]),'RPAR':([2,4,5,7,17,36,58,65,66,67,69,74,75,79,80,83,85,86,87,88,91,98,104,118,119,120,121,122,128,129,131,134,135,137,138,140,143,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,175,176,177,178,180,182,183,185,186,187,192,196,206,207,208,224,],[-136,-127,-134,-113,-126,-135,-133,118,-132,119,-118,-125,-124,130,-56,-54,-120,-131,-119,-123,-137,-121,-122,-116,-128,-142,-143,165,-52,174,-60,-64,-62,-63,-65,-138,184,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-57,-55,-66,-117,-67,210,-13,-10,-12,-11,-130,-141,-53,-61,-68,-14,]),'MULT':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,85,86,87,88,90,91,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,136,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,179,181,192,194,195,197,198,199,200,201,206,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[11,11,-136,-73,-127,-134,-113,-75,-5,11,11,-126,-74,-132,11,11,11,11,-77,11,11,-135,-16,11,-15,11,-6,-76,11,-133,112,11,11,112,-132,11,-118,112,11,-125,-124,-3,-4,112,-131,112,-123,112,-137,-17,112,-121,11,11,11,11,11,-122,11,11,11,11,11,11,11,11,11,11,112,112,-116,-128,112,112,11,11,-138,11,-105,-104,112,112,112,112,112,112,-115,112,112,112,-103,112,112,112,11,-129,11,11,-82,11,-117,112,112,-130,-87,-79,112,11,-99,-83,11,112,-7,-80,-100,-98,112,11,-84,-88,112,-81,-85,11,-86,112,]),'MINUS':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,85,86,87,88,90,91,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,136,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,179,181,192,194,195,197,198,199,200,201,206,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[31,31,-136,-73,-127,-134,-113,-75,-5,31,31,-126,-74,-132,31,31,31,31,-77,31,31,-135,-16,31,-15,31,-6,-76,31,-133,103,31,31,103,-132,31,-118,103,31,-125,-124,-3,-4,-120,-131,-119,-123,103,-137,-17,103,-121,31,31,31,31,31,-122,31,31,31,31,31,31,31,31,31,31,103,103,-116,-128,103,103,31,31,-138,31,-105,-104,103,103,-102,103,-101,103,-115,103,103,103,-103,103,103,103,31,-129,31,31,-82,31,-117,103,103,-130,-87,-79,103,31,-99,-83,31,103,-7,-80,-100,-98,103,31,-84,-88,103,-81,-85,31,-86,103,]),'AMP':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[33,33,-136,-73,-127,-134,-113,-75,-5,33,33,-126,-74,33,33,33,33,-77,33,33,-135,-16,33,-15,33,-6,-76,33,-133,33,33,-132,33,-118,33,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,33,33,33,33,33,-122,33,33,33,33,33,33,33,33,33,33,-116,-128,33,33,-138,33,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,33,-129,33,33,-82,33,-117,-130,-87,-79,-78,33,-99,-83,33,-7,-80,-100,-98,33,-84,-88,-81,-85,33,-86,]),'PLUS':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,85,86,87,88,90,91,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,136,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,179,181,192,194,195,197,198,199,200,201,206,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[34,34,-136,-73,-127,-134,-113,-75,-5,34,34,-126,-74,-132,34,34,34,34,-77,34,34,-135,-16,34,-15,34,-6,-76,34,-133,106,34,34,106,-132,34,-118,106,34,-125,-124,-3,-4,-120,-131,-119,-123,106,-137,-17,106,-121,34,34,34,34,34,-122,34,34,34,34,34,34,34,34,34,34,106,106,-116,-128,106,106,34,34,-138,34,-105,-104,106,106,-102,106,-101,106,-115,106,106,106,-103,106,106,106,34,-129,34,34,-82,34,-117,106,106,-130,-87,-79,106,34,-99,-83,34,106,-7,-80,-100,-98,106,34,-84,-88,106,-81,-85,34,-86,106,]),'CHAR':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[2,2,-136,-73,-127,-134,-113,-75,-5,2,2,-126,-74,2,2,2,2,-77,2,2,-135,-16,2,-15,2,-6,-76,2,-133,2,2,-132,2,-118,2,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,2,2,2,2,2,-122,2,2,2,2,2,2,2,2,2,2,-116,-128,2,2,-138,2,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,2,-129,2,2,-82,2,-117,-130,-87,-79,-78,2,-99,-83,2,-7,-80,-100,-98,2,-84,-88,-81,-85,2,-86,]),'STRING':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,41,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[36,36,-136,-73,-127,-134,-113,-75,-5,36,36,-126,-74,36,36,36,36,-77,36,36,-135,-16,36,-15,89,36,-6,-76,36,-133,36,36,-132,36,-118,36,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,36,36,36,36,36,-122,36,36,36,36,36,36,36,36,36,36,-116,-128,36,36,-138,36,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,36,-129,36,36,-82,36,-117,-130,-87,-79,-78,36,-99,-83,36,-7,-80,-100,-98,36,-84,-88,-81,-85,36,-86,]),'GT':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,80,83,84,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,134,135,137,138,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,175,176,177,178,179,180,181,192,197,206,208,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,110,110,-132,-118,110,-125,-124,-56,-54,136,-120,-131,-119,-123,110,-137,110,-121,-122,110,110,-116,-128,110,110,-64,-62,-63,-65,-138,-105,-104,110,110,-102,110,-101,-109,-115,110,-108,110,-103,-110,110,-107,-129,-57,-55,-66,-117,110,-67,110,-130,110,110,-68,110,110,110,]),'FLOAT':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[5,5,-136,-73,-127,-134,-113,-75,-5,5,5,-126,-74,5,5,5,5,-77,5,5,-135,-16,5,-15,5,-6,-76,5,-133,5,5,-132,5,-118,5,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,5,5,5,5,5,-122,5,5,5,5,5,5,5,5,5,5,-116,-128,5,5,-138,5,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,5,-129,5,5,-82,5,-117,-130,-87,-79,-78,5,-99,-83,5,-7,-80,-100,-98,5,-84,-88,-81,-85,5,-86,]),'INDENT':([124,193,],[167,215,]),'LT':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,85,86,87,88,90,91,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,136,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,179,181,192,194,195,197,198,199,200,201,206,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[30,30,-136,-73,-127,-134,-113,-75,-5,30,30,-126,-74,-132,30,30,30,30,-77,30,30,-135,-16,30,-15,30,-6,-76,30,-133,115,30,30,115,-132,30,-118,115,30,-125,-124,-3,-4,-120,-131,-119,-123,115,-137,-17,115,-121,30,30,30,30,30,-122,30,30,30,30,30,30,30,30,30,30,115,115,-116,-128,115,115,30,30,-138,30,-105,-104,115,115,-102,115,-101,-109,-115,115,-108,115,-103,-110,115,-107,30,-129,30,30,-82,30,-117,115,115,-130,-87,-79,115,30,-99,-83,30,115,-7,-80,-100,-98,115,30,-84,-88,115,-81,-85,30,-86,115,]),'INC':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,85,86,87,88,90,91,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,136,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,179,181,192,194,195,197,198,199,200,201,206,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[39,39,-136,-73,-127,-134,-113,-75,-5,39,39,-126,-74,-132,39,39,39,39,-77,39,39,-135,-16,39,-15,39,-6,-76,39,-133,98,39,39,98,-132,39,-118,98,39,-125,-124,-3,-4,-120,-131,-119,-123,98,-137,-17,98,-121,39,39,39,39,39,-122,39,39,39,39,39,39,39,39,39,39,98,98,-116,-128,98,98,39,39,-138,39,-105,-104,98,-112,-102,98,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,39,-129,39,39,-82,39,-117,98,98,-130,-87,-79,98,39,-99,-83,39,98,-7,-80,-100,-98,98,39,-84,-88,98,-81,-85,39,-86,98,]),'RETURN':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[55,-136,-73,-127,-134,-113,-75,-5,-126,-74,55,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,55,-82,-117,-130,-87,-79,-78,55,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'ENDIF':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[43,-136,-73,-127,-134,-113,-75,-5,-126,-74,43,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,43,-82,-117,-130,-87,-79,-78,43,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'ELIF':([168,219,242,],[201,-98,201,]),'INCLUDE':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[41,-136,-73,-127,-134,-113,-75,-5,-126,-74,41,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,41,-82,-117,-130,-87,-79,-78,41,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'LBRACKET':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,80,83,84,85,86,87,88,90,91,93,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,128,131,133,134,135,136,137,138,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,175,176,177,178,179,180,181,192,194,195,197,198,199,200,201,206,207,208,211,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[42,42,-136,-73,-127,-134,-113,-75,-5,42,42,-126,-74,-132,42,42,42,42,-77,42,42,-135,-16,42,-15,42,-6,-76,42,-133,105,42,42,105,-132,42,-118,105,42,-125,-124,-3,-4,-56,-54,139,-120,-131,-119,-123,105,-137,139,-17,105,-121,42,42,42,42,42,-122,42,42,42,42,42,42,42,42,42,42,105,105,-116,-128,105,105,139,139,139,-64,139,42,-63,-65,42,-138,42,-105,-104,105,-112,-102,105,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,42,-129,42,42,-82,42,-57,-55,-66,-117,105,-67,105,-130,-87,-79,105,42,-99,-83,42,105,139,-68,139,-7,-80,-100,-98,105,42,-84,-88,105,-81,-85,42,-86,105,]),'LBRACE':([30,44,72,73,79,82,97,132,173,188,],[82,82,127,82,82,82,145,82,82,82,]),'NEWLINE':([0,2,3,4,5,7,8,9,10,13,14,15,16,17,18,21,22,23,24,25,29,32,35,36,37,38,40,43,46,47,48,50,51,52,53,54,58,59,61,62,64,66,68,69,71,74,75,76,77,78,80,83,85,86,87,88,89,91,94,96,98,104,118,119,125,126,128,134,135,137,138,140,142,144,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,168,175,176,177,178,180,184,189,192,194,195,197,200,206,208,210,211,212,214,216,219,221,223,232,233,234,235,240,241,242,244,246,],[9,-136,-73,-127,-134,-113,-75,-5,-26,-20,-24,-37,-22,-126,-23,-74,-31,-25,-21,-132,77,-77,-19,-135,-16,-29,-15,-36,94,-18,-39,-28,-38,-6,-30,-76,-133,-70,-51,-43,-27,-132,124,-118,-34,-125,-124,-35,-3,-4,-56,-54,-120,-131,-119,-123,-69,-137,-17,-72,-121,-122,-116,-128,124,-33,-52,-64,-62,-63,-65,-138,-32,-49,-105,-104,-71,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,193,124,-129,-82,-57,-55,-66,-117,-67,-8,124,-130,-87,-79,-78,-83,-53,-68,-9,-50,-7,-40,-80,-98,124,-44,124,124,-84,-88,124,-81,-85,124,-86,]),'TYPEDEF':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[44,-136,-73,-127,-134,-113,-75,-5,-126,-74,44,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,44,-82,-117,-130,-87,-79,-78,44,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'LE':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,107,107,-132,-118,107,-125,-124,-120,-131,-119,-123,107,-137,107,-121,-122,107,107,-116,-128,107,107,-138,-105,-104,107,107,-102,107,-101,-109,-115,107,-108,107,-103,-110,107,-107,-129,-117,107,107,-130,107,107,107,107,107,]),'ASSIGN':([2,4,5,7,17,25,36,58,59,66,69,74,75,80,83,85,86,87,88,91,98,104,118,119,128,134,135,137,138,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,175,176,177,178,180,192,208,],[-136,-127,-134,-113,-126,-132,-135,-133,101,-132,-118,-125,-124,-56,-54,-120,-131,-119,-123,-137,-121,-122,-116,-128,172,-64,-62,-63,-65,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-57,-55,-66,-117,-67,-130,-68,]),'SWITCH':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[60,-136,-73,-127,-134,-113,-75,-5,-126,-74,60,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,60,-82,-117,-130,-87,-79,-78,60,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'DO':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[6,-136,-73,-127,-134,-113,-75,-5,-126,-74,6,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,6,-82,-117,-130,-87,-79,-78,6,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'COLON':([2,4,5,6,7,17,25,36,58,66,69,70,74,75,85,86,87,88,91,98,104,116,117,118,119,140,144,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,169,178,184,187,192,202,210,217,220,231,236,237,247,],[-136,-127,-134,68,-113,-126,73,-135,-133,-132,-118,125,-125,-124,-120,-131,-119,-123,-137,-121,-122,162,163,-116,-128,-138,189,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,73,-117,-8,73,-130,221,-9,232,233,240,244,-96,-97,]),'IF':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[12,-136,-73,-127,-134,-113,-75,-5,-126,-74,12,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,12,-82,-117,-130,-87,-79,-78,12,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'GE':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,113,113,-132,-118,113,-125,-124,-120,-131,-119,-123,113,-137,113,-121,-122,113,113,-116,-128,113,113,-138,-105,-104,113,113,-102,113,-101,-109,-115,113,-108,113,-103,-110,113,-107,-129,-117,113,113,-130,113,113,113,113,113,]),'COMMA':([2,4,5,7,17,36,58,66,69,74,75,80,83,85,86,87,88,90,91,92,98,104,118,119,120,121,122,128,129,131,134,135,137,138,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,170,171,175,176,177,178,180,181,182,183,185,186,187,190,191,192,196,206,207,208,222,224,225,236,237,247,],[-136,-127,-134,-113,-126,-135,-133,-132,-118,-125,-124,-56,-54,-120,-131,-119,-123,-139,-137,141,-121,-122,-116,-128,-142,-143,164,-52,173,-60,-64,-62,-63,-65,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-48,203,-57,-55,-66,-117,-67,-140,209,-13,-10,-12,-11,213,-41,-130,-141,-53,-61,-68,-47,-14,-42,243,-96,-97,]),'ELLIPSIS':([143,209,],[183,183,]),'DEF':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[49,-136,-73,-127,-134,-113,-75,-5,-126,-74,49,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,49,-82,-117,-130,-87,-79,-78,49,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'DEFINE':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[19,-136,-73,-127,-134,-113,-75,-5,-126,-74,19,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,19,-82,-117,-130,-87,-79,-78,19,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'NOT':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[26,26,-136,-73,-127,-134,-113,-75,-5,26,26,-126,-74,26,26,26,26,-77,26,26,-135,-16,26,-15,26,-6,-76,26,-133,26,26,-132,26,-118,26,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,26,26,26,26,26,-122,26,26,26,26,26,26,26,26,26,26,-116,-128,26,26,-138,26,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,26,-129,26,26,-82,26,-117,-130,-87,-79,-78,26,-99,-83,26,-7,-80,-100,-98,26,-84,-88,-81,-85,26,-86,]),'AND':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,109,109,-132,-118,109,-125,-124,-120,-131,-119,-123,109,-137,109,-121,-122,109,109,-116,-128,109,109,-138,-105,-104,109,109,-102,109,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-117,109,109,-130,109,109,109,109,109,]),'BREAK':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[51,-136,-73,-127,-134,-113,-75,-5,-126,-74,51,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,51,-82,-117,-130,-87,-79,-78,51,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'PASS':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[15,-136,-73,-127,-134,-113,-75,-5,-126,-74,15,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,15,-82,-117,-130,-87,-79,-78,15,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'CASE':([215,219,226,230,238,248,],[229,-98,-93,229,-94,-95,]),'NULL':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[17,17,-136,-73,-127,-134,-113,-75,-5,17,17,-126,-74,17,17,17,17,-77,17,17,-135,-16,17,-15,17,-6,-76,17,-133,17,17,-132,17,-118,17,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,17,17,17,17,17,-122,17,17,17,17,17,17,17,17,17,17,-116,-128,17,17,-138,17,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,17,-129,17,17,-82,17,-117,-130,-87,-79,-78,17,-99,-83,17,-7,-80,-100,-98,17,-84,-88,-81,-85,17,-86,]),'MOD':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,100,100,-132,-118,100,-125,-124,100,-131,100,-123,100,-137,100,-121,-122,100,100,-116,-128,100,100,-138,-105,-104,100,100,100,100,100,100,-115,100,100,100,-103,100,100,100,-129,-117,100,100,-130,100,100,100,100,100,]),'ELSE':([168,195,215,219,226,230,238,242,248,],[202,217,231,-98,-93,231,-94,202,-95,]),'DIV':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,99,99,-132,-118,99,-125,-124,99,-131,99,-123,99,-137,99,-121,-122,99,99,-116,-128,99,99,-138,-105,-104,99,99,99,99,99,99,-115,99,99,99,-103,99,99,99,-129,-117,99,99,-130,99,99,99,99,99,]),'ENUM':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[56,-136,-73,-127,-134,-113,-75,-5,-126,-74,56,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,56,-82,-117,-130,-87,-79,-78,56,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'OR':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,102,102,-132,-118,102,-125,-124,-120,-131,-119,-123,102,-137,102,-121,-122,102,102,-116,-128,102,102,-138,-105,-104,102,-112,-102,102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-117,102,102,-130,102,102,102,102,102,]),'STRUCT':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[20,-136,-73,-127,-134,-113,-75,-5,-126,-74,20,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,20,-82,-117,-130,-87,-79,-78,20,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'$end':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,45,52,54,57,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,168,178,192,194,195,197,200,212,216,219,234,235,241,242,246,],[-144,-136,-73,-127,-134,-113,-75,-5,-126,-74,-1,-77,-135,-16,-15,-2,-6,-76,0,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-82,-117,-130,-87,-79,-78,-83,-7,-80,-98,-84,-88,-81,-85,-86,]),'INT':([0,1,2,3,4,5,7,8,9,11,12,17,21,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,60,63,66,67,69,71,74,75,77,78,85,86,87,88,91,94,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,136,139,140,141,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,192,194,195,197,198,199,200,201,212,216,218,219,229,234,235,241,242,243,246,],[58,58,-136,-73,-127,-134,-113,-75,-5,58,58,-126,-74,58,58,58,58,-77,58,58,-135,-16,58,-15,58,-6,-76,58,-133,58,58,-132,58,-118,58,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,58,58,58,58,58,-122,58,58,58,58,58,58,58,58,58,58,-116,-128,58,58,-138,58,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,58,-129,58,58,-82,58,-117,-130,-87,-79,-78,58,-99,-83,58,-7,-80,-100,-98,58,-84,-88,-81,-85,58,-86,]),'RBRACKET':([2,4,5,7,17,36,42,58,66,69,74,75,85,86,87,88,90,91,92,98,104,118,119,139,140,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,],[-136,-127,-134,-113,-126,-135,91,-133,-132,-118,-125,-124,-120,-131,-119,-123,-139,-137,140,-121,-122,-116,-128,180,-138,-105,-104,-112,-102,192,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-117,208,-140,-130,]),'DEDENT':([2,3,4,5,7,8,17,21,32,36,37,40,54,58,66,69,74,75,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,168,178,192,194,195,197,198,199,200,212,216,218,219,226,227,228,230,234,235,238,239,241,242,245,246,248,],[-136,-73,-127,-134,-113,-75,-126,-74,-77,-135,-16,-15,-76,-133,-132,-118,-125,-124,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-82,-117,-130,-87,-79,-78,219,-99,-83,-7,-80,-100,-98,-93,235,-91,-89,-84,-88,-94,-90,-81,-85,-92,-86,-95,]),'ARROW':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,81,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,130,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,174,178,179,181,184,192,197,206,210,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,108,108,-132,108,108,108,108,132,108,108,108,108,108,-137,108,-121,-122,108,108,-116,-128,108,108,-58,-138,188,108,108,108,108,108,108,108,108,-115,108,108,108,108,108,108,108,-129,-59,108,108,108,-8,-130,108,108,-9,108,108,108,]),'NE':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,111,111,-132,-118,111,-125,-124,-120,-131,-119,-123,111,-137,111,-121,-122,111,111,-116,-128,111,111,-138,-105,-104,111,111,-102,111,-101,-109,-115,111,-108,-114,-103,-110,-106,-107,-129,-117,111,111,-130,111,111,111,111,111,]),'NAME':([0,1,2,3,4,5,7,8,9,11,12,17,19,20,21,26,27,28,29,30,31,32,33,34,36,37,39,40,42,44,49,52,54,55,56,58,60,63,66,67,69,71,73,74,75,77,78,79,80,82,83,85,86,87,88,91,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,127,132,134,135,136,137,138,139,140,141,143,145,146,147,149,150,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,173,175,176,177,178,180,188,192,194,195,197,198,199,200,201,203,208,209,212,213,216,218,219,229,234,235,241,242,243,246,],[25,66,-136,-73,-127,-134,-113,-75,-5,66,66,-126,71,72,-74,66,66,76,25,83,66,-77,66,66,-135,-16,66,-15,66,83,95,-6,-76,66,97,-133,66,66,-132,66,-118,66,83,-125,-124,-3,-4,83,-56,83,-54,-120,-131,-119,-123,-137,142,-17,-121,66,66,66,66,66,-122,66,66,66,154,66,66,66,66,66,66,66,-116,-128,169,83,-64,-62,66,-63,-65,66,-138,66,187,191,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,66,-129,66,25,-82,66,83,-57,-55,-66,-117,-67,83,-130,-87,-79,-78,25,-99,-83,66,169,-68,187,-7,225,-80,-100,-98,66,-84,-88,-81,-85,66,-86,]),'WHILE':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,123,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[63,-136,-73,-127,-134,-113,-75,-5,-126,-74,63,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,166,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,63,-82,-117,-130,-87,-79,-78,63,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),'RBRACE':([2,4,5,7,17,36,58,66,69,74,75,80,83,85,86,87,88,91,98,104,118,119,128,133,134,135,137,138,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,170,171,175,176,177,178,180,190,191,192,203,204,205,206,208,222,225,],[-136,-127,-134,-113,-126,-135,-133,-132,-118,-125,-124,-56,-54,-120,-131,-119,-123,-137,-121,-122,-116,-128,-52,176,-64,-62,-63,-65,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,-48,-144,-57,-55,-66,-117,-67,214,-41,-130,-45,-46,223,-53,-68,-47,-42,]),'DEC':([0,1,2,3,4,5,7,8,9,11,12,17,21,25,26,27,29,31,32,33,34,36,37,39,40,42,52,54,55,58,59,60,63,65,66,67,69,70,71,74,75,77,78,85,86,87,88,90,91,94,96,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,121,126,136,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,167,168,172,178,179,181,192,194,195,197,198,199,200,201,206,212,216,218,219,220,229,234,235,237,241,242,243,246,247,],[27,27,-136,-73,-127,-134,-113,-75,-5,27,27,-126,-74,-132,27,27,27,27,-77,27,27,-135,-16,27,-15,27,-6,-76,27,-133,104,27,27,104,-132,27,-118,104,27,-125,-124,-3,-4,-120,-131,-119,-123,104,-137,-17,104,-121,27,27,27,27,27,-122,27,27,27,27,27,27,27,27,27,27,104,104,-116,-128,104,104,27,27,-138,27,-105,-104,104,-112,-102,104,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,27,-129,27,27,-82,27,-117,104,104,-130,-87,-79,104,27,-99,-83,27,104,-7,-80,-100,-98,104,27,-84,-88,104,-81,-85,27,-86,104,]),'EQ':([2,4,5,7,17,25,36,58,59,65,66,69,70,74,75,85,86,87,88,90,91,96,98,104,116,117,118,119,121,126,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,165,178,179,181,192,197,206,220,237,247,],[-136,-127,-134,-113,-126,-132,-135,-133,114,114,-132,-118,114,-125,-124,-120,-131,-119,-123,114,-137,114,-121,-122,114,114,-116,-128,114,114,-138,-105,-104,114,114,-102,114,-101,-109,-115,114,-108,-114,-103,-110,-106,-107,-129,-117,114,114,-130,114,114,114,114,114,]),'IFNDEF':([0,2,3,4,5,7,8,9,17,21,29,32,36,37,40,52,54,58,66,69,74,75,77,78,85,86,87,88,91,94,98,104,118,119,140,146,147,149,150,152,153,154,155,156,157,158,159,160,161,165,167,168,178,192,194,195,197,198,199,200,212,216,218,219,234,235,241,242,246,],[28,-136,-73,-127,-134,-113,-75,-5,-126,-74,28,-77,-135,-16,-15,-6,-76,-133,-132,-118,-125,-124,-3,-4,-120,-131,-119,-123,-137,-17,-121,-122,-116,-128,-138,-105,-104,-112,-102,-101,-109,-115,-111,-108,-114,-103,-110,-106,-107,-129,28,-82,-117,-130,-87,-79,-78,28,-99,-83,-7,-80,-100,-98,-84,-88,-81,-85,-86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'varargslist':([143,],[182,]),'stmt_list':([0,],[29,]),'case':([215,230,],[226,238,]),'if_stmt':([0,29,167,198,],[3,3,3,3,]),'funcdef':([0,29,167,198,],[32,32,32,32,]),'parameters':([95,],[144,]),'expr_stmt':([0,29,167,198,],[18,18,18,18,]),'pointer_or_array':([84,93,128,131,133,135,175,207,211,],[138,138,138,138,138,177,138,138,138,]),'endif_stmt':([0,29,167,198,],[16,16,16,16,]),'include_stmt':([0,29,167,198,],[35,35,35,35,]),'case_list':([215,],[230,]),'compound_stmt':([0,29,167,198,],[37,37,37,37,]),'optional_comma':([171,],[205,]),'struct_decl_list':([127,],[171,]),'suite':([68,125,163,189,221,232,233,240,244,],[123,168,195,212,234,241,242,245,248,]),'while_orelse':([195,],[216,]),'argument':([67,164,],[120,196,]),'var_decl_stmt':([0,29,167,198,],[10,10,10,10,]),'simple_stmt':([0,29,167,198,],[40,40,40,40,]),'varaglist_elem':([143,209,],[185,224,]),'dowhile_stmt':([0,29,167,198,],[8,8,8,8,]),'arglist':([67,],[122,]),'empty':([0,171,],[45,204,]),'small_stmt':([0,29,167,198,],[46,46,46,46,]),'type_declaration':([30,44,73,79,82,132,173,188,],[84,93,128,131,133,175,207,211,]),'return_stmt':([0,29,167,198,],[47,47,47,47,]),'enum_decl':([0,29,167,198,],[48,48,48,48,]),'define_stmt':([0,29,167,198,],[13,13,13,13,]),'param_list_contents':([79,],[129,]),'inline_func_decl':([30,44,73,79,82,132,173,188,],[80,80,80,80,80,80,80,80,]),'assign_stmt':([0,29,167,198,],[14,14,14,14,]),'struct_decl_stmt':([0,29,167,198,],[50,50,50,50,]),'param_type_list':([30,44,73,79,82,132,173,188,],[81,81,81,81,81,81,81,81,]),'if_orelse':([168,242,],[200,246,]),'atom':([0,1,11,12,26,27,29,31,33,34,39,42,55,60,63,67,71,99,100,101,102,103,105,106,107,109,110,111,112,113,114,115,136,139,141,164,166,167,172,198,201,229,243,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'switch_stmt':([0,29,167,198,],[54,54,54,54,]),'switch_suite':([162,],[194,]),'power':([0,1,11,12,26,27,29,31,33,34,39,42,55,60,63,67,71,99,100,101,102,103,105,106,107,109,110,111,112,113,114,115,136,139,141,164,166,167,172,198,201,229,243,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'func_decl':([0,29,167,198,],[23,23,23,23,]),'array':([84,93,128,131,133,135,175,207,211,],[134,134,134,134,134,134,134,134,134,]),'bracket_list':([84,93,128,131,133,175,207,211,],[135,135,135,135,135,135,135,135,]),'pointer':([84,93,128,131,133,135,175,207,211,],[137,137,137,137,137,137,137,137,137,]),'default':([215,230,],[228,239,]),'module':([0,],[57,]),'case_expr_list':([229,],[236,]),'while_stmt':([0,29,167,198,],[21,21,21,21,]),'pass':([0,29,167,198,],[22,22,22,22,]),'switch_stmts':([215,],[227,]),'expr':([0,1,11,12,26,27,29,31,33,34,39,42,55,60,63,67,71,99,100,101,102,103,105,106,107,109,110,111,112,113,114,115,136,139,141,164,166,167,172,198,201,229,243,],[59,65,69,70,74,75,59,85,86,87,88,90,96,116,117,121,126,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,178,179,181,121,197,59,206,59,220,237,247,]),'typedef_stmt':([0,29,167,198,],[38,38,38,38,]),'enum_name_list':([145,],[190,]),'ifndef_stmt':([0,29,167,198,],[24,24,24,24,]),'var_decl':([0,29,127,143,167,198,203,209,],[61,61,170,186,61,61,222,186,]),'array_contents':([42,],[92,]),'stmts':([167,],[198,]),'struct_decl':([0,29,167,198,],[62,62,62,62,]),'stmt':([0,29,167,198,],[52,78,199,218,]),'enum_decl_stmt':([0,29,167,198,],[64,64,64,64,]),'break':([0,29,167,198,],[53,53,53,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',48),
  ('module -> empty','module',1,'p_empty_module','cparse.py',52),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',57),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',61),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',65),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',69),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',74),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',79),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',83),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',87),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',91),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',92),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',96),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',100),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',104),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',105),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',113),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',117),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',118),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',119),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',120),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',121),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',122),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',123),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',124),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',125),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',126),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',127),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',128),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',129),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',130),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',136),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',142),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',146),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',150),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',154),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',158),
  ('break -> BREAK','break',1,'p_break','cparse.py',162),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',167),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',171),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',175),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',179),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',185),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',189),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',193),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',194),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',199),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',203),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',208),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',213),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',217),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',222),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',227),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',231),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',235),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',242),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',246),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',250),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',254),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',258),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',262),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',268),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',282),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',283),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',287),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',291),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',295),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',299),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',303),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',307),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',312),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',316),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',322),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',323),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',324),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',325),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',326),
  ('dowhile_stmt -> DO COLON suite WHILE expr','dowhile_stmt',5,'p_dowhile','cparse.py',334),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',339),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',343),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',347),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',353),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',357),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',361),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',365),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',369),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',374),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',378),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',382),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',386),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',390),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',394),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',398),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',402),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',406),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',410),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',414),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',419),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',423),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',427),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',435),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',439),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',443),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',447),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',451),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',455),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',459),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',463),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',467),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',471),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',475),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',479),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',483),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',487),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',491),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',495),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',499),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',503),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',507),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',511),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',517),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',521),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',527),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',531),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',535),
  ('atom -> NULL','atom',1,'p_null','cparse.py',539),
  ('power -> atom','power',1,'p_power_1','cparse.py',543),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',547),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',551),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',557),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',563),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',567),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',571),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',575),
  ('atom -> STRING','atom',1,'p_atom_str','cparse.py',579),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',583),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',587),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',591),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',595),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',599),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',609),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',613),
  ('argument -> expr','argument',1,'p_argument','cparse.py',617),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',621),
]
