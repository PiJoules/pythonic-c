
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVDEREFUSUBUADDleftARROWPOSTINCPOSTDECLBRACKETADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DEREF DIV DOWHILE ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF UADD USUB WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DOWHILE expr COLON suitewhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT expr %prec DEREFexpr : PLUS expr %prec UADDexpr : MINUS expr %prec USUBexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'INV':([0,1,3,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[1,1,-77,1,1,-15,1,1,-74,-6,1,-16,1,1,1,1,-76,1,-73,1,-75,1,1,-5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-17,1,-4,-3,1,1,1,-78,1,-87,-79,-82,1,1,-80,-7,1,-83,1,-99,1,-100,-98,-88,-81,-84,1,-85,-86,]),'ELIF':([205,243,256,],[223,-98,223,]),'ASSIGN':([12,15,22,27,29,38,51,52,54,66,67,70,78,80,89,94,108,115,119,121,122,123,124,127,135,136,137,140,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,174,180,186,187,188,189,191,194,215,],[-118,-133,-142,84,-140,-139,-141,-132,-138,-138,-131,-128,-56,-54,-126,-127,-143,-137,-123,-130,-129,-125,-124,-134,-65,-63,-64,-62,-114,-106,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,-101,-121,-144,206,-135,-55,-57,-122,-67,-66,-136,-68,]),'RPAR':([12,15,22,29,38,51,52,66,67,70,72,78,80,81,89,94,107,108,115,119,121,122,123,124,127,128,129,130,135,136,137,140,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,171,174,180,186,187,188,189,191,194,200,201,202,203,204,211,215,216,226,239,],[-118,-133,-142,-140,-139,-141,-132,-138,-131,-128,127,-56,-54,141,-126,-127,166,-143,-137,-123,-130,-129,-125,-124,-134,-148,-149,180,-65,-63,-64,-62,-60,192,-114,-106,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,-101,-121,-144,199,-52,-135,-55,-57,-122,-67,-66,-136,221,-11,-10,-13,-12,-147,-68,-61,-53,-14,]),'DEFINE':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[37,-77,-15,-74,-6,-16,-76,37,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,37,-80,-7,-83,37,-99,-100,-98,-88,-81,-84,-85,-86,]),'$end':([0,3,7,11,19,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,217,219,224,243,245,250,252,256,259,],[-150,-77,-2,-15,0,-74,-6,-16,-76,-1,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,-80,-7,-83,-98,-88,-81,-84,-85,-86,]),'DEF':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[39,-77,-15,-74,-6,-16,-76,39,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,39,-80,-7,-83,39,-99,-100,-98,-88,-81,-84,-85,-86,]),'STRUCT':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[4,-77,-15,-74,-6,-16,-76,4,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,4,-80,-7,-83,4,-99,-100,-98,-88,-81,-84,-85,-86,]),'COLON':([12,15,22,29,38,51,52,54,66,67,70,71,73,89,94,105,108,114,115,119,121,122,123,124,127,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,170,176,180,188,194,199,201,218,221,225,231,240,248,249,258,],[-118,-133,-142,-140,-139,-141,-132,120,-138,-131,-128,126,131,-126,-127,165,-143,172,-137,-123,-130,-129,-125,-124,-134,-114,-106,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,-101,-121,-144,197,120,-135,-122,-136,-8,120,238,-9,241,244,251,254,-96,-97,]),'INCLUDE':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[5,-77,-15,-74,-6,-16,-76,5,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,5,-80,-7,-83,5,-99,-100,-98,-88,-81,-84,-85,-86,]),'AMP':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[42,42,-77,42,42,-15,-118,-133,42,42,-74,-142,87,-6,-140,42,-16,42,42,-139,42,42,-76,42,-73,-141,-132,42,-138,-75,42,42,-5,42,42,-138,-131,-128,87,42,87,87,42,42,42,42,42,42,42,-126,42,42,42,-127,42,42,42,42,42,42,42,42,42,42,87,87,-143,87,-17,42,87,-137,-4,-3,-123,-130,-129,-125,-124,-134,87,42,42,-114,-106,87,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,87,-101,-121,-144,42,87,-78,-135,42,-87,-122,87,-136,-79,87,-82,42,42,-80,-7,42,-83,87,42,-99,42,87,-100,-98,-88,87,-81,-84,42,-85,87,-86,]),'MOD':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,88,-140,-139,-141,-132,-138,-138,-131,-128,88,88,88,-126,-127,88,88,-143,88,88,-137,-123,-130,-129,-125,-124,-134,88,88,88,88,88,-103,88,-104,-120,88,88,88,88,88,-105,88,88,88,88,88,88,88,-121,-144,88,-135,-122,88,-136,88,88,88,88,88,]),'INC':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[8,8,-77,8,8,-15,-118,-133,8,8,-74,-142,89,-6,-140,8,-16,8,8,-139,8,8,-76,8,-73,-141,-132,8,-138,-75,8,8,-5,8,8,-138,-131,-128,89,8,89,89,8,8,8,8,8,8,8,-126,8,8,8,-127,8,8,8,8,8,8,8,8,8,8,89,89,-143,89,-17,8,89,-137,-4,-3,-123,-130,-129,-125,-124,-134,89,8,8,-114,-106,89,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,89,-101,-121,-144,8,89,-78,-135,8,-87,-122,89,-136,-79,89,-82,8,8,-80,-7,8,-83,89,8,-99,8,89,-100,-98,-88,89,-81,-84,8,-85,89,-86,]),'RBRACE':([12,15,22,29,38,51,52,66,67,70,78,80,89,94,108,115,119,121,122,123,124,127,133,135,136,137,140,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,174,175,177,180,184,185,186,187,188,189,191,194,207,208,209,215,226,228,237,],[-118,-133,-142,-140,-139,-141,-132,-138,-131,-128,-56,-54,-126,-127,-143,-137,-123,-130,-129,-125,-124,-134,186,-65,-63,-64,-62,-114,-106,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,-101,-121,-144,-52,-150,-48,-135,-41,213,-55,-57,-122,-67,-66,-136,-46,227,-45,-68,-53,-47,-42,]),'ARROW':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,77,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,170,180,188,190,192,194,196,199,221,226,240,249,258,],[-118,-133,-142,90,-140,-139,-141,-132,-138,-138,90,90,90,90,90,134,-126,-127,90,90,-143,90,90,90,90,90,90,90,90,-134,90,-58,90,90,90,90,90,90,90,-120,90,90,90,90,90,90,90,90,90,90,90,90,90,-121,-144,90,198,-135,90,90,-59,-136,90,-8,-9,90,90,90,90,]),'DOWHILE':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[9,-77,-15,-74,-6,-16,-76,9,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,9,-80,-7,-83,9,-99,-100,-98,-88,-81,-84,-85,-86,]),'DEDENT':([3,11,20,31,45,48,57,111,179,183,195,205,217,219,224,229,230,232,233,234,235,242,243,245,246,247,250,252,253,256,257,259,],[-77,-15,-74,-16,-76,-73,-75,-17,-78,-87,-79,-82,-80,-7,-83,243,-99,-91,245,-93,-89,-100,-98,-88,-90,-94,-81,-84,-92,-85,-95,-86,]),'OR':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,92,-140,-139,-141,-132,-138,-138,-131,-128,92,92,92,-126,-127,92,92,-143,92,92,-137,-123,-130,-129,-125,-124,-134,92,-114,-106,92,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,92,-101,-121,-144,92,-135,-122,92,-136,92,92,92,92,92,]),'LE':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,93,-140,-139,-141,-132,-138,-138,-131,-128,93,93,93,-126,-127,93,93,-143,93,93,-137,-123,-130,-129,-125,-124,-134,93,93,93,93,93,-103,93,-104,-120,-107,93,-109,-110,-108,-105,93,-117,-116,93,-102,93,-101,-121,-144,93,-135,-122,93,-136,93,93,93,93,93,]),'DEC':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[61,61,-77,61,61,-15,-118,-133,61,61,-74,-142,94,-6,-140,61,-16,61,61,-139,61,61,-76,61,-73,-141,-132,61,-138,-75,61,61,-5,61,61,-138,-131,-128,94,61,94,94,61,61,61,61,61,61,61,-126,61,61,61,-127,61,61,61,61,61,61,61,61,61,61,94,94,-143,94,-17,61,94,-137,-4,-3,-123,-130,-129,-125,-124,-134,94,61,61,-114,-106,94,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,94,-101,-121,-144,61,94,-78,-135,61,-87,-122,94,-136,-79,94,-82,61,61,-80,-7,61,-83,94,61,-99,61,94,-100,-98,-88,94,-81,-84,61,-85,94,-86,]),'GT':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,78,79,80,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,135,136,137,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,186,187,188,189,190,191,194,196,215,226,240,249,258,],[-118,-133,-142,96,-140,-139,-141,-132,-138,-138,-131,-128,96,96,96,-56,138,-54,-126,-127,96,96,-143,96,96,-137,-123,-130,-129,-125,-124,-134,96,-65,-63,-64,-62,96,96,96,96,-103,96,-104,-120,-107,96,-109,-110,-108,-105,96,-117,-116,96,-102,96,-101,-121,-144,96,-135,-55,-57,-122,-67,96,-66,-136,96,-68,96,96,96,96,]),'DIV':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,97,-140,-139,-141,-132,-138,-138,-131,-128,97,97,97,-126,-127,97,97,-143,97,97,-137,-123,-130,-129,-125,-124,-134,97,97,97,97,97,-103,97,-104,-120,97,97,97,97,97,-105,97,97,97,97,97,97,97,-121,-144,97,-135,-122,97,-136,97,97,97,97,97,]),'AND':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,98,-140,-139,-141,-132,-138,-138,-131,-128,98,98,98,-126,-127,98,98,-143,98,98,-137,-123,-130,-129,-125,-124,-134,98,-114,-106,98,-115,-103,-113,-104,-120,-107,98,-109,-110,-108,-105,-111,-117,-116,-119,-102,98,-101,-121,-144,98,-135,-122,98,-136,98,98,98,98,98,]),'CASE':([212,234,235,243,247,257,],[236,-93,236,-98,-94,-95,]),'COMMA':([12,15,22,29,38,51,52,66,67,70,78,80,89,94,108,109,110,115,119,121,122,123,124,127,128,129,130,135,136,137,140,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,174,175,177,180,184,185,186,187,188,189,191,194,196,200,201,202,203,204,211,215,216,226,228,237,239,248,249,258,],[-118,-133,-142,-140,-139,-141,-132,-138,-131,-128,-56,-54,-126,-127,-143,168,-145,-137,-123,-130,-129,-125,-124,-134,-148,-149,181,-65,-63,-64,-62,-60,193,-114,-106,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,-101,-121,-144,-52,209,-48,-135,-41,214,-55,-57,-122,-67,-66,-136,-146,222,-11,-10,-13,-12,-147,-68,-61,-53,-47,-42,-14,255,-96,-97,]),'SWITCH':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[17,-77,-15,-74,-6,-16,-76,17,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,17,-80,-7,-83,17,-99,-100,-98,-88,-81,-84,-85,-86,]),'RETURN':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[18,-77,-15,-74,-6,-16,-76,18,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,18,-80,-7,-83,18,-99,-100,-98,-88,-81,-84,-85,-86,]),'LT':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[25,25,-77,25,25,-15,-118,-133,25,25,-74,-142,91,-6,-140,25,-16,25,25,-139,25,25,-76,25,-73,-141,-132,25,-138,-75,25,25,-5,25,25,-138,-131,-128,91,25,91,91,25,25,25,25,25,25,25,-126,25,25,25,-127,25,25,25,25,25,25,25,25,25,25,91,91,-143,91,-17,25,91,-137,-4,-3,-123,-130,-129,-125,-124,-134,91,25,25,91,91,91,91,-103,91,-104,-120,-107,91,-109,-110,-108,-105,91,-117,-116,91,-102,91,-101,-121,-144,25,91,-78,-135,25,-87,-122,91,-136,-79,91,-82,25,25,-80,-7,25,-83,91,25,-99,25,91,-100,-98,-88,91,-81,-84,25,-85,91,-86,]),'CARROT':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,85,-140,-139,-141,-132,-138,-138,-131,-128,85,85,85,-126,-127,85,85,-143,85,85,-137,-123,-130,-129,-125,-124,-134,85,-114,-106,85,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,85,-101,-121,-144,85,-135,-122,85,-136,85,85,85,85,85,]),'LSHIFT':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,100,-140,-139,-141,-132,-138,-138,-131,-128,100,100,100,-126,-127,100,100,-143,100,100,-137,-123,-130,-129,-125,-124,-134,100,100,100,100,100,-103,100,-104,-120,100,100,100,100,100,-105,100,-117,-116,100,-102,100,-101,-121,-144,100,-135,-122,100,-136,100,100,100,100,100,]),'LBRACE':([25,50,68,75,76,81,120,134,193,198,],[76,76,125,132,76,76,76,76,76,76,]),'PIPE':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,82,-140,-139,-141,-132,-138,-138,-131,-128,82,82,82,-126,-127,82,82,-143,82,82,-137,-123,-130,-129,-125,-124,-134,82,-114,-106,82,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,82,-101,-121,-144,82,-135,-122,82,-136,82,82,82,82,82,]),'EQ':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,83,-140,-139,-141,-132,-138,-138,-131,-128,83,83,83,-126,-127,83,83,-143,83,83,-137,-123,-130,-129,-125,-124,-134,83,83,-106,83,83,-103,83,-104,-120,-107,83,-109,-110,-108,-105,83,-117,-116,-119,-102,83,-101,-121,-144,83,-135,-122,83,-136,83,83,83,83,83,]),'INT':([0,1,3,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[38,38,-77,38,38,-15,38,38,-74,-6,38,-16,38,38,38,38,-76,38,-73,38,-75,38,38,-5,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-17,38,-4,-3,38,38,38,-78,38,-87,-79,-82,38,38,-80,-7,38,-83,38,-99,38,-100,-98,-88,-81,-84,38,-85,-86,]),'TYPEDEF':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[50,-77,-15,-74,-6,-16,-76,50,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,50,-80,-7,-83,50,-99,-100,-98,-88,-81,-84,-85,-86,]),'STRING':([0,1,3,5,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[51,51,-77,69,51,51,-15,51,51,-74,-6,51,-16,51,51,51,51,-76,51,-73,51,-75,51,51,-5,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-17,51,-4,-3,51,51,51,-78,51,-87,-79,-82,51,51,-80,-7,51,-83,51,-99,51,-100,-98,-88,-81,-84,51,-85,-86,]),'NULL':([0,1,3,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[52,52,-77,52,52,-15,52,52,-74,-6,52,-16,52,52,52,52,-76,52,-73,52,-75,52,52,-5,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-17,52,-4,-3,52,52,52,-78,52,-87,-79,-82,52,52,-80,-7,52,-83,52,-99,52,-100,-98,-88,-81,-84,52,-85,-86,]),'MULT':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[53,53,-77,53,53,-15,-118,-133,53,53,-74,-142,86,-6,-140,53,-16,53,53,-139,53,53,-76,53,-73,-141,-132,53,-138,-75,53,53,-5,53,53,-138,-131,-128,86,53,86,86,53,53,53,53,53,53,53,-126,53,53,53,-127,53,53,53,53,53,53,53,53,53,53,86,86,-143,86,-17,53,86,-137,-4,-3,-123,-130,-129,-125,-124,-134,86,53,53,86,86,86,86,-103,86,-104,-120,86,86,86,86,86,-105,86,86,86,86,86,86,86,-121,-144,53,86,-78,-135,53,-87,-122,86,-136,-79,86,-82,53,53,-80,-7,53,-83,86,53,-99,53,86,-100,-98,-88,86,-81,-84,53,-85,86,-86,]),'NAME':([0,1,3,4,8,9,11,17,18,20,23,25,28,30,31,32,33,34,37,39,41,42,45,47,48,50,53,57,59,61,62,64,65,72,76,78,80,81,82,83,84,85,86,87,88,90,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,118,120,125,132,134,135,136,137,138,139,140,168,171,179,181,183,186,187,189,191,193,195,198,205,206,209,210,214,215,217,219,222,223,224,229,230,236,242,243,245,250,252,255,256,259,],[54,66,-77,68,66,66,-15,66,66,-74,75,80,-6,66,-16,106,66,66,112,113,66,66,-76,54,-73,80,66,-75,66,66,-5,66,66,66,80,-56,-54,80,66,66,66,66,66,66,66,151,66,66,66,66,66,66,66,66,66,66,66,66,66,-17,66,-4,-3,173,80,176,184,80,-65,-63,-64,66,66,-62,66,201,-78,66,-87,-55,-57,-67,-66,80,-79,80,-82,66,176,54,237,-68,-80,-7,201,66,-83,54,-99,66,-100,-98,-88,-81,-84,66,-85,-86,]),'CHAR':([0,1,3,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[22,22,-77,22,22,-15,22,22,-74,-6,22,-16,22,22,22,22,-76,22,-73,22,-75,22,22,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-17,22,-4,-3,22,22,22,-78,22,-87,-79,-82,22,22,-80,-7,22,-83,22,-99,22,-100,-98,-88,-81,-84,22,-85,-86,]),'ENUM':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[23,-77,-15,-74,-6,-16,-76,23,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,23,-80,-7,-83,23,-99,-100,-98,-88,-81,-84,-85,-86,]),'ENDIF':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[24,-77,-15,-74,-6,-16,-76,24,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,24,-80,-7,-83,24,-99,-100,-98,-88,-81,-84,-85,-86,]),'ELSE':([195,205,212,234,235,243,247,256,257,],[218,225,231,-93,231,-98,-94,225,-95,]),'NE':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,101,-140,-139,-141,-132,-138,-138,-131,-128,101,101,101,-126,-127,101,101,-143,101,101,-137,-123,-130,-129,-125,-124,-134,101,101,-106,101,101,-103,101,-104,-120,-107,101,-109,-110,-108,-105,101,-117,-116,-119,-102,101,-101,-121,-144,101,-135,-122,101,-136,101,101,101,101,101,]),'BREAK':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[55,-77,-15,-74,-6,-16,-76,55,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,55,-80,-7,-83,55,-99,-100,-98,-88,-81,-84,-85,-86,]),'INDENT':([178,182,],[210,212,]),'LPAR':([0,1,3,8,9,11,15,17,18,20,22,25,28,29,30,31,33,34,38,41,42,45,47,48,50,51,52,53,54,57,59,61,62,64,65,66,72,76,81,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,108,111,112,113,116,117,120,134,138,139,167,168,179,181,183,193,195,198,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[33,33,-77,33,33,-15,72,33,33,-74,-142,81,-6,-140,33,-16,33,33,-139,33,33,-76,33,-73,81,-141,-132,33,-138,-75,33,33,-5,33,33,-138,33,81,81,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-143,-17,33,171,-4,-3,81,81,33,33,-144,33,-78,33,-87,81,-79,81,-82,33,33,-80,-7,33,-83,33,-99,33,-100,-98,-88,-81,-84,33,-85,-86,]),'PASS':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[58,-77,-15,-74,-6,-16,-76,58,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,58,-80,-7,-83,58,-99,-100,-98,-88,-81,-84,-85,-86,]),'NOT':([0,1,3,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[59,59,-77,59,59,-15,59,59,-74,-6,59,-16,59,59,59,59,-76,59,-73,59,-75,59,59,-5,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-17,59,-4,-3,59,59,59,-78,59,-87,-79,-82,59,59,-80,-7,59,-83,59,-99,59,-100,-98,-88,-81,-84,59,-85,-86,]),'GE':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,95,-140,-139,-141,-132,-138,-138,-131,-128,95,95,95,-126,-127,95,95,-143,95,95,-137,-123,-130,-129,-125,-124,-134,95,95,95,95,95,-103,95,-104,-120,-107,95,-109,-110,-108,-105,95,-117,-116,95,-102,95,-101,-121,-144,95,-135,-122,95,-136,95,95,95,95,95,]),'RBRACKET':([12,15,22,29,34,38,51,52,66,67,70,89,94,108,109,110,115,119,121,122,123,124,127,139,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,180,188,190,194,196,],[-118,-133,-142,-140,108,-139,-141,-132,-138,-131,-128,-126,-127,-143,167,-145,-137,-123,-130,-129,-125,-124,-134,189,-114,-106,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,194,-101,-121,-144,-135,-122,215,-136,-146,]),'FLOAT':([0,1,3,8,9,11,17,18,20,28,30,31,33,34,41,42,45,47,48,53,57,59,61,62,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,111,112,116,117,138,139,168,179,181,183,195,205,206,210,217,219,223,224,229,230,236,242,243,245,250,252,255,256,259,],[29,29,-77,29,29,-15,29,29,-74,-6,29,-16,29,29,29,29,-76,29,-73,29,-75,29,29,-5,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-17,29,-4,-3,29,29,29,-78,29,-87,-79,-82,29,29,-80,-7,29,-83,29,-99,29,-100,-98,-88,-81,-84,29,-85,-86,]),'WHILE':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[30,-77,-15,-74,-6,-16,-76,30,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,30,-80,-7,-83,30,-99,-100,-98,-88,-81,-84,-85,-86,]),'IF':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[41,-77,-15,-74,-6,-16,-76,41,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,41,-80,-7,-83,41,-99,-100,-98,-88,-81,-84,-85,-86,]),'NEWLINE':([0,2,3,6,10,11,12,13,14,15,16,20,21,22,24,26,27,28,29,31,35,36,38,40,43,44,45,46,47,48,49,51,52,54,55,56,57,58,60,62,63,66,67,69,70,74,78,80,89,94,106,108,111,112,115,116,117,119,121,122,123,124,126,127,131,135,136,137,140,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,172,173,174,179,180,183,186,187,188,189,191,194,195,197,199,205,213,215,217,219,220,221,224,226,227,238,241,243,244,245,250,251,252,254,256,259,],[62,-19,-77,-29,-26,-15,-118,-21,-22,-133,-18,-74,-20,-142,-36,-51,-70,-6,-140,-16,111,-23,-139,-31,-39,-25,-76,-27,117,-73,-28,-141,-132,-138,-38,-43,-75,-37,-30,-5,-24,-138,-131,-69,-128,-72,-56,-54,-126,-127,-35,-143,-17,-34,-137,-4,-3,-123,-130,-129,-125,-124,178,-134,182,-65,-63,-64,-62,-114,-106,-71,-115,-103,-113,-104,-120,-107,-112,-109,-110,-108,-105,-111,-117,-116,-119,-102,-101,178,-121,-144,-33,-49,178,-32,-52,-78,-135,-87,-55,-57,-122,-67,-66,-136,-79,178,-8,-82,-40,-68,-80,-7,-50,-9,-83,-53,-44,178,178,-98,178,-88,-81,178,-84,178,-85,-86,]),'IFNDEF':([0,3,11,20,28,31,45,47,48,57,62,111,116,117,179,183,195,205,210,217,219,224,229,230,242,243,245,250,252,256,259,],[32,-77,-15,-74,-6,-16,-76,32,-73,-75,-5,-17,-4,-3,-78,-87,-79,-82,32,-80,-7,-83,32,-99,-100,-98,-88,-81,-84,-85,-86,]),'RSHIFT':([12,15,22,27,29,38,51,52,54,66,67,70,71,73,74,89,94,105,107,108,110,114,115,119,121,122,123,124,127,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,169,180,188,190,194,196,226,240,249,258,],[-118,-133,-142,99,-140,-139,-141,-132,-138,-138,-131,-128,99,99,99,-126,-127,99,99,-143,99,99,-137,-123,-130,-129,-125,-124,-134,99,99,99,99,99,-103,99,-104,-120,99,99,99,99,99,-105,99,-117,-116,99,-102,99,-101,-121,-144,99,-135,-122,99,-136,99,99,99,99,99,]),'MINUS':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[64,64,-77,64,64,-15,-118,-133,64,64,-74,-142,102,-6,-140,64,-16,64,64,-139,64,64,-76,64,-73,-141,-132,64,-138,-75,64,64,-5,64,64,-138,-131,-128,102,64,102,102,64,64,64,64,64,64,64,-126,64,64,64,-127,64,64,64,64,64,64,64,64,64,64,102,102,-143,102,-17,64,102,-137,-4,-3,-123,-130,-129,-125,-124,-134,102,64,64,102,102,102,102,-103,102,-104,-120,102,102,102,102,102,-105,102,102,102,102,-102,102,-101,-121,-144,64,102,-78,-135,64,-87,-122,102,-136,-79,102,-82,64,64,-80,-7,64,-83,102,64,-99,64,102,-100,-98,-88,102,-81,-84,64,-85,102,-86,]),'ELLIPSIS':([171,222,],[203,203,]),'LBRACKET':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,78,79,80,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,118,119,121,122,123,124,127,129,133,135,136,137,138,139,140,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,174,179,180,181,183,186,187,188,189,190,191,194,195,196,205,206,210,215,216,217,219,220,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[34,34,-77,34,34,-15,-118,-133,34,34,-74,-142,103,-6,-140,34,-16,34,34,-139,34,34,-76,34,-73,-141,-132,34,-138,-75,34,34,-5,34,34,-138,103,103,103,34,103,103,-56,139,-54,34,34,34,34,34,34,34,-126,34,34,34,-127,34,34,34,34,34,34,34,34,34,34,103,103,-143,103,-17,34,103,103,-4,-3,139,103,103,103,103,103,-134,103,139,-65,-63,-64,34,34,139,139,103,103,103,103,103,103,103,-120,103,103,103,103,103,103,103,103,103,103,103,103,103,-121,-144,34,103,139,-78,-135,34,-87,-55,-57,103,-67,103,-66,-136,-79,103,-82,34,34,-68,139,-80,-7,139,34,-83,103,34,-99,34,103,-100,-98,-88,103,-81,-84,34,-85,103,-86,]),'PLUS':([0,1,3,8,9,11,12,15,17,18,20,22,27,28,29,30,31,33,34,38,41,42,45,47,48,51,52,53,54,57,59,61,62,64,65,66,67,70,71,72,73,74,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,121,122,123,124,127,129,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,179,180,181,183,188,190,194,195,196,205,206,210,217,219,223,224,226,229,230,236,240,242,243,245,249,250,252,255,256,258,259,],[65,65,-77,65,65,-15,-118,-133,65,65,-74,-142,104,-6,-140,65,-16,65,65,-139,65,65,-76,65,-73,-141,-132,65,-138,-75,65,65,-5,65,65,-138,-131,-128,104,65,104,104,65,65,65,65,65,65,65,-126,65,65,65,-127,65,65,65,65,65,65,65,65,65,65,104,104,-143,104,-17,65,104,-137,-4,-3,-123,-130,-129,-125,-124,-134,104,65,65,104,104,104,104,-103,104,-104,-120,104,104,104,104,104,-105,104,104,104,104,-102,104,-101,-121,-144,65,104,-78,-135,65,-87,-122,104,-136,-79,104,-82,65,65,-80,-7,65,-83,104,65,-99,65,104,-100,-98,-88,104,-81,-84,65,-85,104,-86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameters':([113,],[170,]),'small_stmt':([0,47,210,229,],[35,35,35,35,]),'struct_decl_list':([125,],[175,]),'include_stmt':([0,47,210,229,],[2,2,2,2,]),'expr_stmt':([0,47,210,229,],[36,36,36,36,]),'enum_name_list':([132,],[185,]),'funcdef':([0,47,210,229,],[3,3,3,3,]),'enum_decl_stmt':([0,47,210,229,],[46,46,46,46,]),'stmts':([210,],[229,]),'case_expr_list':([236,],[248,]),'pass':([0,47,210,229,],[40,40,40,40,]),'param_list_contents':([81,],[143,]),'typedef_stmt':([0,47,210,229,],[6,6,6,6,]),'empty':([0,175,],[7,207,]),'atom':([0,1,8,9,17,18,30,33,34,41,42,47,53,59,61,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,112,138,139,168,181,206,210,223,229,236,255,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'optional_comma':([175,],[208,]),'if_orelse':([205,256,],[224,259,]),'var_decl_stmt':([0,47,210,229,],[10,10,10,10,]),'param_type_list':([25,50,76,81,120,134,193,198,],[77,77,77,77,77,77,77,77,]),'simple_stmt':([0,47,210,229,],[11,11,11,11,]),'power':([0,1,8,9,17,18,30,33,34,41,42,47,53,59,61,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,112,138,139,168,181,206,210,223,229,236,255,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ifndef_stmt':([0,47,210,229,],[13,13,13,13,]),'endif_stmt':([0,47,210,229,],[14,14,14,14,]),'enum_decl':([0,47,210,229,],[43,43,43,43,]),'pointer_or_array':([79,118,133,140,142,174,187,216,220,],[135,135,135,191,135,135,135,135,135,]),'while_orelse':([195,],[217,]),'array':([79,118,133,140,142,174,187,216,220,],[137,137,137,137,137,137,137,137,137,]),'switch_stmts':([212,],[233,]),'pointer':([79,118,133,140,142,174,187,216,220,],[136,136,136,136,136,136,136,136,136,]),'varargslist':([171,],[200,]),'suite':([126,165,172,197,238,241,244,251,254,],[179,195,205,219,250,252,253,256,257,]),'bracket_list':([79,118,133,142,174,187,216,220,],[140,140,140,140,140,140,140,140,]),'case_list':([212,],[235,]),'func_decl':([0,47,210,229,],[44,44,44,44,]),'switch_stmt':([0,47,210,229,],[45,45,45,45,]),'compound_stmt':([0,47,210,229,],[31,31,31,31,]),'while_stmt':([0,47,210,229,],[20,20,20,20,]),'stmt_list':([0,],[47,]),'if_stmt':([0,47,210,229,],[48,48,48,48,]),'struct_decl_stmt':([0,47,210,229,],[49,49,49,49,]),'return_stmt':([0,47,210,229,],[16,16,16,16,]),'inline_func_decl':([25,50,76,81,120,134,193,198,],[78,78,78,78,78,78,78,78,]),'case':([212,235,],[234,247,]),'define_stmt':([0,47,210,229,],[21,21,21,21,]),'varaglist_elem':([171,222,],[202,239,]),'argument':([72,181,],[128,211,]),'dowhile_stmt':([0,47,210,229,],[57,57,57,57,]),'var_decl':([0,47,125,171,209,210,222,229,],[26,26,177,204,228,26,204,26,]),'struct_decl':([0,47,210,229,],[56,56,56,56,]),'array_contents':([34,],[109,]),'expr':([0,1,8,9,17,18,30,33,34,41,42,47,53,59,61,64,65,72,82,83,84,85,86,87,88,91,92,93,95,96,97,98,99,100,101,102,103,104,112,138,139,168,181,206,210,223,229,236,255,],[27,67,70,71,73,74,105,107,110,114,115,27,119,121,122,123,124,129,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,169,188,190,196,129,226,27,240,27,249,258,]),'switch_suite':([131,],[183,]),'stmt':([0,47,210,229,],[28,116,230,242,]),'break':([0,47,210,229,],[60,60,60,60,]),'default':([212,235,],[232,246,]),'type_declaration':([25,50,76,81,120,134,193,198,],[79,118,133,142,174,187,216,220,]),'arglist':([72,],[130,]),'assign_stmt':([0,47,210,229,],[63,63,63,63,]),'module':([0,],[19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',63),
  ('module -> empty','module',1,'p_empty_module','cparse.py',67),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',72),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',76),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',80),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',84),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',89),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',94),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',98),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',102),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',106),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',107),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',111),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',115),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',119),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',120),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',128),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',132),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',133),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',134),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',135),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',136),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',137),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',138),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',139),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',140),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',141),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',142),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',143),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',144),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',145),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',151),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',157),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',161),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',165),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',169),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',173),
  ('break -> BREAK','break',1,'p_break','cparse.py',177),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',182),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',186),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',190),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',194),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',200),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',204),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',208),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',209),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',214),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',218),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',223),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',228),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',232),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',237),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',242),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',246),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',250),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',257),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',261),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',265),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',269),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',273),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',277),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',283),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',297),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',298),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',302),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',306),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',310),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',314),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',318),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',322),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',327),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',331),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',337),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',338),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',339),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',340),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',341),
  ('dowhile_stmt -> DOWHILE expr COLON suite','dowhile_stmt',4,'p_dowhile','cparse.py',350),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',355),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',359),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',363),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',369),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',373),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',377),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',381),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',385),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',390),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',394),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',398),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',402),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',406),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',410),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',414),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',418),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',422),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',426),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',430),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',435),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',439),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',443),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',451),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',455),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',459),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',463),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',467),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',471),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',475),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',479),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',483),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',487),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',491),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',495),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',501),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',505),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',509),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',513),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',517),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',521),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',525),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',529),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',533),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',537),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',541),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',545),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',549),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',555),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',559),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',565),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',569),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',573),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',577),
  ('atom -> NULL','atom',1,'p_null','cparse.py',581),
  ('power -> atom','power',1,'p_power_1','cparse.py',585),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',589),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',593),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',599),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',605),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',609),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',613),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',617),
  ('atom -> STRING','atom',1,'p_atom_str','cparse.py',621),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',625),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',629),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',633),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',637),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',641),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',651),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',655),
  ('argument -> expr','argument',1,'p_argument','cparse.py',659),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',663),
]
