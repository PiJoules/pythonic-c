
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVleftARROWPOSTINCPOSTDECADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DIV DOWHILE ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DOWHILE expr COLON suitewhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT exprexpr : PLUS exprexpr : MINUS exprexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'RETURN':([0,3,11,16,19,20,28,32,39,50,64,77,78,120,201,203,204,205,209,220,222,224,231,232,242,243,244,245,250,253,257,],[1,-15,-75,-6,-76,1,-77,-73,-5,-74,-16,-4,-3,-17,-78,-79,-82,-87,-7,1,-80,-83,1,-99,-98,-100,-81,-84,-88,-85,-86,]),'INCLUDE':([0,3,11,16,19,20,28,32,39,50,64,77,78,120,201,203,204,205,209,220,222,224,231,232,242,243,244,245,250,253,257,],[2,-15,-75,-6,-76,2,-77,-73,-5,-74,-16,-4,-3,-17,-78,-79,-82,-87,-7,2,-80,-83,2,-99,-98,-100,-81,-84,-88,-85,-86,]),'NAME':([0,1,3,7,11,13,14,16,19,20,21,23,24,25,28,29,30,32,33,38,39,42,43,44,47,49,50,53,55,56,60,64,65,69,71,72,73,75,76,77,78,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,112,120,127,129,130,131,132,133,139,140,141,143,171,175,177,178,179,181,183,196,199,201,203,204,205,207,209,212,213,216,220,222,224,225,231,232,240,242,243,244,245,250,253,255,257,],[34,66,-15,69,-75,66,71,-6,-76,34,79,80,81,66,-77,83,66,-73,66,66,-5,71,66,66,66,66,-74,66,66,66,66,-16,66,66,-54,-56,128,71,71,-4,-3,71,66,66,66,66,66,66,66,66,66,66,155,66,66,66,66,66,66,66,66,66,66,66,-17,-64,-62,66,-63,-65,71,184,190,193,66,66,-66,-67,-57,71,-55,71,66,66,-78,-79,-82,-87,-68,-7,184,190,230,34,-80,-83,66,34,-99,66,-98,-100,-81,-84,-88,-85,66,-86,]),'LPAR':([0,1,3,4,5,11,13,14,16,19,20,25,28,30,32,33,34,37,38,39,42,43,44,47,49,50,52,53,55,56,57,60,62,64,65,66,69,75,76,77,78,80,86,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,107,108,109,110,111,112,120,130,133,142,143,171,179,183,196,199,201,203,204,205,209,220,222,224,225,231,232,240,242,243,244,245,250,253,255,257,],[13,13,-15,-139,-140,-75,13,75,-6,-76,13,13,-77,13,-73,13,-138,112,13,-5,75,13,13,13,13,-74,-132,13,13,13,-141,13,-142,-16,13,-138,13,75,75,-4,-3,139,-143,75,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-17,13,75,-144,13,13,75,75,13,13,-78,-79,-82,-87,-7,13,-80,-83,13,13,-99,13,-98,-100,-81,-84,-88,-85,13,-86,]),'CARROT':([4,5,34,35,36,37,52,57,62,66,67,70,82,84,85,86,104,105,113,115,116,117,118,119,121,122,123,124,125,126,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,176,195,197,198,202,218,235,251,258,],[-139,-140,-138,89,-118,-133,-132,-141,-142,-138,89,89,-128,-129,89,-143,-126,-127,89,89,89,-130,89,-124,-125,-137,-131,-123,89,-121,-144,-115,89,-106,-108,-105,-110,-111,-107,-117,-102,-120,-109,89,-113,-104,-101,-116,-112,-119,-114,-103,89,-134,89,89,-136,-135,-122,89,89,89,89,]),'INT':([0,1,3,11,13,16,19,20,25,28,30,32,33,38,39,43,44,47,49,50,53,55,56,60,64,65,69,77,78,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,107,108,109,110,111,112,120,130,143,171,196,199,201,203,204,205,209,220,222,224,225,231,232,240,242,243,244,245,250,253,255,257,],[4,4,-15,-75,4,-6,-76,4,4,-77,4,-73,4,4,-5,4,4,4,4,-74,4,4,4,4,-16,4,4,-4,-3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-17,4,4,4,4,4,-78,-79,-82,-87,-7,4,-80,-83,4,4,-99,4,-98,-100,-81,-84,-88,-85,4,-86,]),'FLOAT':([0,1,3,11,13,16,19,20,25,28,30,32,33,38,39,43,44,47,49,50,53,55,56,60,64,65,69,77,78,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,107,108,109,110,111,112,120,130,143,171,196,199,201,203,204,205,209,220,222,224,225,231,232,240,242,243,244,245,250,253,255,257,],[5,5,-15,-75,5,-6,-76,5,5,-77,5,-73,5,5,-5,5,5,5,5,-74,5,5,5,5,-16,5,5,-4,-3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-17,5,5,5,5,5,-78,-79,-82,-87,-7,5,-80,-83,5,5,-99,5,-98,-100,-81,-84,-88,-85,5,-86,]),'DOWHILE':([0,3,11,16,19,20,28,32,39,50,64,77,78,120,201,203,204,205,209,220,222,224,231,232,242,243,244,245,250,253,257,],[38,-15,-75,-6,-76,38,-77,-73,-5,-74,-16,-4,-3,-17,-78,-79,-82,-87,-7,38,-80,-83,38,-99,-98,-100,-81,-84,-88,-85,-86,]),'DEFINE':([0,3,11,16,19,20,28,32,39,50,64,77,78,120,201,203,204,205,209,220,222,224,231,232,242,243,244,245,250,253,257,],[7,-15,-75,-6,-76,7,-77,-73,-5,-74,-16,-4,-3,-17,-78,-79,-82,-87,-7,7,-80,-83,7,-99,-98,-100,-81,-84,-88,-85,-86,]),'LBRACKET':([0,1,3,4,5,11,13,16,19,20,25,28,30,32,33,34,35,36,37,38,39,43,44,47,49,50,52,53,55,56,57,60,62,64,65,66,67,69,70,71,72,73,77,78,82,84,85,86,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,134,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,171,175,176,177,178,181,195,196,197,198,199,201,202,203,204,205,207,208,209,210,218,220,222,224,225,231,232,235,240,242,243,244,245,250,251,253,255,257,258,],[33,33,-15,-139,-140,-75,33,-6,-76,33,33,-77,33,-73,33,-138,90,-118,-133,33,-5,33,33,33,33,-74,-132,33,33,33,-141,33,-142,-16,33,-138,90,33,90,-54,-56,130,-4,-3,-128,-129,90,-143,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-126,-127,33,33,33,33,33,33,33,90,130,90,90,-130,90,-124,-17,-125,-137,-131,-123,90,-121,-64,130,33,-63,-65,130,130,-144,33,130,-115,90,-106,-108,-105,-110,-111,-107,-117,-102,-120,-109,90,-113,-104,-101,-116,-112,-119,-114,-103,90,-134,33,-66,90,-67,-57,-55,90,33,-136,-135,33,-78,-122,-79,-82,-87,-68,130,-7,130,90,33,-80,-83,33,33,-99,90,33,-98,-100,-81,-84,-88,90,-85,33,-86,90,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'case_list':([226,],[236,]),'while_orelse':([203,],[222,]),'expr':([0,1,13,20,25,30,33,38,43,44,47,49,53,55,56,60,65,69,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,107,108,109,110,111,112,130,143,171,196,199,220,225,231,240,255,],[35,67,70,35,82,84,85,113,115,116,117,118,119,121,122,123,124,125,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,176,195,202,218,166,35,235,35,251,258,]),'power':([0,1,13,20,25,30,33,38,43,44,47,49,53,55,56,60,65,69,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,107,108,109,110,111,112,130,143,171,196,199,220,225,231,240,255,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'if_stmt':([0,20,220,231,],[32,32,32,32,]),'default':([226,236,],[241,247,]),'atom':([0,1,13,20,25,30,33,38,43,44,47,49,53,55,56,60,65,69,89,90,91,92,93,94,95,96,97,98,100,101,102,103,106,107,108,109,110,111,112,130,143,171,196,199,220,225,231,240,255,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'varaglist_elem':([139,212,],[186,227,]),'argument':([112,199,],[167,219,]),'var_decl_stmt':([0,20,220,231,],[8,8,8,8,]),'break':([0,20,220,231,],[9,9,9,9,]),'pointer_or_array':([73,114,129,134,137,144,178,208,210,],[132,132,175,132,132,132,132,132,132,]),'param_list_contents':([75,],[136,]),'param_type_list':([14,42,75,76,88,133,179,183,],[74,74,74,74,74,74,74,74,]),'typedef_stmt':([0,20,220,231,],[10,10,10,10,]),'dowhile_stmt':([0,20,220,231,],[11,11,11,11,]),'module':([0,],[41,]),'func_decl':([0,20,220,231,],[12,12,12,12,]),'simple_stmt':([0,20,220,231,],[3,3,3,3,]),'inline_func_decl':([14,42,75,76,88,133,179,183,],[72,72,72,72,72,72,72,72,]),'switch_stmts':([226,],[238,]),'include_stmt':([0,20,220,231,],[15,15,15,15,]),'array':([73,114,129,134,137,144,178,208,210,],[127,127,127,127,127,127,127,127,127,]),'type_declaration':([14,42,75,76,88,133,179,183,],[73,114,134,137,144,178,208,210,]),'empty':([0,192,],[46,215,]),'define_stmt':([0,20,220,231,],[48,48,48,48,]),'switch_suite':([174,],[205,]),'stmts':([220,],[231,]),'parameters':([80,],[138,]),'while_stmt':([0,20,220,231,],[50,50,50,50,]),'return_stmt':([0,20,220,231,],[17,17,17,17,]),'enum_name_list':([141,],[194,]),'suite':([170,172,173,182,233,234,246,249,256,],[201,203,204,209,244,245,253,254,259,]),'var_decl':([0,20,139,140,212,213,220,231,],[63,63,185,191,185,228,63,63,]),'switch_stmt':([0,20,220,231,],[19,19,19,19,]),'stmt':([0,20,220,231,],[16,77,232,243,]),'optional_comma':([192,],[214,]),'case':([226,236,],[239,248,]),'stmt_list':([0,],[20,]),'pointer':([73,114,129,134,137,144,178,208,210,],[131,131,131,131,131,131,131,131,131,]),'small_stmt':([0,20,220,231,],[54,54,54,54,]),'assign_stmt':([0,20,220,231,],[22,22,22,22,]),'array_contents':([33,],[87,]),'struct_decl_list':([140,],[192,]),'bracket_list':([73,114,134,137,144,178,208,210,],[129,129,129,129,129,129,129,129,]),'if_orelse':([204,253,],[224,257,]),'struct_decl':([0,20,220,231,],[58,58,58,58,]),'pass':([0,20,220,231,],[26,26,26,26,]),'struct_decl_stmt':([0,20,220,231,],[27,27,27,27,]),'funcdef':([0,20,220,231,],[28,28,28,28,]),'endif_stmt':([0,20,220,231,],[45,45,45,45,]),'arglist':([112,],[168,]),'ifndef_stmt':([0,20,220,231,],[31,31,31,31,]),'expr_stmt':([0,20,220,231,],[61,61,61,61,]),'case_expr_list':([240,],[252,]),'varargslist':([139,],[189,]),'enum_decl':([0,20,220,231,],[59,59,59,59,]),'compound_stmt':([0,20,220,231,],[64,64,64,64,]),'enum_decl_stmt':([0,20,220,231,],[40,40,40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',52),
  ('module -> empty','module',1,'p_empty_module','cparse.py',56),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',61),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',65),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',69),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',73),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',78),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',83),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',87),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',91),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',95),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',96),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',100),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',104),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',108),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',109),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',117),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',121),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',122),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',123),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',124),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',125),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',126),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',127),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',128),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',129),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',130),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',131),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',132),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',133),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',134),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',140),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',146),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',150),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',154),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',158),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',162),
  ('break -> BREAK','break',1,'p_break','cparse.py',166),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',171),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',175),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',179),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',183),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',189),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',193),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',197),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',198),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',203),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',207),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',212),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',217),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',221),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',226),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',231),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',235),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',239),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',246),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',250),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',254),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',258),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',262),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',266),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',272),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',286),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',287),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',291),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',295),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',299),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',303),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',307),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',311),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',316),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',320),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',326),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',327),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',328),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',329),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',330),
  ('dowhile_stmt -> DOWHILE expr COLON suite','dowhile_stmt',4,'p_dowhile','cparse.py',339),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',344),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',348),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',352),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',358),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',362),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',366),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',370),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',374),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',379),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',383),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',387),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',391),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',395),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',399),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',403),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',407),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',411),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',415),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',419),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',424),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',428),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',432),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',440),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',444),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',448),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',452),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',456),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',460),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',464),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',468),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',472),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',476),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',480),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',484),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',490),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',494),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',498),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',502),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',506),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',510),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',514),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',518),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',522),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',526),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',530),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',534),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',538),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',544),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',548),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',554),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',558),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',562),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',566),
  ('atom -> NULL','atom',1,'p_null','cparse.py',570),
  ('power -> atom','power',1,'p_power_1','cparse.py',574),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',578),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',582),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',588),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',594),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',598),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',602),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',606),
  ('atom -> STRING','atom',1,'p_atom_str','cparse.py',610),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',614),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',618),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',622),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',626),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',630),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',640),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',644),
  ('argument -> expr','argument',1,'p_argument','cparse.py',648),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',652),
]
