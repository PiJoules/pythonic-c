
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVDEREFUSUBUADDleftARROWPOSTINCPOSTDECPERIODLBRACKETADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DEREF DIV DOWHILE ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PERIOD PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF UADD USUB WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suitefuncdef : DEF NAME parameters ARROW type_declaration COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE stringexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DOWHILE expr COLON suitewhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : expr PERIOD NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT expr %prec DEREFexpr : PLUS expr %prec UADDexpr : MINUS expr %prec USUBexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : stringstring : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarray_contents : array_contents COMMAarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'COLON':([3,9,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,112,114,117,124,126,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,155,159,161,162,163,173,175,177,181,185,190,191,199,201,202,205,206,208,212,215,221,224,227,233,238,251,252,263,],[-141,-119,101,-142,-145,-144,-135,-134,-143,-125,-140,-132,128,129,-128,-129,153,-130,-126,-131,158,-127,-57,-55,-133,-146,-139,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,-115,-116,-114,-102,-117,-121,-110,-120,189,-63,-65,-64,-66,-136,-123,-147,-138,101,101,-9,-67,-68,-58,-56,-137,-124,232,234,243,-10,-69,249,256,260,-97,-98,]),'RPAR':([3,9,25,30,42,54,60,63,68,69,73,88,98,104,105,107,110,112,114,115,117,119,122,124,126,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,152,156,159,161,162,163,166,167,170,171,172,173,175,177,181,190,192,193,194,195,199,201,202,205,206,208,216,227,228,229,244,],[-141,-119,-142,-145,-144,-135,-134,-143,-125,-140,-132,-128,-129,-130,-126,-131,-127,-57,-55,168,-133,173,175,-146,-139,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,-115,-116,-114,-102,-117,-121,-110,-120,-53,191,-63,-65,-64,-66,204,-61,206,-152,-153,-136,-123,-147,-138,-12,-11,-13,224,-14,-67,-68,-58,-56,-137,-124,-54,-69,-62,-151,-15,]),'MOD':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,78,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,78,78,-128,-129,78,-130,-126,-131,78,-127,-133,78,78,78,-146,-139,78,-122,-105,78,78,78,78,-104,78,78,-106,78,78,78,78,78,78,78,78,-121,78,78,78,78,-136,-123,-147,-138,78,-137,-124,78,78,78,78,78,]),'INDENT':([178,184,],[210,217,]),'DEFINE':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[1,-16,1,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,1,-81,-84,-7,-100,1,-101,-99,-82,-85,-89,-8,-86,-87,]),'DOWHILE':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[39,-16,39,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,39,-81,-84,-7,-100,39,-101,-99,-82,-85,-89,-8,-86,-87,]),'LSHIFT':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,95,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,95,95,-128,-129,95,-130,-126,-131,95,-127,-133,95,95,95,-146,-139,95,-122,-105,95,95,95,95,-104,-103,95,-106,95,-118,95,95,95,95,-102,-117,-121,95,95,95,95,-136,-123,-147,-138,95,-137,-124,95,95,95,95,95,]),'MINUS':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[41,-141,41,-16,-119,41,-6,41,-17,-77,41,41,84,-140,-142,41,-145,41,41,-74,41,-78,41,41,-144,-5,41,-75,-135,41,41,-134,41,-143,-76,41,41,-125,-140,-4,-3,-132,84,84,41,41,41,41,41,41,41,41,41,41,-128,41,41,41,41,41,41,41,41,-129,41,41,84,-130,-126,-131,84,-127,-133,-18,41,84,84,84,-146,-139,84,-122,-105,84,84,84,84,-104,-103,84,-106,84,84,84,84,84,84,-102,84,-121,84,84,84,41,84,-136,41,-123,41,-147,-80,-83,-138,41,-88,-79,84,-137,41,-124,84,41,-81,-84,41,84,-7,-100,41,84,41,-101,-99,-82,-85,84,-89,-8,-86,41,-87,84,]),'STRING':([0,5,6,7,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[42,42,-16,42,42,-6,42,-17,-77,42,42,42,42,42,-74,42,-78,42,42,-5,42,-75,42,42,42,-76,42,42,-4,-3,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-18,42,42,42,42,-80,-83,42,-88,-79,42,42,-81,-84,42,-7,-100,42,42,-101,-99,-82,-85,-89,-8,-86,42,-87,]),'LPAR':([0,3,5,6,12,13,15,16,19,20,22,24,25,26,30,31,33,35,36,37,39,41,42,44,46,48,53,54,55,58,59,60,62,63,65,66,67,69,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,101,106,115,116,118,119,124,160,165,174,176,177,179,180,182,183,188,198,203,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[59,-141,59,-16,59,-6,59,-17,-77,59,59,-140,-142,59,-145,59,59,-74,59,-78,59,59,-144,115,-5,59,-75,119,115,59,59,-134,59,-143,-76,59,59,-140,-4,-3,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,115,156,115,115,-18,59,-146,59,115,59,59,-147,-80,-83,59,-88,115,-79,115,59,59,-81,-84,59,-7,-100,59,59,-101,-99,-82,-85,-89,-8,-86,59,-87,]),'MULT':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[5,-141,5,-16,-119,5,-6,5,-17,-77,5,5,83,-140,-142,5,-145,5,5,-74,5,-78,5,5,-144,-5,5,-75,-135,5,5,-134,5,-143,-76,5,5,-125,-140,-4,-3,-132,83,83,5,5,5,5,5,5,5,5,5,5,-128,5,5,5,5,5,5,5,5,-129,5,5,83,-130,-126,-131,83,-127,-133,-18,5,83,83,83,-146,-139,83,-122,-105,83,83,83,83,-104,83,83,-106,83,83,83,83,83,83,83,83,-121,83,83,83,5,83,-136,5,-123,5,-147,-80,-83,-138,5,-88,-79,83,-137,5,-124,83,5,-81,-84,5,83,-7,-100,5,83,5,-101,-99,-82,-85,83,-89,-8,-86,5,-87,83,]),'ENDIF':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[43,-16,43,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,43,-81,-84,-7,-100,43,-101,-99,-82,-85,-89,-8,-86,-87,]),'AND':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,85,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,85,85,-128,-129,85,-130,-126,-131,85,-127,-133,85,85,85,-146,-139,85,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,85,-118,85,-115,-116,-114,-102,-117,-121,-110,-120,85,85,-136,-123,-147,-138,85,-137,-124,85,85,85,85,85,]),'INCLUDE':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[7,-16,7,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,7,-81,-84,-7,-100,7,-101,-99,-82,-85,-89,-8,-86,-87,]),'DIV':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,86,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,86,86,-128,-129,86,-130,-126,-131,86,-127,-133,86,86,86,-146,-139,86,-122,-105,86,86,86,86,-104,86,86,-106,86,86,86,86,86,86,86,86,-121,86,86,86,86,-136,-123,-147,-138,86,-137,-124,86,86,86,86,86,]),'TYPEDEF':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[44,-16,44,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,44,-81,-84,-7,-100,44,-101,-99,-82,-85,-89,-8,-86,-87,]),'ELSE':([179,180,217,236,239,247,253,258,264,],[212,215,238,238,-94,-99,-95,215,-96,]),'DEDENT':([6,16,19,35,37,53,65,118,179,180,183,198,211,213,222,230,231,236,237,239,240,246,247,248,250,253,254,255,257,258,261,262,264,],[-16,-17,-77,-74,-78,-75,-76,-18,-80,-83,-88,-79,-81,-84,-7,-100,247,-90,255,-94,-92,-101,-99,-82,-85,-95,-91,-89,-8,-86,-93,-87,-96,]),'PIPE':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,91,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,91,91,-128,-129,91,-130,-126,-131,91,-127,-133,91,91,91,-146,-139,91,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,91,-115,-116,-114,-102,-117,-121,-110,-120,91,91,-136,-123,-147,-138,91,-137,-124,91,91,91,91,91,]),'RBRACE':([3,9,25,30,42,54,60,63,68,69,73,88,98,104,105,107,110,112,114,117,124,126,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,152,159,161,162,163,169,173,175,177,181,186,187,196,197,199,201,202,205,206,208,216,218,219,220,227,241,245,],[-141,-119,-142,-145,-144,-135,-134,-143,-125,-140,-132,-128,-129,-130,-126,-131,-127,-57,-55,-133,-146,-139,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,-115,-116,-114,-102,-117,-121,-110,-120,-53,-63,-65,-64,-66,205,-136,-123,-147,-138,-154,-49,225,-42,-67,-68,-58,-56,-137,-124,-54,-47,-46,242,-69,-48,-43,]),'PASS':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[47,-16,47,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,47,-81,-84,-7,-100,47,-101,-99,-82,-85,-89,-8,-86,-87,]),'INV':([0,5,6,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[48,48,-16,48,-6,48,-17,-77,48,48,48,48,48,-74,48,-78,48,48,-5,48,-75,48,48,48,-76,48,48,-4,-3,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-18,48,48,48,48,-80,-83,48,-88,-79,48,48,-81,-84,48,-7,-100,48,48,-101,-99,-82,-85,-89,-8,-86,48,-87,]),'GT':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,112,114,117,120,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,159,161,162,163,172,173,175,177,181,199,200,201,202,205,206,208,209,216,227,233,252,263,],[-141,-119,79,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,79,79,-128,-129,79,-130,-126,-131,79,-127,-57,-55,-133,174,79,79,79,-146,-139,79,-122,-105,-109,-111,-108,79,-104,-103,79,-106,79,-118,79,79,79,79,-102,-117,-121,-110,79,79,-63,-65,-64,-66,79,-136,-123,-147,-138,-67,79,-68,-58,-56,-137,-124,79,79,-69,79,79,79,]),'PERIOD':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,77,-140,-142,-145,-144,-135,-134,-143,77,-140,77,77,77,-128,-129,77,77,77,77,77,77,77,77,77,77,-146,77,77,-122,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-121,77,77,77,77,-136,-123,-147,-138,77,-137,77,77,77,77,77,77,]),'ARROW':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,113,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,155,168,172,173,175,177,181,191,200,204,206,208,209,216,224,233,252,263,],[-141,-119,96,-140,-142,-145,-144,-135,-134,-143,96,-140,96,96,96,-128,-129,96,96,96,96,96,96,165,96,96,96,96,-146,96,96,-122,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-121,96,96,96,188,-59,96,-136,-123,-147,-138,-9,96,-60,-137,96,96,96,-10,96,96,96,]),'STRUCT':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[28,-16,28,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,28,-81,-84,-7,-100,28,-101,-99,-82,-85,-89,-8,-86,-87,]),'NOT':([0,5,6,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[15,15,-16,15,-6,15,-17,-77,15,15,15,15,15,-74,15,-78,15,15,-5,15,-75,15,15,15,-76,15,15,-4,-3,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-18,15,15,15,15,-80,-83,15,-88,-79,15,15,-81,-84,15,-7,-100,15,15,-101,-99,-82,-85,-89,-8,-86,15,-87,]),'ELLIPSIS':([156,223,],[195,195,]),'ASSIGN':([3,9,23,24,25,30,42,54,60,63,68,69,73,88,98,104,105,107,110,112,114,117,124,126,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,152,159,161,162,163,173,175,177,181,199,201,202,205,206,208,227,],[-141,-119,100,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,-128,-129,-130,-126,-131,-127,-57,-55,-133,-146,-139,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,-115,-116,-114,-102,-117,-121,-110,-120,182,-63,-65,-64,-66,-136,-123,-147,-138,-67,-68,-58,-56,-137,-124,-69,]),'GE':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,80,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,80,80,-128,-129,80,-130,-126,-131,80,-127,-133,80,80,80,-146,-139,80,-122,-105,-109,-111,-108,80,-104,-103,80,-106,80,-118,80,80,80,80,-102,-117,-121,-110,80,80,80,-136,-123,-147,-138,80,-137,-124,80,80,80,80,80,]),'$end':([0,6,12,13,16,19,21,35,37,46,50,53,65,71,72,118,179,180,183,198,211,213,222,247,248,250,255,257,258,262,],[-154,-16,-1,-6,-17,-77,0,-74,-78,-5,-2,-75,-76,-4,-3,-18,-80,-83,-88,-79,-81,-84,-7,-99,-82,-85,-89,-8,-86,-87,]),'IFNDEF':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[17,-16,17,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,17,-81,-84,-7,-100,17,-101,-99,-82,-85,-89,-8,-86,-87,]),'NEWLINE':([0,2,3,4,6,8,9,10,11,12,13,14,16,18,19,23,24,25,27,29,30,32,35,37,40,42,43,45,46,47,49,51,52,53,54,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,88,98,104,105,107,110,112,114,117,118,121,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,155,158,159,161,162,163,164,173,175,177,179,180,181,183,189,191,198,199,201,202,205,206,208,211,213,216,221,222,224,225,227,232,234,242,243,247,248,249,250,255,256,257,258,260,262,],[46,-25,-141,-24,-16,-52,-119,-26,-23,72,-6,-21,-17,-40,-77,-71,-140,-142,-27,-31,-145,-22,-74,-78,-32,-144,-37,-28,-5,-38,-19,-20,118,-75,-135,-39,-29,-134,-44,-143,-30,-76,-35,-125,-140,-70,-4,-3,-132,-36,-128,-129,-130,-126,-131,-127,-57,-55,-133,-18,-73,-146,-139,-34,178,178,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,-115,-116,-114,-102,-117,-121,-110,-120,-72,-53,184,-50,178,-63,-65,-64,-66,-33,-136,-123,-147,-80,-83,-138,-88,178,-9,-79,-67,-68,-58,-56,-137,-124,-81,-84,-54,-51,-7,-10,-41,-69,178,178,-45,178,-99,-82,178,-85,-89,178,-8,-86,178,-87,]),'INT':([0,5,6,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[3,3,-16,3,-6,3,-17,-77,3,3,3,3,3,-74,3,-78,3,3,-5,3,-75,3,3,3,-76,3,3,-4,-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-18,3,3,3,3,-80,-83,3,-88,-79,3,3,-81,-84,3,-7,-100,3,3,-101,-99,-82,-85,-89,-8,-86,3,-87,]),'WHILE':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[20,-16,20,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,20,-81,-84,-7,-100,20,-101,-99,-82,-85,-89,-8,-86,-87,]),'IF':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[22,-16,22,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,22,-81,-84,-7,-100,22,-101,-99,-82,-85,-89,-8,-86,-87,]),'LT':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[55,-141,55,-16,-119,55,-6,55,-17,-77,55,55,81,-140,-142,55,-145,55,55,-74,55,-78,55,55,-144,-5,55,-75,-135,55,55,-134,55,-143,-76,55,55,-125,-140,-4,-3,-132,81,81,55,55,55,55,55,55,55,55,55,55,-128,55,55,55,55,55,55,55,55,-129,55,55,81,-130,-126,-131,81,-127,-133,-18,55,81,81,81,-146,-139,81,-122,-105,-109,-111,-108,81,-104,-103,81,-106,81,-118,81,81,81,81,-102,-117,-121,-110,81,81,55,81,-136,55,-123,55,-147,-80,-83,-138,55,-88,-79,81,-137,55,-124,81,55,-81,-84,55,81,-7,-100,55,81,55,-101,-99,-82,-85,81,-89,-8,-86,55,-87,81,]),'BREAK':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[56,-16,56,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,56,-81,-84,-7,-100,56,-101,-99,-82,-85,-89,-8,-86,-87,]),'NAME':([0,1,5,6,12,13,15,16,17,19,20,22,26,28,31,33,34,35,36,37,38,39,41,44,46,48,53,55,58,59,62,65,66,67,71,72,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,99,100,101,111,112,114,115,116,118,119,154,156,157,159,160,161,162,163,165,174,176,179,180,182,183,188,198,199,201,202,203,205,207,210,211,213,214,219,222,223,226,227,230,231,235,246,247,248,250,255,257,258,259,262,],[24,67,69,-16,24,-6,69,-17,74,-77,69,69,69,103,69,69,106,-74,69,-78,108,69,69,114,-5,69,-75,114,69,69,69,-76,69,69,-4,-3,130,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,148,69,69,69,114,164,-57,-55,114,114,-18,69,185,190,197,-63,69,-65,-64,-66,114,69,69,-80,-83,69,-88,114,-79,-67,-68,-58,114,-56,69,24,-81,-84,69,185,-7,190,245,-69,-100,24,69,-101,-99,-82,-85,-89,-8,-86,69,-87,]),'CASE':([217,236,239,247,253,264,],[235,235,-94,-99,-95,-96,]),'RETURN':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[58,-16,58,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,58,-81,-84,-7,-100,58,-101,-99,-82,-85,-89,-8,-86,-87,]),'SWITCH':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[26,-16,26,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,26,-81,-84,-7,-100,26,-101,-99,-82,-85,-89,-8,-86,-87,]),'NULL':([0,5,6,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[60,60,-16,60,-6,60,-17,-77,60,60,60,60,60,-74,60,-78,60,60,-5,60,-75,60,60,60,-76,60,60,-4,-3,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-18,60,60,60,60,-80,-83,60,-88,-79,60,60,-81,-84,60,-7,-100,60,60,-101,-99,-82,-85,-89,-8,-86,60,-87,]),'EQ':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,82,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,82,82,-128,-129,82,-130,-126,-131,82,-127,-133,82,82,82,-146,-139,82,-122,-105,-109,-111,-108,-107,-104,-103,82,-106,82,-118,82,82,82,82,-102,-117,-121,-110,-120,82,82,-136,-123,-147,-138,82,-137,-124,82,82,82,82,82,]),'OR':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,87,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,87,87,-128,-129,87,-130,-126,-131,87,-127,-133,87,87,87,-146,-139,87,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,87,-115,-116,-114,-102,-117,-121,-110,-120,87,87,-136,-123,-147,-138,87,-137,-124,87,87,87,87,87,]),'CARROT':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,92,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,92,92,-128,-129,92,-130,-126,-131,92,-127,-133,92,92,92,-146,-139,92,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,92,-115,-116,-114,-102,-117,-121,-110,-120,92,92,-136,-123,-147,-138,92,-137,-124,92,92,92,92,92,]),'CHAR':([0,5,6,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[30,30,-16,30,-6,30,-17,-77,30,30,30,30,30,-74,30,-78,30,30,-5,30,-75,30,30,30,-76,30,30,-4,-3,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,30,30,30,30,-80,-83,30,-88,-79,30,30,-81,-84,30,-7,-100,30,30,-101,-99,-82,-85,-89,-8,-86,30,-87,]),'LBRACKET':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,111,112,114,117,118,119,120,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,159,160,161,162,163,167,169,172,173,174,175,176,177,179,180,181,182,183,198,199,200,201,202,205,206,207,208,209,210,211,213,214,216,221,222,227,228,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[62,-141,62,-16,-119,62,-6,62,-17,-77,62,62,90,-140,-142,62,-145,62,62,-74,62,-78,62,62,-144,-5,62,-75,-135,62,62,-134,62,-143,-76,62,62,90,-140,-4,-3,90,90,90,62,62,62,62,62,62,62,62,62,62,-128,62,62,62,62,62,62,62,62,-129,62,62,90,90,90,90,90,90,160,-57,-55,90,-18,62,160,90,90,90,-146,90,90,-122,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-121,90,90,90,160,160,62,-65,-64,-66,160,160,90,-136,62,-123,62,-147,-80,-83,-138,62,-88,-79,-67,90,-68,-58,-56,-137,62,90,90,62,-81,-84,62,90,160,-7,-69,160,-100,62,90,62,-101,-99,-82,-85,90,-89,-8,-86,62,-87,90,]),'FLOAT':([0,5,6,12,13,15,16,19,20,22,26,31,33,35,36,37,39,41,46,48,53,58,59,62,65,66,67,71,72,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,118,119,160,174,176,179,180,182,183,198,207,210,211,213,214,222,230,231,235,246,247,248,250,255,257,258,259,262,],[25,25,-16,25,-6,25,-17,-77,25,25,25,25,25,-74,25,-78,25,25,-5,25,-75,25,25,25,-76,25,25,-4,-3,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-18,25,25,25,25,-80,-83,25,-88,-79,25,25,-81,-84,25,-7,-100,25,25,-101,-99,-82,-85,-89,-8,-86,25,-87,]),'INC':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[31,-141,31,-16,-119,31,-6,31,-17,-77,31,31,88,-140,-142,31,-145,31,31,-74,31,-78,31,31,-144,-5,31,-75,-135,31,31,-134,31,-143,-76,31,31,-125,-140,-4,-3,-132,88,88,31,31,31,31,31,31,31,31,31,31,-128,31,31,31,31,31,31,31,31,-129,31,31,88,-130,-126,-131,88,-127,-133,-18,31,88,88,88,-146,-139,88,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,88,-115,-116,-114,-102,-117,-121,-110,-120,88,31,88,-136,31,-123,31,-147,-80,-83,-138,31,-88,-79,88,-137,31,-124,88,31,-81,-84,31,88,-7,-100,31,88,31,-101,-99,-82,-85,88,-89,-8,-86,31,-87,88,]),'DEF':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[34,-16,34,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,34,-81,-84,-7,-100,34,-101,-99,-82,-85,-89,-8,-86,-87,]),'PLUS':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[33,-141,33,-16,-119,33,-6,33,-17,-77,33,33,94,-140,-142,33,-145,33,33,-74,33,-78,33,33,-144,-5,33,-75,-135,33,33,-134,33,-143,-76,33,33,-125,-140,-4,-3,-132,94,94,33,33,33,33,33,33,33,33,33,33,-128,33,33,33,33,33,33,33,33,-129,33,33,94,-130,-126,-131,94,-127,-133,-18,33,94,94,94,-146,-139,94,-122,-105,94,94,94,94,-104,-103,94,-106,94,94,94,94,94,94,-102,94,-121,94,94,94,33,94,-136,33,-123,33,-147,-80,-83,-138,33,-88,-79,94,-137,33,-124,94,33,-81,-84,33,94,-7,-100,33,94,33,-101,-99,-82,-85,94,-89,-8,-86,33,-87,94,]),'ELIF':([180,247,258,],[214,-99,214,]),'AMP':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[66,-141,66,-16,-119,66,-6,66,-17,-77,66,66,93,-140,-142,66,-145,66,66,-74,66,-78,66,66,-144,-5,66,-75,-135,66,66,-134,66,-143,-76,66,66,-125,-140,-4,-3,-132,93,93,66,66,66,66,66,66,66,66,66,66,-128,66,66,66,66,66,66,66,66,-129,66,66,93,-130,-126,-131,93,-127,-133,-18,66,93,93,93,-146,-139,93,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,93,-115,-116,-114,-102,-117,-121,-110,-120,93,66,93,-136,66,-123,66,-147,-80,-83,-138,66,-88,-79,93,-137,66,-124,93,66,-81,-84,66,93,-7,-100,66,93,66,-101,-99,-82,-85,93,-89,-8,-86,66,-87,93,]),'RBRACKET':([3,9,25,30,42,54,60,62,63,68,69,73,88,98,104,105,107,110,117,123,124,125,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,160,173,175,176,177,181,200,206,208,209,],[-141,-119,-142,-145,-144,-135,-134,124,-143,-125,-140,-132,-128,-129,-130,-126,-131,-127,-133,-148,-146,177,-139,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,181,-115,-116,-114,-102,-117,-121,-110,-120,201,-136,-123,-150,-147,-138,227,-137,-124,-149,]),'LE':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,97,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,97,97,-128,-129,97,-130,-126,-131,97,-127,-133,97,97,97,-146,-139,97,-122,-105,-109,-111,-108,97,-104,-103,97,-106,97,-118,97,97,97,97,-102,-117,-121,-110,97,97,97,-136,-123,-147,-138,97,-137,-124,97,97,97,97,97,]),'DEC':([0,3,5,6,9,12,13,15,16,19,20,22,23,24,25,26,30,31,33,35,36,37,39,41,42,46,48,53,54,58,59,60,62,63,65,66,67,68,69,71,72,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,104,105,107,109,110,117,118,119,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,160,172,173,174,175,176,177,179,180,181,182,183,198,200,206,207,208,209,210,211,213,214,216,222,230,231,233,235,246,247,248,250,252,255,257,258,259,262,263,],[36,-141,36,-16,-119,36,-6,36,-17,-77,36,36,98,-140,-142,36,-145,36,36,-74,36,-78,36,36,-144,-5,36,-75,-135,36,36,-134,36,-143,-76,36,36,-125,-140,-4,-3,-132,98,98,36,36,36,36,36,36,36,36,36,36,-128,36,36,36,36,36,36,36,36,-129,36,36,98,-130,-126,-131,98,-127,-133,-18,36,98,98,98,-146,-139,98,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,98,-115,-116,-114,-102,-117,-121,-110,-120,98,36,98,-136,36,-123,36,-147,-80,-83,-138,36,-88,-79,98,-137,36,-124,98,36,-81,-84,36,98,-7,-100,36,98,36,-101,-99,-82,-85,98,-89,-8,-86,36,-87,98,]),'NE':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,99,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,99,99,-128,-129,99,-130,-126,-131,99,-127,-133,99,99,99,-146,-139,99,-122,-105,-109,-111,-108,-107,-104,-103,99,-106,99,-118,99,99,99,99,-102,-117,-121,-110,-120,99,99,-136,-123,-147,-138,99,-137,-124,99,99,99,99,99,]),'ENUM':([0,6,12,13,16,19,35,37,46,53,65,71,72,118,179,180,183,198,210,211,213,222,230,231,246,247,248,250,255,257,258,262,],[38,-16,38,-6,-17,-77,-74,-78,-5,-75,-76,-4,-3,-18,-80,-83,-88,-79,38,-81,-84,-7,-100,38,-101,-99,-82,-85,-89,-8,-86,-87,]),'COMMA':([3,9,25,30,42,54,60,63,68,69,73,88,98,104,105,107,110,112,114,117,123,124,125,126,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,152,159,161,162,163,166,167,170,171,172,173,175,176,177,181,186,187,190,192,193,194,195,196,197,199,201,202,205,206,208,209,216,227,228,229,241,244,245,251,252,263,],[-141,-119,-142,-145,-144,-135,-134,-143,-125,-140,-132,-128,-129,-130,-126,-131,-127,-57,-55,-133,-148,-146,176,-139,-122,-105,-109,-111,-108,-107,-104,-103,-112,-106,-113,-118,-115,-116,-114,-102,-117,-121,-110,-120,-53,-63,-65,-64,-66,203,-61,207,-152,-153,-136,-123,-150,-147,-138,219,-49,-12,-11,-13,223,-14,226,-42,-67,-68,-58,-56,-137,-124,-149,-54,-69,-62,-151,-48,-15,-43,259,-97,-98,]),'LBRACE':([44,55,101,103,108,115,116,165,188,203,],[116,116,116,154,157,116,116,116,116,116,]),'RSHIFT':([3,9,23,24,25,30,42,54,60,63,68,69,73,75,76,88,98,102,104,105,107,109,110,117,121,122,123,124,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,172,173,175,177,181,200,206,208,209,216,233,252,263,],[-141,-119,89,-140,-142,-145,-144,-135,-134,-143,-125,-140,-132,89,89,-128,-129,89,-130,-126,-131,89,-127,-133,89,89,89,-146,-139,89,-122,-105,89,89,89,89,-104,-103,89,-106,89,-118,89,89,89,89,-102,-117,-121,89,89,89,89,-136,-123,-147,-138,89,-137,-124,89,89,89,89,89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'param_list_contents':([115,],[166,]),'type_declaration':([44,55,101,115,116,165,188,203,],[111,120,152,167,169,202,221,228,]),'switch_stmts':([217,],[237,]),'while_orelse':([179,],[211,]),'assign_stmt':([0,12,210,231,],[2,2,2,2,]),'include_stmt':([0,12,210,231,],[51,51,51,51,]),'expr_stmt':([0,12,210,231,],[4,4,4,4,]),'struct_decl':([0,12,210,231,],[61,61,61,61,]),'simple_stmt':([0,12,210,231,],[6,6,6,6,]),'argument':([119,207,],[171,229,]),'var_decl':([0,12,154,156,210,219,223,231,],[8,8,187,193,8,241,193,8,]),'varargslist':([156,],[194,]),'power':([0,5,12,15,20,22,26,31,33,36,39,41,48,58,59,62,66,67,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,119,160,174,176,182,207,210,214,231,235,259,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'case_expr_list':([235,],[251,]),'parameters':([106,],[155,]),'inline_func_decl':([44,55,101,115,116,165,188,203,],[112,112,112,112,112,112,112,112,]),'endif_stmt':([0,12,210,231,],[11,11,11,11,]),'enum_name_list':([157,],[196,]),'stmt_list':([0,],[12,]),'var_decl_stmt':([0,12,210,231,],[27,27,27,27,]),'stmt':([0,12,210,231,],[13,71,230,246,]),'return_stmt':([0,12,210,231,],[49,49,49,49,]),'define_stmt':([0,12,210,231,],[14,14,14,14,]),'empty':([0,186,],[50,218,]),'compound_stmt':([0,12,210,231,],[16,16,16,16,]),'bracket_list':([111,120,152,167,169,202,221,228,],[159,159,159,159,159,159,159,159,]),'pass':([0,12,210,231,],[40,40,40,40,]),'enum_decl':([0,12,210,231,],[18,18,18,18,]),'small_stmt':([0,12,210,231,],[52,52,52,52,]),'while_stmt':([0,12,210,231,],[53,53,53,53,]),'if_orelse':([180,258,],[213,262,]),'arglist':([119,],[170,]),'module':([0,],[21,]),'atom':([0,5,12,15,20,22,26,31,33,36,39,41,48,58,59,62,66,67,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,119,160,174,176,182,207,210,214,231,235,259,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'struct_decl_stmt':([0,12,210,231,],[57,57,57,57,]),'case_list':([217,],[236,]),'stmts':([210,],[231,]),'expr':([0,5,12,15,20,22,26,31,33,36,39,41,48,58,59,62,66,67,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,119,160,174,176,182,207,210,214,231,235,259,],[23,68,23,73,75,76,102,104,105,107,109,110,117,121,122,123,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,172,200,208,209,216,172,23,233,23,252,263,]),'varaglist_elem':([156,223,],[192,244,]),'enum_decl_stmt':([0,12,210,231,],[45,45,45,45,]),'optional_comma':([186,],[220,]),'array_contents':([62,],[125,]),'default':([217,236,],[240,254,]),'break':([0,12,210,231,],[29,29,29,29,]),'string':([0,5,7,12,15,20,22,26,31,33,36,39,41,48,58,59,62,66,67,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,97,99,100,119,160,174,176,182,207,210,214,231,235,259,],[63,63,70,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'param_type_list':([44,55,101,115,116,165,188,203,],[113,113,113,113,113,113,113,113,]),'typedef_stmt':([0,12,210,231,],[64,64,64,64,]),'ifndef_stmt':([0,12,210,231,],[32,32,32,32,]),'switch_stmt':([0,12,210,231,],[19,19,19,19,]),'suite':([128,129,158,189,232,234,243,249,256,260,],[179,180,198,222,248,250,257,258,261,264,]),'dowhile_stmt':([0,12,210,231,],[65,65,65,65,]),'struct_decl_list':([154,],[186,]),'if_stmt':([0,12,210,231,],[35,35,35,35,]),'switch_suite':([153,],[183,]),'funcdef':([0,12,210,231,],[37,37,37,37,]),'func_decl':([0,12,210,231,],[10,10,10,10,]),'pointer':([111,120,152,159,167,169,202,221,228,],[162,162,162,162,162,162,162,162,162,]),'array':([111,120,152,159,167,169,202,221,228,],[161,161,161,161,161,161,161,161,161,]),'pointer_or_array':([111,120,152,159,167,169,202,221,228,],[163,163,163,199,163,163,163,163,163,]),'case':([217,236,],[239,253,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',89),
  ('module -> empty','module',1,'p_empty_module','cparse.py',95),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',102),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',106),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',110),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',114),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',119),
  ('funcdef -> DEF NAME parameters ARROW type_declaration COLON suite','funcdef',7,'p_funcdef2','cparse.py',126),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',133),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',137),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',141),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',145),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',146),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',150),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',154),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',158),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',159),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',167),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',171),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',172),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',173),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',174),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',175),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',176),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',177),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',178),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',179),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',180),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',181),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',182),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',183),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',184),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',190),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',196),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',200),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',204),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',208),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',212),
  ('break -> BREAK','break',1,'p_break','cparse.py',216),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',221),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',225),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',229),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',233),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',239),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',243),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',247),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',248),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',253),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',257),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',262),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',267),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',271),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',276),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',281),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',285),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',289),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',296),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',300),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',304),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',308),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',312),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',316),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',322),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',336),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',337),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',341),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',345),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',349),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',353),
  ('include_stmt -> INCLUDE string','include_stmt',2,'p_include_standard','cparse.py',357),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',361),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',367),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',371),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',377),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',378),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',379),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',380),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',381),
  ('dowhile_stmt -> DOWHILE expr COLON suite','dowhile_stmt',4,'p_dowhile','cparse.py',390),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',395),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',399),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',403),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',409),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',413),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',417),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',421),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',425),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',430),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',434),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',438),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',442),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',446),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',450),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',454),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',458),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',462),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',466),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',470),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',475),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',479),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',483),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',491),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',495),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',499),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',503),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',507),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',511),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',515),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',519),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',523),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',527),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',531),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',535),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',541),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',545),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',549),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',553),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',557),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',561),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',565),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',569),
  ('expr -> expr PERIOD NAME','expr',3,'p_expr_struct_access','cparse.py',573),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',577),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',581),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',585),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',589),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',593),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',599),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',603),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',609),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',613),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',617),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',621),
  ('atom -> NULL','atom',1,'p_null','cparse.py',625),
  ('power -> atom','power',1,'p_power_1','cparse.py',629),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',633),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',638),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',645),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',651),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',655),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',660),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',664),
  ('atom -> string','atom',1,'p_atom_str','cparse.py',668),
  ('string -> STRING','string',1,'p_str','cparse.py',672),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',676),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',680),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',684),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',688),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',692),
  ('array_contents -> array_contents COMMA','array_contents',2,'p_array_litral_contents_3','cparse.py',696),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',706),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',710),
  ('argument -> expr','argument',1,'p_argument','cparse.py',714),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',718),
]
