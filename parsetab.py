
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INT LONG REGISTER RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE ID TYPEID ICONST FCONST SCONST CCONST PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIStranslation_unit : external_declarationtranslation_unit : translation_unit external_declarationexternal_declaration : function_definitionexternal_declaration : declarationfunction_definition : declaration_specifiers declarator declaration_list compound_statementfunction_definition : declarator declaration_list compound_statementfunction_definition : declarator compound_statementfunction_definition : declaration_specifiers declarator compound_statementdeclaration : declaration_specifiers init_declarator_list SEMIdeclaration : declaration_specifiers SEMIdeclaration_list : declarationdeclaration_list : declaration_list declaration declaration_specifiers : storage_class_specifier declaration_specifiersdeclaration_specifiers : type_specifier declaration_specifiersdeclaration_specifiers : type_qualifier declaration_specifiersdeclaration_specifiers : storage_class_specifierdeclaration_specifiers : type_specifierdeclaration_specifiers : type_qualifierstorage_class_specifier : AUTO\n                               | REGISTER\n                               | STATIC\n                               | EXTERN\n                               | TYPEDEF\n                               type_specifier : VOID\n                      | CHAR\n                      | SHORT\n                      | INT\n                      | LONG\n                      | FLOAT\n                      | DOUBLE\n                      | SIGNED\n                      | UNSIGNED\n                      | struct_or_union_specifier\n                      | enum_specifier\n                      | TYPEID\n                      type_qualifier : CONST\n                      | VOLATILEstruct_or_union_specifier : struct_or_union ID LBRACE struct_declaration_list RBRACEstruct_or_union_specifier : struct_or_union LBRACE struct_declaration_list RBRACEstruct_or_union_specifier : struct_or_union IDstruct_or_union : STRUCT\n                       | UNION\n                       struct_declaration_list : struct_declarationstruct_declaration_list : struct_declaration_list struct_declarationinit_declarator_list : init_declaratorinit_declarator_list : init_declarator_list COMMA init_declaratorinit_declarator : declaratorinit_declarator : declarator EQUALS initializerstruct_declaration : specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list : type_specifier specifier_qualifier_listspecifier_qualifier_list : type_specifierspecifier_qualifier_list : type_qualifier specifier_qualifier_listspecifier_qualifier_list : type_qualifierstruct_declarator_list : struct_declaratorstruct_declarator_list : struct_declarator_list COMMA struct_declaratorstruct_declarator : declaratorstruct_declarator : declarator COLON constant_expressionstruct_declarator : COLON constant_expressionenum_specifier : ENUM ID LBRACE enumerator_list RBRACEenum_specifier : ENUM LBRACE enumerator_list RBRACEenum_specifier : ENUM IDenumerator_list : enumeratorenumerator_list : enumerator_list COMMA enumeratorenumerator : IDenumerator : ID EQUALS constant_expressiondeclarator : pointer direct_declaratordeclarator : direct_declaratordirect_declarator : IDdirect_declarator : LPAREN declarator RPARENdirect_declarator : direct_declarator LBRACKET constant_expression_opt RBRACKETdirect_declarator : direct_declarator LPAREN parameter_type_list RPAREN direct_declarator : direct_declarator LPAREN identifier_list RPAREN direct_declarator : direct_declarator LPAREN RPAREN pointer : TIMES type_qualifier_listpointer : TIMESpointer : TIMES type_qualifier_list pointerpointer : TIMES pointertype_qualifier_list : type_qualifiertype_qualifier_list : type_qualifier_list type_qualifierparameter_type_list : parameter_listparameter_type_list : parameter_list COMMA ELLIPSISparameter_list : parameter_declarationparameter_list : parameter_list COMMA parameter_declarationparameter_declaration : declaration_specifiers declaratorparameter_declaration : declaration_specifiers abstract_declarator_optidentifier_list : IDidentifier_list : identifier_list COMMA IDinitializer : assignment_expressioninitializer : LBRACE initializer_list RBRACE\n                   | LBRACE initializer_list COMMA RBRACEinitializer_list : initializerinitializer_list : initializer_list COMMA initializertype_name : specifier_qualifier_list abstract_declarator_optabstract_declarator_opt : emptyabstract_declarator_opt : abstract_declaratorabstract_declarator : pointer abstract_declarator : pointer direct_abstract_declaratorabstract_declarator : direct_abstract_declaratordirect_abstract_declarator : LPAREN abstract_declarator RPARENdirect_abstract_declarator : direct_abstract_declarator LBRACKET constant_expression_opt RBRACKETdirect_abstract_declarator : LBRACKET constant_expression_opt RBRACKETdirect_abstract_declarator : direct_abstract_declarator LPAREN parameter_type_list_opt RPARENdirect_abstract_declarator : LPAREN parameter_type_list_opt RPARENconstant_expression_opt : emptyconstant_expression_opt : constant_expressionparameter_type_list_opt : emptyparameter_type_list_opt : parameter_type_list\n    statement : labeled_statement\n              | expression_statement\n              | compound_statement\n              | selection_statement\n              | iteration_statement\n              | jump_statement\n              labeled_statement : ID COLON statementlabeled_statement : CASE constant_expression COLON statementlabeled_statement : DEFAULT COLON statementexpression_statement : expression_opt SEMIcompound_statement : LBRACE declaration_list statement_list RBRACEcompound_statement : LBRACE statement_list RBRACEcompound_statement : LBRACE declaration_list RBRACEcompound_statement : LBRACE RBRACEstatement_list : statementstatement_list : statement_list statementselection_statement : IF LPAREN expression RPAREN statementselection_statement : IF LPAREN expression RPAREN statement ELSE statement selection_statement : SWITCH LPAREN expression RPAREN statement iteration_statement : WHILE LPAREN expression RPAREN statementiteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMIjump_statement : GOTO ID SEMIjump_statement : CONTINUE SEMIjump_statement : BREAK SEMIjump_statement : RETURN expression_opt SEMIexpression_opt : emptyexpression_opt : expressionexpression : assignment_expressionexpression : expression COMMA assignment_expressionassignment_expression : conditional_expressionassignment_expression : unary_expression assignment_operator assignment_expression\n    assignment_operator : EQUALS\n                        | TIMESEQUAL\n                        | DIVEQUAL\n                        | MODEQUAL\n                        | PLUSEQUAL\n                        | MINUSEQUAL\n                        | LSHIFTEQUAL\n                        | RSHIFTEQUAL\n                        | ANDEQUAL\n                        | OREQUAL\n                        | XOREQUAL\n                        conditional_expression : logical_or_expressionconditional_expression : logical_or_expression CONDOP expression COLON conditional_expression constant_expression : conditional_expressionlogical_or_expression : logical_and_expressionlogical_or_expression : logical_or_expression LOR logical_and_expressionlogical_and_expression : inclusive_or_expressionlogical_and_expression : logical_and_expression LAND inclusive_or_expressioninclusive_or_expression : exclusive_or_expressioninclusive_or_expression : inclusive_or_expression OR exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression XOR and_expressionand_expression : equality_expressionand_expression : and_expression AND equality_expressionequality_expression : relational_expressionequality_expression : equality_expression EQ relational_expressionequality_expression : equality_expression NE relational_expressionrelational_expression : shift_expressionrelational_expression : relational_expression LT shift_expressionrelational_expression : relational_expression GT shift_expressionrelational_expression : relational_expression LE shift_expressionrelational_expression : relational_expression GE shift_expressionshift_expression : additive_expressionshift_expression : shift_expression LSHIFT additive_expressionshift_expression : shift_expression RSHIFT additive_expressionadditive_expression : multiplicative_expressionadditive_expression : additive_expression PLUS multiplicative_expressionadditive_expression : additive_expression MINUS multiplicative_expressionmultiplicative_expression : cast_expressionmultiplicative_expression : multiplicative_expression TIMES cast_expressionmultiplicative_expression : multiplicative_expression DIVIDE cast_expressionmultiplicative_expression : multiplicative_expression MOD cast_expressioncast_expression : unary_expressioncast_expression : LPAREN type_name RPAREN cast_expressionunary_expression : postfix_expressionunary_expression : PLUSPLUS unary_expressionunary_expression : MINUSMINUS unary_expressionunary_expression : unary_operator cast_expressionunary_expression : SIZEOF unary_expressionunary_expression : SIZEOF LPAREN type_name RPARENunary_operator : AND\n                    | TIMES\n                    | PLUS\n                    | MINUS\n                    | NOT\n                    | LNOT postfix_expression : primary_expressionpostfix_expression : postfix_expression LBRACKET expression RBRACKETpostfix_expression : postfix_expression LPAREN argument_expression_list RPARENpostfix_expression : postfix_expression LPAREN RPARENpostfix_expression : postfix_expression PERIOD IDpostfix_expression : postfix_expression ARROW IDpostfix_expression : postfix_expression PLUSPLUSpostfix_expression : postfix_expression MINUSMINUSprimary_expression :  ID\n                        |  constant\n                        |  SCONST\n                        |  LPAREN expression RPARENargument_expression_list :  assignment_expression\n                              |  argument_expression_list COMMA assignment_expressionconstant : ICONST\n               | FCONST\n               | CCONSTempty : '
    
_lr_action_items = {'ICONST':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[65,-11,-10,65,-12,-113,65,-190,65,65,-193,65,-121,65,-192,65,-112,-195,-109,-108,-122,-110,65,-191,65,-194,65,65,-111,-9,65,65,65,65,65,-131,65,65,65,-120,65,65,65,65,65,65,65,65,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,65,65,-117,65,65,65,65,65,65,65,65,-132,65,65,65,65,65,65,65,65,-119,-123,65,65,65,65,-118,-133,-114,65,-116,65,-130,65,65,65,65,65,65,-115,65,65,65,65,-124,-127,-126,65,65,-129,-125,65,-128,]),'EQ':([65,67,71,74,75,81,85,87,89,93,94,104,108,109,111,140,142,159,161,166,174,202,209,249,253,254,256,265,266,268,269,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-167,-182,189,-212,-164,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,189,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'LONG':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[1,-28,-27,-23,-33,-26,-29,1,-35,-3,-25,-31,1,1,1,-20,-36,-19,1,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,1,1,-7,-11,-66,-2,-10,1,1,-61,1,-40,-6,-12,1,-121,1,-9,1,-8,-69,-73,1,1,1,1,-43,1,-120,1,-119,-5,1,-71,1,-72,-70,-60,-39,-44,1,-118,1,1,-59,-49,-38,]),'INT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[2,-28,-27,-23,-33,-26,-29,2,-35,-3,-25,-31,2,2,2,-20,-36,-19,2,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,2,2,-7,-11,-66,-2,-10,2,2,-61,2,-40,-6,-12,2,-121,2,-9,2,-8,-69,-73,2,2,2,2,-43,2,-120,2,-119,-5,2,-71,2,-72,-70,-60,-39,-44,2,-118,2,2,-59,-49,-38,]),'TYPEDEF':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,61,62,63,77,82,125,126,127,129,134,167,216,219,229,231,232,234,235,237,244,259,287,295,308,313,],[3,-28,-27,-23,-33,-26,-29,3,-35,-3,-25,-31,3,3,3,-20,-36,-19,3,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,3,3,-7,-11,-66,-2,-10,3,3,-61,-40,-6,-12,3,-121,-9,3,-8,-69,-73,-120,-119,-5,3,-71,3,-72,-70,-60,-39,-118,3,3,-59,-38,]),'ELLIPSIS':([232,],[303,]),'FLOAT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[7,-28,-27,-23,-33,-26,-29,7,-35,-3,-25,-31,7,7,7,-20,-36,-19,7,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,7,7,-7,-11,-66,-2,-10,7,7,-61,7,-40,-6,-12,7,-121,7,-9,7,-8,-69,-73,7,7,7,7,-43,7,-120,7,-119,-5,7,-71,7,-72,-70,-60,-39,-44,7,-118,7,7,-59,-49,-38,]),'CONDOP':([65,66,67,71,72,74,75,81,85,87,89,93,94,95,100,104,108,109,111,116,140,142,159,161,166,174,202,209,249,251,253,254,256,265,266,268,269,272,273,274,275,276,277,279,280,281,282,283,288,290,317,318,320,324,],[-210,-160,-211,-206,157,-178,-184,-204,-167,-182,-162,-212,-164,-156,-158,-205,-172,-175,-196,-154,-204,-182,-203,-202,-186,-188,-187,-185,-163,-155,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,-157,-198,-197,-189,-183,]),'PERIOD':([65,67,71,75,81,93,104,111,140,159,161,253,254,256,288,317,318,],[-210,-211,-206,162,-204,-212,-205,-196,-204,-203,-202,-201,-200,-199,-207,-198,-197,]),'COMMA':([1,2,3,5,6,7,8,9,11,12,14,15,18,19,20,21,24,25,27,28,29,30,31,32,34,38,44,45,46,47,48,49,52,53,54,59,61,64,65,66,67,71,72,74,75,81,83,85,87,88,89,93,94,95,100,104,108,109,111,116,120,122,123,129,130,132,133,134,135,136,140,142,143,144,145,146,159,161,166,174,202,209,211,218,220,221,223,224,225,226,228,230,231,234,235,237,239,240,241,242,244,249,251,252,253,254,255,256,257,258,260,263,265,266,267,268,269,272,273,274,275,276,277,279,280,281,282,283,284,288,290,291,293,294,298,304,305,306,307,308,312,313,317,318,320,324,327,330,331,332,333,334,335,336,337,342,343,344,345,],[-28,-27,-23,-33,-26,-29,-17,-35,-25,-31,-16,-18,-20,-36,-75,-19,-22,-68,-37,-30,-34,-67,-21,-24,-32,-14,-13,-15,-66,-78,-77,-74,124,-45,-47,-61,-40,-47,-210,-160,-211,-206,-151,-178,-184,-204,172,-167,-182,-136,-162,-212,-164,-156,-158,-205,-172,-175,-196,-154,-138,-79,-76,-69,-213,232,-86,-73,233,-82,-204,-182,-153,-62,236,-64,-203,-202,-186,-188,-187,-185,172,-46,-88,-48,-94,-85,-84,-98,-96,-95,-71,-72,-70,-60,236,-56,310,-54,-39,-163,-155,172,-201,-200,-208,-199,316,172,172,-137,-174,-173,-139,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,172,-207,-157,172,-91,326,-97,-83,-87,-63,-65,-59,-58,-38,-198,-197,-189,-183,-89,-101,-103,-99,-57,-55,172,-152,-209,-92,-90,-102,-100,]),'LE':([65,67,71,74,75,81,85,87,93,94,104,108,109,111,140,142,159,161,166,174,202,209,253,254,256,265,266,268,269,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-167,-182,-212,197,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-174,-173,197,197,-169,-168,-171,-170,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'STRUCT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[4,-28,-27,-23,-33,-26,-29,4,-35,-3,-25,-31,4,4,4,-20,-36,-19,4,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,4,4,-7,-11,-66,-2,-10,4,4,-61,4,-40,-6,-12,4,-121,4,-9,4,-8,-69,-73,4,4,4,4,-43,4,-120,4,-119,-5,4,-71,4,-72,-70,-60,-39,-44,4,-118,4,4,-59,-49,-38,]),'SHORT':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[6,-28,-27,-23,-33,-26,-29,6,-35,-3,-25,-31,6,6,6,-20,-36,-19,6,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,6,6,-7,-11,-66,-2,-10,6,6,-61,6,-40,-6,-12,6,-121,6,-9,6,-8,-69,-73,6,6,6,6,-43,6,-120,6,-119,-5,6,-71,6,-72,-70,-60,-39,-44,6,-118,6,6,-59,-49,-38,]),'ARROW':([65,67,71,75,81,93,104,111,140,159,161,253,254,256,288,317,318,],[-210,-211,-206,160,-204,-212,-205,-196,-204,-203,-202,-201,-200,-199,-207,-198,-197,]),'CCONST':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[93,-11,-10,93,-12,-113,93,-190,93,93,-193,93,-121,93,-192,93,-112,-195,-109,-108,-122,-110,93,-191,93,-194,93,93,-111,-9,93,93,93,93,93,-131,93,93,93,-120,93,93,93,93,93,93,93,93,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,93,93,-117,93,93,93,93,93,93,93,93,-132,93,93,93,93,93,93,93,93,-119,-123,93,93,93,93,-118,-133,-114,93,-116,93,-130,93,93,93,93,93,93,-115,93,93,93,93,-124,-127,-126,93,93,-129,-125,93,-128,]),'DO':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[69,-11,-10,-12,-113,69,69,-121,-112,-109,-108,-122,-110,69,-111,-9,-131,-120,69,69,-117,69,-132,-119,-123,-118,-133,-114,69,-116,-130,69,-115,69,69,-124,-127,-126,69,-129,-125,69,-128,]),'TIMES':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,37,38,40,41,42,43,44,45,47,49,50,51,57,59,61,62,63,65,67,68,69,70,71,74,75,76,77,78,80,81,82,84,86,87,91,93,96,97,98,101,102,104,105,107,109,110,111,113,114,115,119,121,122,124,125,127,128,130,140,141,142,148,150,151,154,156,157,158,159,161,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,213,214,216,217,219,222,227,229,237,238,243,244,246,247,253,254,256,259,261,262,270,271,279,280,281,282,283,287,288,289,292,296,308,309,310,313,314,315,316,317,318,319,320,321,322,323,324,325,326,338,340,341,347,348,349,350,352,353,],[20,-28,-27,-23,-33,-26,-29,-17,-35,-3,-25,-31,-16,-18,-20,-36,20,-19,20,20,-22,20,-37,-30,-34,-21,-24,-32,-1,-4,-14,20,110,-7,-11,-13,-15,-78,20,-2,-10,110,-61,-40,-6,-12,-210,-211,-113,110,-190,-206,-178,-184,110,110,-193,110,-204,-121,110,-192,-182,110,-212,-112,-195,-109,-108,-122,-205,-110,110,206,-191,-196,110,-194,110,110,-111,-79,20,-9,-8,110,20,-204,110,-182,20,-51,-53,110,110,110,-131,-203,-202,110,110,110,-186,-120,110,110,110,110,110,-188,110,110,110,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,110,110,-117,110,110,110,110,110,110,110,110,-132,-187,110,110,110,110,110,110,-185,20,110,110,-119,-123,-5,110,110,20,-60,110,110,-39,-50,-52,-201,-200,-199,-118,-133,-114,110,-116,206,206,-180,-179,-181,20,-207,110,-130,110,-59,110,20,-38,110,110,110,-198,-197,110,-189,-115,110,110,-183,110,110,-124,-127,-126,110,110,-129,-125,110,-128,]),'LNOT':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[97,-11,-10,97,-12,-113,97,-190,97,97,-193,97,-121,97,-192,97,-112,-195,-109,-108,-122,-110,97,-191,97,-194,97,97,-111,-9,97,97,97,97,97,-131,97,97,97,-120,97,97,97,97,97,97,97,97,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,97,97,-117,97,97,97,97,97,97,97,97,-132,97,97,97,97,97,97,97,97,-119,-123,97,97,97,97,-118,-133,-114,97,-116,97,-130,97,97,97,97,97,97,-115,97,97,97,97,-124,-127,-126,97,97,-129,-125,97,-128,]),'LOR':([65,66,67,71,72,74,75,81,85,87,89,93,94,95,100,104,108,109,111,116,140,142,159,161,166,174,202,209,249,251,253,254,256,265,266,268,269,272,273,274,275,276,277,279,280,281,282,283,288,290,317,318,320,324,],[-210,-160,-211,-206,156,-178,-184,-204,-167,-182,-162,-212,-164,-156,-158,-205,-172,-175,-196,-154,-204,-182,-203,-202,-186,-188,-187,-185,-163,-155,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,-157,-198,-197,-189,-183,]),'AND':([41,43,51,57,63,65,66,67,68,69,70,71,74,75,76,77,78,80,81,82,84,85,86,87,89,91,93,94,96,97,98,101,102,104,105,107,108,109,110,111,113,114,115,119,121,125,128,140,141,142,154,156,157,158,159,161,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,214,216,217,222,227,238,243,249,253,254,256,259,261,262,265,266,268,269,270,271,272,273,274,275,277,279,280,281,282,283,288,289,292,296,309,314,315,316,317,318,319,320,321,322,323,324,325,326,338,340,341,347,348,349,350,352,353,],[70,-11,-10,70,-12,-210,154,-211,-113,70,-190,-206,-178,-184,70,70,-193,70,-204,-121,70,-167,-192,-182,-162,70,-212,-164,-112,-195,-109,-108,-122,-205,-110,70,-172,-175,-191,-196,70,-194,70,70,-111,-9,70,-204,70,-182,70,70,70,-131,-203,-202,70,70,70,-186,-120,70,70,70,70,70,-188,70,70,70,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,70,70,-117,70,70,70,70,70,70,70,70,-132,-187,70,70,70,70,70,70,-185,70,70,-119,-123,70,70,70,70,-163,-201,-200,-199,-118,-133,-114,-174,-173,-165,-166,70,-116,-169,-168,-171,-170,154,-177,-176,-180,-179,-181,-207,70,-130,70,70,70,70,70,-198,-197,70,-189,-115,70,70,-183,70,70,-124,-127,-126,70,70,-129,-125,70,-128,]),'TYPEID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[9,-28,-27,-23,-33,-26,-29,9,-35,-3,-25,-31,9,9,9,-20,-36,-19,9,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,9,9,-7,-11,-66,-2,-10,9,9,-61,9,-40,-6,-12,9,-121,9,-9,9,-8,-69,-73,9,9,9,9,-43,9,-120,9,-119,-5,9,-71,9,-72,-70,-60,-39,-44,9,-118,9,9,-59,-49,-38,]),'RBRACKET':([57,65,66,67,71,72,74,75,85,87,88,89,93,94,95,100,104,108,109,111,116,120,137,138,139,140,142,143,159,161,166,174,202,209,227,249,251,253,254,256,258,263,265,266,267,268,269,272,273,274,275,276,277,279,280,281,282,283,288,290,296,297,317,318,320,324,329,336,],[-213,-210,-160,-211,-206,-151,-178,-184,-167,-182,-136,-162,-212,-164,-156,-158,-205,-172,-175,-196,-154,-138,-104,-105,235,-204,-182,-153,-203,-202,-186,-188,-187,-185,-213,-163,-155,-201,-200,-199,318,-137,-174,-173,-139,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,-157,-213,330,-198,-197,-189,-183,345,-152,]),'CHAR':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[11,-28,-27,-23,-33,-26,-29,11,-35,-3,-25,-31,11,11,11,-20,-36,-19,11,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,11,11,-7,-11,-66,-2,-10,11,11,-61,11,-40,-6,-12,11,-121,11,-9,11,-8,-69,-73,11,11,11,11,-43,11,-120,11,-119,-5,11,-71,11,-72,-70,-60,-39,-44,11,-118,11,11,-59,-49,-38,]),'SIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[12,-28,-27,-23,-33,-26,-29,12,-35,-3,-25,-31,12,12,12,-20,-36,-19,12,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,12,12,-7,-11,-66,-2,-10,12,12,-61,12,-40,-6,-12,12,-121,12,-9,12,-8,-69,-73,12,12,12,12,-43,12,-120,12,-119,-5,12,-71,12,-72,-70,-60,-39,-44,12,-118,12,12,-59,-49,-38,]),'SCONST':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[71,-11,-10,71,-12,-113,71,-190,71,71,-193,71,-121,71,-192,71,-112,-195,-109,-108,-122,-110,71,-191,71,-194,71,71,-111,-9,71,71,71,71,71,-131,71,71,71,-120,71,71,71,71,71,71,71,71,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,71,71,-117,71,71,71,71,71,71,71,71,-132,71,71,71,71,71,71,71,71,-119,-123,71,71,71,71,-118,-133,-114,71,-116,71,-130,71,71,71,71,71,71,-115,71,71,71,71,-124,-127,-126,71,71,-129,-125,71,-128,]),'COLON':([1,2,5,6,7,9,11,12,19,25,27,28,29,30,32,34,46,59,61,65,66,67,71,72,74,75,81,85,87,88,89,92,93,94,95,100,104,108,109,111,116,120,129,134,140,142,143,148,150,151,159,161,166,174,192,202,209,231,234,235,237,240,244,246,247,249,251,252,253,254,256,263,265,266,267,268,269,272,273,274,275,276,277,279,280,281,282,283,288,290,308,310,313,317,318,320,324,336,],[-28,-27,-33,-26,-29,-35,-25,-31,-36,-68,-37,-30,-34,-67,-24,-32,-66,-61,-40,-210,-160,-211,-206,-151,-178,-184,171,-167,-182,-136,-162,193,-212,-164,-156,-158,-205,-172,-175,-196,-154,-138,-69,-73,-204,-182,-153,243,-51,-53,-203,-202,-186,-188,270,-187,-185,-71,-72,-70,-60,309,-39,-50,-52,-163,-155,315,-201,-200,-199,-137,-174,-173,-139,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,-157,-59,243,-38,-198,-197,-189,-183,-152,]),'LSHIFT':([65,67,71,74,75,81,85,87,93,104,108,109,111,140,142,159,161,166,174,202,209,253,254,256,265,266,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,176,-182,-212,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-174,-173,176,176,176,176,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'MINUSEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,178,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'RPAREN':([1,2,3,5,6,7,8,9,11,12,14,15,18,19,20,21,24,25,27,28,29,30,31,32,34,38,44,45,46,47,48,49,55,56,59,61,65,66,67,71,72,74,75,83,85,87,88,89,93,94,95,99,100,104,108,109,111,116,120,122,123,129,130,131,132,133,134,135,136,140,142,150,151,159,161,163,166,174,202,209,210,211,212,223,224,225,226,228,229,230,231,234,235,237,244,246,247,249,251,253,254,255,256,257,260,263,264,265,266,267,268,269,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,290,291,295,298,299,300,301,302,303,304,305,308,313,317,318,320,324,328,330,331,332,335,336,337,344,345,348,351,],[-28,-27,-23,-33,-26,-29,-17,-35,-25,-31,-16,-18,-20,-36,-75,-19,-22,-68,-37,-30,-34,-67,-21,-24,-32,-14,-13,-15,-66,-78,-77,-74,129,134,-61,-40,-210,-160,-211,-206,-151,-178,-184,-135,-167,-182,-136,-162,-212,-164,-156,-134,-158,-205,-172,-175,-196,-154,-138,-79,-76,-69,-213,231,-80,-86,-73,234,-82,-204,-182,-51,-53,-203,-202,256,-186,-188,-187,-185,-213,288,289,-94,-85,-84,-98,-96,-213,-95,-71,-72,-70,-60,-39,-50,-52,-163,-155,-201,-200,-208,-199,317,319,-137,320,-174,-173,-139,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,323,-93,-96,-213,-207,-157,325,-213,-97,331,-106,-107,332,-81,-83,-87,-59,-38,-198,-197,-189,-183,344,-101,-103,-99,346,-152,-209,-102,-100,-213,352,]),'CONTINUE':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[73,-11,-10,-12,-113,73,73,-121,-112,-109,-108,-122,-110,73,-111,-9,-131,-120,73,73,-117,73,-132,-119,-123,-118,-133,-114,73,-116,-130,73,-115,73,73,-124,-127,-126,73,-129,-125,73,-128,]),'PLUSEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,187,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'GE':([65,67,71,74,75,81,85,87,93,94,104,108,109,111,140,142,159,161,166,174,202,209,253,254,256,265,266,268,269,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-167,-182,-212,196,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-174,-173,196,196,-169,-168,-171,-170,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'MODEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,182,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'EQUALS':([25,30,46,54,64,65,67,71,75,81,87,93,104,111,129,134,140,142,146,159,161,166,174,202,209,231,234,235,253,254,256,288,317,318,320,324,],[-68,-67,-66,128,128,-210,-211,-206,-184,-204,186,-212,-205,-196,-69,-73,-204,-182,238,-203,-202,-186,-188,-187,-185,-71,-72,-70,-201,-200,-199,-207,-198,-197,-189,-183,]),'RSHIFT':([65,67,71,74,75,81,85,87,93,104,108,109,111,140,142,159,161,166,174,202,209,253,254,256,265,266,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,175,-182,-212,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-174,-173,175,175,175,175,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'PLUS':([41,43,51,57,63,65,67,68,69,70,71,74,75,76,77,78,80,81,82,84,86,87,91,93,96,97,98,101,102,104,105,107,108,109,110,111,113,114,115,119,121,125,128,140,141,142,154,156,157,158,159,161,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,214,216,217,222,227,238,243,253,254,256,259,261,262,265,266,270,271,279,280,281,282,283,288,289,292,296,309,314,315,316,317,318,319,320,321,322,323,324,325,326,338,340,341,347,348,349,350,352,353,],[86,-11,-10,86,-12,-210,-211,-113,86,-190,-206,-178,-184,86,86,-193,86,-204,-121,86,-192,-182,86,-212,-112,-195,-109,-108,-122,-205,-110,86,204,-175,-191,-196,86,-194,86,86,-111,-9,86,-204,86,-182,86,86,86,-131,-203,-202,86,86,86,-186,-120,86,86,86,86,86,-188,86,86,86,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,86,86,-117,86,86,86,86,86,86,86,86,-132,-187,86,86,86,86,86,86,-185,86,86,-119,-123,86,86,86,86,-201,-200,-199,-118,-133,-114,204,204,86,-116,-177,-176,-180,-179,-181,-207,86,-130,86,86,86,86,86,-198,-197,86,-189,-115,86,86,-183,86,86,-124,-127,-126,86,86,-129,-125,86,-128,]),'BREAK':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[106,-11,-10,-12,-113,106,106,-121,-112,-109,-108,-122,-110,106,-111,-9,-131,-120,106,106,-117,106,-132,-119,-123,-118,-133,-114,106,-116,-130,106,-115,106,106,-124,-127,-126,106,-129,-125,106,-128,]),'FOR':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[103,-11,-10,-12,-113,103,103,-121,-112,-109,-108,-122,-110,103,-111,-9,-131,-120,103,103,-117,103,-132,-119,-123,-118,-133,-114,103,-116,-130,103,-115,103,103,-124,-127,-126,103,-129,-125,103,-128,]),'LT':([65,67,71,74,75,81,85,87,93,94,104,108,109,111,140,142,159,161,166,174,202,209,253,254,256,265,266,268,269,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-167,-182,-212,195,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-174,-173,195,195,-169,-168,-171,-170,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'DIVEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,188,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'REGISTER':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,61,62,63,77,82,125,126,127,129,134,167,216,219,229,231,232,234,235,237,244,259,287,295,308,313,],[18,-28,-27,-23,-33,-26,-29,18,-35,-3,-25,-31,18,18,18,-20,-36,-19,18,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,18,18,-7,-11,-66,-2,-10,18,18,-61,-40,-6,-12,18,-121,-9,18,-8,-69,-73,-120,-119,-5,18,-71,18,-72,-70,-60,-39,-118,18,18,-59,-38,]),'GT':([65,67,71,74,75,81,85,87,93,94,104,108,109,111,140,142,159,161,166,174,202,209,253,254,256,265,266,268,269,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-167,-182,-212,194,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-174,-173,194,194,-169,-168,-171,-170,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'SIZEOF':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[84,-11,-10,84,-12,-113,84,-190,84,84,-193,84,-121,84,-192,84,-112,-195,-109,-108,-122,-110,84,-191,84,-194,84,84,-111,-9,84,84,84,84,84,-131,84,84,84,-120,84,84,84,84,84,84,84,84,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,84,84,-117,84,84,84,84,84,84,84,84,-132,84,84,84,84,84,84,84,84,-119,-123,84,84,84,84,-118,-133,-114,84,-116,84,-130,84,84,84,84,84,84,-115,84,84,84,84,-124,-127,-126,84,84,-129,-125,84,-128,]),'CONST':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,47,49,50,51,54,56,59,60,61,62,63,77,82,115,122,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[19,-28,-27,-23,-33,-26,-29,19,-35,-3,-25,-31,19,19,19,-20,-36,19,-19,19,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,19,19,-7,-11,-66,-78,19,-2,-10,19,19,-61,19,-40,-6,-12,19,-121,19,-79,-9,19,-8,-69,-73,19,19,19,19,-43,19,-120,19,-119,-5,19,-71,19,-72,-70,-60,-39,-44,19,-118,19,19,-59,-49,-38,]),'MINUSMINUS':([41,43,51,57,63,65,67,68,69,70,71,75,76,77,78,80,81,82,84,86,91,93,96,97,98,101,102,104,105,107,110,111,113,114,115,119,121,125,128,140,141,154,156,157,158,159,161,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,253,254,256,259,261,262,270,271,288,289,292,296,309,314,315,316,317,318,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[76,-11,-10,76,-12,-210,-211,-113,76,-190,-206,159,76,76,-193,76,-204,-121,76,-192,76,-212,-112,-195,-109,-108,-122,-205,-110,76,-191,-196,76,-194,76,76,-111,-9,76,-204,76,76,76,76,-131,-203,-202,76,76,76,-120,76,76,76,76,76,76,76,76,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,76,76,-117,76,76,76,76,76,76,76,76,-132,76,76,76,76,76,76,76,76,-119,-123,76,76,76,76,-201,-200,-199,-118,-133,-114,76,-116,-207,76,-130,76,76,76,76,76,-198,-197,76,-115,76,76,76,76,-124,-127,-126,76,76,-129,-125,76,-128,]),'SEMI':([1,2,3,5,6,7,8,9,11,12,14,15,18,19,21,23,24,25,27,28,29,30,31,32,34,38,40,41,43,44,45,46,51,52,53,54,59,61,63,64,65,66,67,68,69,71,72,73,74,75,77,80,81,82,83,85,87,88,89,90,93,94,95,96,98,99,100,101,102,104,105,106,108,109,111,116,119,120,121,125,129,134,140,142,143,158,159,161,166,167,168,170,171,174,191,193,200,201,202,209,215,216,217,218,220,221,231,234,235,237,240,241,242,244,249,251,253,254,256,259,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,288,290,292,308,312,313,317,318,319,320,321,322,323,324,325,327,333,334,336,338,339,340,341,343,346,347,349,350,352,353,],[-28,-27,-23,-33,-26,-29,-17,-35,-25,-31,-16,-18,-20,-36,-19,51,-22,-68,-37,-30,-34,-67,-21,-24,-32,-14,51,-213,-11,-13,-15,-66,-10,125,-45,-47,-61,-40,-12,-47,-210,-160,-211,-113,-213,-206,-151,158,-178,-184,-213,-213,-204,-121,-135,-167,-182,-136,-162,191,-212,-164,-156,-112,-109,-134,-158,-108,-122,-205,-110,201,-172,-175,-196,-154,-213,-138,-111,-9,-69,-73,-204,-182,-153,-131,-203,-202,-186,-120,-213,261,-213,-188,-117,-213,-213,-132,-187,-185,292,-119,-123,-46,-88,-48,-71,-72,-70,-60,-56,311,-54,-39,-163,-155,-201,-200,-199,-118,-133,-114,-137,-174,-173,-139,-165,-166,-213,-116,-169,-168,-171,-170,-159,-161,322,-177,-176,-180,-179,-181,-207,-157,-130,-59,-58,-38,-198,-197,-213,-189,-115,-213,-213,-183,-213,-89,-57,-55,-152,-124,348,-127,-126,-90,349,-213,-129,-125,-213,-128,]),'AUTO':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,61,62,63,77,82,125,126,127,129,134,167,216,219,229,231,232,234,235,237,244,259,287,295,308,313,],[21,-28,-27,-23,-33,-26,-29,21,-35,-3,-25,-31,21,21,21,-20,-36,-19,21,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,21,21,-7,-11,-66,-2,-10,21,21,-61,-40,-6,-12,21,-121,-9,21,-8,-69,-73,-120,-119,-5,21,-71,21,-72,-70,-60,-39,-118,21,21,-59,-38,]),'XOR':([65,66,67,71,74,75,81,85,87,89,93,94,100,104,108,109,111,140,142,159,161,166,174,202,209,249,253,254,256,265,266,268,269,272,273,274,275,276,277,279,280,281,282,283,288,317,318,320,324,],[-210,-160,-211,-206,-178,-184,-204,-167,-182,-162,-212,-164,199,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-163,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,199,-161,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'DIVIDE':([65,67,71,74,75,81,87,93,104,109,111,140,142,159,161,166,174,202,209,253,254,256,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-182,-212,-205,205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,205,205,-180,-179,-181,-207,-198,-197,-189,-183,]),'MINUS':([41,43,51,57,63,65,67,68,69,70,71,74,75,76,77,78,80,81,82,84,86,87,91,93,96,97,98,101,102,104,105,107,108,109,110,111,113,114,115,119,121,125,128,140,141,142,154,156,157,158,159,161,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,214,216,217,222,227,238,243,253,254,256,259,261,262,265,266,270,271,279,280,281,282,283,288,289,292,296,309,314,315,316,317,318,319,320,321,322,323,324,325,326,338,340,341,347,348,349,350,352,353,],[78,-11,-10,78,-12,-210,-211,-113,78,-190,-206,-178,-184,78,78,-193,78,-204,-121,78,-192,-182,78,-212,-112,-195,-109,-108,-122,-205,-110,78,203,-175,-191,-196,78,-194,78,78,-111,-9,78,-204,78,-182,78,78,78,-131,-203,-202,78,78,78,-186,-120,78,78,78,78,78,-188,78,78,78,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,78,78,-117,78,78,78,78,78,78,78,78,-132,-187,78,78,78,78,78,78,-185,78,78,-119,-123,78,78,78,78,-201,-200,-199,-118,-133,-114,203,203,78,-116,-177,-176,-180,-179,-181,-207,78,-130,78,78,78,78,78,-198,-197,78,-189,-115,78,78,-183,78,78,-124,-127,-126,78,78,-129,-125,78,-128,]),'LSHIFTEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,184,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'IF':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[79,-11,-10,-12,-113,79,79,-121,-112,-109,-108,-122,-110,79,-111,-9,-131,-120,79,79,-117,79,-132,-119,-123,-118,-133,-114,79,-116,-130,79,-115,79,79,-124,-127,-126,79,-129,-125,79,-128,]),'UNION':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[17,-28,-27,-23,-33,-26,-29,17,-35,-3,-25,-31,17,17,17,-20,-36,-19,17,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,17,17,-7,-11,-66,-2,-10,17,17,-61,17,-40,-6,-12,17,-121,17,-9,17,-8,-69,-73,17,17,17,17,-43,17,-120,17,-119,-5,17,-71,17,-72,-70,-60,-39,-44,17,-118,17,17,-59,-49,-38,]),'RETURN':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[80,-11,-10,-12,-113,80,80,-121,-112,-109,-108,-122,-110,80,-111,-9,-131,-120,80,80,-117,80,-132,-119,-123,-118,-133,-114,80,-116,-130,80,-115,80,80,-124,-127,-126,80,-129,-125,80,-128,]),'RSHIFTEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,179,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'EXTERN':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,61,62,63,77,82,125,126,127,129,134,167,216,219,229,231,232,234,235,237,244,259,287,295,308,313,],[24,-28,-27,-23,-33,-26,-29,24,-35,-3,-25,-31,24,24,24,-20,-36,-19,24,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,24,24,-7,-11,-66,-2,-10,24,24,-61,-40,-6,-12,24,-121,-9,24,-8,-69,-73,-120,-119,-5,24,-71,24,-72,-70,-60,-39,-118,24,24,-59,-38,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,31,32,33,34,35,36,37,38,40,41,42,43,44,45,47,48,49,50,51,56,57,58,59,61,62,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,118,119,121,122,123,124,125,127,128,130,141,147,148,150,151,154,156,157,158,160,162,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,219,222,227,228,229,233,236,237,238,243,244,246,247,259,261,262,270,271,289,292,296,308,309,310,313,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[25,-28,-27,-23,-41,-33,-26,-29,-17,-35,-3,-25,-31,-16,-18,25,-42,-20,-36,-75,-19,25,25,-22,25,-37,-30,-34,-21,-24,59,-32,-1,61,-4,-14,25,81,-7,-11,-13,-15,-78,-77,-74,-2,-10,133,140,146,-61,-40,-6,-12,-113,81,-190,140,81,-193,140,-121,140,-192,140,-112,-195,-109,-108,-122,-110,140,-191,140,-194,140,215,81,-111,-79,-76,25,-9,-8,140,25,140,146,25,-51,-53,140,140,140,-131,253,254,140,140,140,-120,81,140,81,140,140,140,140,140,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,140,140,-117,81,140,140,140,140,140,140,140,-132,140,140,140,140,140,140,140,140,-119,-123,-5,140,140,25,25,305,146,-60,140,140,-39,-50,-52,-118,-133,-114,81,-116,140,-130,140,-59,140,25,-38,140,140,140,81,-115,140,81,81,140,-124,-127,-126,81,140,-129,-125,81,-128,]),'RBRACE':([41,43,51,63,65,66,67,68,71,72,74,75,77,82,85,87,89,93,94,95,96,98,100,101,102,104,105,108,109,111,116,119,120,121,125,140,142,143,144,145,146,149,152,158,159,161,166,167,168,174,191,201,202,209,216,217,220,239,245,248,249,251,253,254,256,259,261,262,265,266,267,268,269,271,272,273,274,275,276,277,279,280,281,282,283,288,290,292,293,294,306,307,311,317,318,320,321,324,326,327,336,338,340,341,342,343,349,350,353,],[82,-11,-10,-12,-210,-160,-211,-113,-206,-151,-178,-184,167,-121,-167,-182,-162,-212,-164,-156,-112,-109,-158,-108,-122,-205,-110,-172,-175,-196,-154,216,-138,-111,-9,-204,-182,-153,-62,237,-64,244,-43,-131,-203,-202,-186,-120,259,-188,-117,-132,-187,-185,-119,-123,-88,308,-44,313,-163,-155,-201,-200,-199,-118,-133,-114,-174,-173,-139,-165,-166,-116,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,-157,-130,-91,327,-63,-65,-49,-198,-197,-189,-115,-183,343,-89,-152,-124,-127,-126,-92,-90,-129,-125,-128,]),'OREQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,185,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'NOT':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[114,-11,-10,114,-12,-113,114,-190,114,114,-193,114,-121,114,-192,114,-112,-195,-109,-108,-122,-110,114,-191,114,-194,114,114,-111,-9,114,114,114,114,114,-131,114,114,114,-120,114,114,114,114,114,114,114,114,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,114,114,-117,114,114,114,114,114,114,114,114,-132,114,114,114,114,114,114,114,114,-119,-123,114,114,114,114,-118,-133,-114,114,-116,114,-130,114,114,114,114,114,114,-115,114,114,114,114,-124,-127,-126,114,114,-129,-125,114,-128,]),'LPAREN':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,59,61,62,63,65,67,68,69,70,71,75,76,77,78,79,80,81,82,84,86,91,93,96,97,98,101,102,103,104,105,107,110,111,112,113,114,115,117,119,121,122,123,124,125,127,128,129,130,134,140,141,148,150,151,154,156,157,158,159,161,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,210,213,214,216,217,219,222,226,227,228,229,231,234,235,237,238,243,244,246,247,250,253,254,256,259,261,262,270,271,286,287,288,289,292,296,298,308,309,310,313,314,315,316,317,318,319,321,322,323,325,326,330,331,332,338,340,341,344,345,347,348,349,350,352,353,],[26,-28,-27,-23,-33,-26,-29,-17,-35,-3,-25,-31,-16,-18,26,-20,-36,-75,-19,26,26,-22,-68,26,-37,-30,-34,56,-21,-24,-32,-1,-4,-14,26,115,-7,-11,-13,-15,56,-78,-77,-74,-2,-10,141,-61,-40,-6,-12,-210,-211,-113,115,-190,-206,163,165,115,-193,169,115,-204,-121,173,-192,141,-212,-112,-195,-109,-108,-122,200,-205,-110,141,-191,-196,208,165,-194,115,214,115,-111,-79,-76,26,-9,-8,115,-69,229,-73,-204,115,26,-51,-53,141,141,115,-131,-203,-202,115,115,115,-120,115,115,115,115,115,141,141,115,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,141,141,-117,115,141,141,141,141,141,141,115,-132,141,141,141,141,141,115,287,141,115,-119,-123,-5,115,295,141,229,229,-71,-72,-70,-60,141,141,-39,-50,-52,314,-201,-200,-199,-118,-133,-114,115,-116,287,287,-207,141,-130,141,295,-59,141,26,-38,115,141,115,-198,-197,115,-115,115,115,115,115,-101,-103,-99,-124,-127,-126,-102,-100,115,115,-129,-125,115,-128,]),'OR':([65,66,67,71,74,75,81,85,87,89,93,94,95,100,104,108,109,111,140,142,159,161,166,174,202,209,249,253,254,256,265,266,268,269,272,273,274,275,276,277,279,280,281,282,283,288,290,317,318,320,324,],[-210,-160,-211,-206,-178,-184,-204,-167,-182,-162,-212,-164,198,-158,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,-163,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,198,-198,-197,-189,-183,]),'VOLATILE':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,47,49,50,51,54,56,59,60,61,62,63,77,82,115,122,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[27,-28,-27,-23,-33,-26,-29,27,-35,-3,-25,-31,27,27,27,-20,-36,27,-19,27,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,27,27,-7,-11,-66,-78,27,-2,-10,27,27,-61,27,-40,-6,-12,27,-121,27,-79,-9,27,-8,-69,-73,27,27,27,27,-43,27,-120,27,-119,-5,27,-71,27,-72,-70,-60,-39,-44,27,-118,27,27,-59,-49,-38,]),'ELSE':([68,82,96,98,101,105,121,158,167,191,201,216,259,261,262,271,292,321,338,340,341,349,350,353,],[-113,-121,-112,-109,-108,-110,-111,-131,-120,-117,-132,-119,-118,-133,-114,-116,-130,-115,347,-127,-126,-129,-125,-128,]),'MOD':([65,67,71,74,75,81,87,93,104,109,111,140,142,159,161,166,174,202,209,253,254,256,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-182,-212,-205,207,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,207,207,-180,-179,-181,-207,-198,-197,-189,-183,]),'DOUBLE':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[28,-28,-27,-23,-33,-26,-29,28,-35,-3,-25,-31,28,28,28,-20,-36,-19,28,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,28,28,-7,-11,-66,-2,-10,28,28,-61,28,-40,-6,-12,28,-121,28,-9,28,-8,-69,-73,28,28,28,28,-43,28,-120,28,-119,-5,28,-71,28,-72,-70,-60,-39,-44,28,-118,28,28,-59,-49,-38,]),'XOREQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,181,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'LBRACE':([4,13,17,25,30,33,36,39,41,43,46,51,54,59,61,63,68,69,77,82,96,98,101,102,105,119,121,125,126,128,129,134,158,167,168,171,191,193,201,216,217,222,231,234,235,259,261,262,270,271,292,319,321,323,325,326,338,340,341,347,349,350,352,353,],[-41,41,-42,-68,-67,58,60,41,41,-11,-66,-10,41,147,153,-12,-113,41,41,-121,-112,-109,-108,-122,-110,41,-111,-9,41,222,-69,-73,-131,-120,41,41,-117,41,-132,-119,-123,222,-71,-72,-70,-118,-133,-114,41,-116,-130,41,-115,41,41,222,-124,-127,-126,41,-129,-125,41,-128,]),'TIMESEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,180,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'SWITCH':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[117,-11,-10,-12,-113,117,117,-121,-112,-109,-108,-122,-110,117,-111,-9,-131,-120,117,117,-117,117,-132,-119,-123,-118,-133,-114,117,-116,-130,117,-115,117,117,-124,-127,-126,117,-129,-125,117,-128,]),'GOTO':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[118,-11,-10,-12,-113,118,118,-121,-112,-109,-108,-122,-110,118,-111,-9,-131,-120,118,118,-117,118,-132,-119,-123,-118,-133,-114,118,-116,-130,118,-115,118,118,-124,-127,-126,118,-129,-125,118,-128,]),'FCONST':([41,43,51,57,63,68,69,70,76,77,78,80,82,84,86,91,96,97,98,101,102,105,107,110,113,114,115,119,121,125,128,141,154,156,157,158,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,259,261,262,270,271,289,292,296,309,314,315,316,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[67,-11,-10,67,-12,-113,67,-190,67,67,-193,67,-121,67,-192,67,-112,-195,-109,-108,-122,-110,67,-191,67,-194,67,67,-111,-9,67,67,67,67,67,-131,67,67,67,-120,67,67,67,67,67,67,67,67,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,67,67,-117,67,67,67,67,67,67,67,67,-132,67,67,67,67,67,67,67,67,-119,-123,67,67,67,67,-118,-133,-114,67,-116,67,-130,67,67,67,67,67,67,-115,67,67,67,67,-124,-127,-126,67,67,-129,-125,67,-128,]),'STATIC':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,61,62,63,77,82,125,126,127,129,134,167,216,219,229,231,232,234,235,237,244,259,287,295,308,313,],[31,-28,-27,-23,-33,-26,-29,31,-35,-3,-25,-31,31,31,31,-20,-36,-19,31,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,31,31,-7,-11,-66,-2,-10,31,31,-61,-40,-6,-12,31,-121,-9,31,-8,-69,-73,-120,-119,-5,31,-71,31,-72,-70,-60,-39,-118,31,31,-59,-38,]),'PLUSPLUS':([41,43,51,57,63,65,67,68,69,70,71,75,76,77,78,80,81,82,84,86,91,93,96,97,98,101,102,104,105,107,110,111,113,114,115,119,121,125,128,140,141,154,156,157,158,159,161,163,164,165,167,168,169,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,213,214,216,217,222,227,238,243,253,254,256,259,261,262,270,271,288,289,292,296,309,314,315,316,317,318,319,321,322,323,325,326,338,340,341,347,348,349,350,352,353,],[113,-11,-10,113,-12,-210,-211,-113,113,-190,-206,161,113,113,-193,113,-204,-121,113,-192,113,-212,-112,-195,-109,-108,-122,-205,-110,113,-191,-196,113,-194,113,113,-111,-9,113,-204,113,113,113,113,-131,-203,-202,113,113,113,-120,113,113,113,113,113,113,113,113,-145,-147,-141,-150,-143,-148,-146,-149,-140,-144,-142,113,113,-117,113,113,113,113,113,113,113,113,-132,113,113,113,113,113,113,113,113,-119,-123,113,113,113,113,-201,-200,-199,-118,-133,-114,113,-116,-207,113,-130,113,113,113,113,113,-198,-197,113,-115,113,113,113,113,-124,-127,-126,113,113,-129,-125,113,-128,]),'VOID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[32,-28,-27,-23,-33,-26,-29,32,-35,-3,-25,-31,32,32,32,-20,-36,-19,32,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,32,32,-7,-11,-66,-2,-10,32,32,-61,32,-40,-6,-12,32,-121,32,-9,32,-8,-69,-73,32,32,32,32,-43,32,-120,32,-119,-5,32,-71,32,-72,-70,-60,-39,-44,32,-118,32,32,-59,-49,-38,]),'ENUM':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[33,-28,-27,-23,-33,-26,-29,33,-35,-3,-25,-31,33,33,33,-20,-36,-19,33,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,33,33,-7,-11,-66,-2,-10,33,33,-61,33,-40,-6,-12,33,-121,33,-9,33,-8,-69,-73,33,33,33,33,-43,33,-120,33,-119,-5,33,-71,33,-72,-70,-60,-39,-44,33,-118,33,33,-59,-49,-38,]),'CASE':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[91,-11,-10,-12,-113,91,91,-121,-112,-109,-108,-122,-110,91,-111,-9,-131,-120,91,91,-117,91,-132,-119,-123,-118,-133,-114,91,-116,-130,91,-115,91,91,-124,-127,-126,91,-129,-125,91,-128,]),'DEFAULT':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[92,-11,-10,-12,-113,92,92,-121,-112,-109,-108,-122,-110,92,-111,-9,-131,-120,92,92,-117,92,-132,-119,-123,-118,-133,-114,92,-116,-130,92,-115,92,92,-124,-127,-126,92,-129,-125,92,-128,]),'UNSIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,24,25,27,28,29,30,31,32,34,35,37,39,41,42,43,46,50,51,54,56,59,60,61,62,63,77,82,115,125,126,127,129,134,141,149,150,151,152,153,167,173,216,219,229,231,232,234,235,237,244,245,248,259,287,295,308,311,313,],[34,-28,-27,-23,-33,-26,-29,34,-35,-3,-25,-31,34,34,34,-20,-36,-19,34,-22,-68,-37,-30,-34,-67,-21,-24,-32,-1,-4,34,34,-7,-11,-66,-2,-10,34,34,-61,34,-40,-6,-12,34,-121,34,-9,34,-8,-69,-73,34,34,34,34,-43,34,-120,34,-119,-5,34,-71,34,-72,-70,-60,-39,-44,34,-118,34,34,-59,-49,-38,]),'ANDEQUAL':([65,67,71,75,81,87,93,104,111,140,142,159,161,166,174,202,209,253,254,256,288,317,318,320,324,],[-210,-211,-206,-184,-204,183,-212,-205,-196,-204,-182,-203,-202,-186,-188,-187,-185,-201,-200,-199,-207,-198,-197,-189,-183,]),'NE':([65,67,71,74,75,81,85,87,89,93,94,104,108,109,111,140,142,159,161,166,174,202,209,249,253,254,256,265,266,268,269,272,273,274,275,279,280,281,282,283,288,317,318,320,324,],[-210,-211,-206,-178,-184,-204,-167,-182,190,-212,-164,-205,-172,-175,-196,-204,-182,-203,-202,-186,-188,-187,-185,190,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,-177,-176,-180,-179,-181,-207,-198,-197,-189,-183,]),'WHILE':([41,43,51,63,68,69,77,82,96,98,101,102,105,119,121,125,155,158,167,168,171,191,193,201,216,217,259,261,262,270,271,292,319,321,323,325,338,340,341,347,349,350,352,353,],[112,-11,-10,-12,-113,112,112,-121,-112,-109,-108,-122,-110,112,-111,-9,250,-131,-120,112,112,-117,112,-132,-119,-123,-118,-133,-114,112,-116,-130,112,-115,112,112,-124,-127,-126,112,-129,-125,112,-128,]),'$end':([10,22,35,37,42,50,51,62,82,125,127,167,216,219,259,],[-3,0,-1,-4,-7,-2,-10,-6,-121,-9,-8,-120,-119,-5,-118,]),'LAND':([65,66,67,71,74,75,81,85,87,89,93,94,95,100,104,108,109,111,116,140,142,159,161,166,174,202,209,249,251,253,254,256,265,266,268,269,272,273,274,275,276,277,279,280,281,282,283,288,290,317,318,320,324,],[-210,-160,-211,-206,-178,-184,-204,-167,-182,-162,-212,-164,-156,-158,-205,-172,-175,-196,213,-204,-182,-203,-202,-186,-188,-187,-185,-163,213,-201,-200,-199,-174,-173,-165,-166,-169,-168,-171,-170,-159,-161,-177,-176,-180,-179,-181,-207,-157,-198,-197,-189,-183,]),'LBRACKET':([1,2,3,5,6,7,8,9,11,12,14,15,18,19,20,21,24,25,27,28,29,30,31,32,34,38,44,45,46,47,48,49,59,61,65,67,71,75,81,93,104,111,122,123,129,130,134,140,150,151,159,161,210,226,228,229,231,234,235,237,244,246,247,253,254,256,286,287,288,298,308,313,317,318,330,331,332,344,345,],[-28,-27,-23,-33,-26,-29,-17,-35,-25,-31,-16,-18,-20,-36,-75,-19,-22,-68,-37,-30,-34,57,-21,-24,-32,-14,-13,-15,57,-78,-77,-74,-61,-40,-210,-211,-206,164,-204,-212,-205,-196,-79,-76,-69,227,-73,-204,-51,-53,-203,-202,227,296,227,227,-71,-72,-70,-60,-39,-50,-52,-201,-200,-199,227,227,-207,296,-59,-38,-198,-197,-101,-103,-99,-102,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'additive_expression':([41,57,69,77,80,91,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,265,266,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'relational_expression':([41,57,69,77,80,91,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,177,189,190,193,198,199,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,268,269,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'direct_abstract_declarator':([130,210,228,229,286,287,],[226,226,298,226,298,226,]),'function_definition':([0,22,],[10,10,]),'inclusive_or_expression':([41,57,69,77,80,91,115,119,128,141,156,157,163,164,165,168,169,171,172,173,177,193,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,290,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'and_expression':([41,57,69,77,80,91,115,119,128,141,156,157,163,164,165,168,169,171,172,173,177,193,198,199,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,277,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'struct_declaration_list':([60,153,],[149,248,]),'assignment_expression':([41,69,77,80,115,119,128,141,157,163,164,165,168,169,171,172,173,177,193,200,208,214,222,270,314,316,319,322,323,325,326,347,348,352,],[88,88,88,88,88,88,220,88,88,255,88,88,88,88,88,263,88,267,88,88,88,88,220,88,88,337,88,88,88,88,220,88,88,88,]),'struct_declarator_list':([148,],[241,]),'struct_or_union_specifier':([0,8,13,14,15,22,39,41,54,56,60,77,115,126,141,149,150,151,153,173,229,232,248,287,295,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'type_qualifier_list':([20,],[49,]),'iteration_statement':([41,69,77,119,168,171,193,270,319,323,325,347,352,],[96,96,96,96,96,96,96,96,96,96,96,96,96,]),'type_specifier':([0,8,13,14,15,22,39,41,54,56,60,77,115,126,141,149,150,151,153,173,229,232,248,287,295,],[8,8,8,8,8,8,8,8,8,8,150,8,150,8,150,150,150,150,150,150,8,8,150,8,8,]),'parameter_type_list_opt':([229,287,295,],[299,299,328,]),'expression_statement':([41,69,77,119,168,171,193,270,319,323,325,347,352,],[98,98,98,98,98,98,98,98,98,98,98,98,98,]),'identifier_list':([56,],[135,]),'empty':([41,57,69,77,80,119,130,168,171,193,200,210,227,229,270,287,295,296,319,322,323,325,347,348,352,],[99,137,99,99,99,99,223,99,99,99,99,223,137,300,99,300,300,137,99,99,99,99,99,99,99,]),'logical_or_expression':([41,57,69,77,80,91,115,119,128,141,157,163,164,165,168,169,171,172,173,177,193,200,208,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'type_qualifier':([0,8,13,14,15,20,22,39,41,49,54,56,60,77,115,126,141,149,150,151,153,173,229,232,248,287,295,],[15,15,15,15,15,47,15,15,15,122,15,15,151,15,151,15,151,151,151,151,151,151,15,15,151,15,15,]),'init_declarator':([23,40,124,],[53,53,218,]),'declarator':([0,22,23,26,40,124,130,148,229,310,],[13,13,54,55,64,64,225,240,55,240,]),'storage_class_specifier':([0,8,13,14,15,22,39,41,54,56,77,126,229,232,287,295,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'exclusive_or_expression':([41,57,69,77,80,91,115,119,128,141,156,157,163,164,165,168,169,171,172,173,177,193,198,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,276,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'constant_expression':([57,91,227,238,243,296,309,],[138,192,138,307,312,138,333,]),'labeled_statement':([41,69,77,119,168,171,193,270,319,323,325,347,352,],[101,101,101,101,101,101,101,101,101,101,101,101,101,]),'logical_and_expression':([41,57,69,77,80,91,115,119,128,141,156,157,163,164,165,168,169,171,172,173,177,193,200,208,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[116,116,116,116,116,116,116,116,116,116,251,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'statement':([41,69,77,119,168,171,193,270,319,323,325,347,352,],[102,155,102,217,217,262,271,321,338,340,341,350,353,]),'pointer':([0,20,22,23,26,40,49,124,130,148,210,229,287,310,],[16,48,16,16,16,16,123,16,228,16,286,228,286,16,]),'assignment_operator':([87,],[177,]),'constant':([41,57,69,76,77,80,84,91,107,113,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,205,206,207,208,213,214,222,227,238,243,270,289,296,309,314,315,316,319,322,323,325,326,347,348,352,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'cast_expression':([41,57,69,77,80,91,107,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,205,206,207,208,213,214,222,227,238,243,270,289,296,309,314,315,316,319,322,323,325,326,347,348,352,],[74,74,74,74,74,74,202,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,281,282,283,74,74,74,74,74,74,74,74,324,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'compound_statement':([13,39,41,54,69,77,119,126,168,171,193,270,319,323,325,347,352,],[42,62,105,127,105,105,105,219,105,105,105,105,105,105,105,105,105,]),'unary_operator':([41,57,69,76,77,80,84,91,107,113,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,205,206,207,208,213,214,222,227,238,243,270,289,296,309,314,315,316,319,322,323,325,326,347,348,352,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'abstract_declarator':([130,210,229,287,],[230,230,302,302,]),'parameter_declaration':([56,229,232,287,295,],[136,136,304,136,136,]),'struct_or_union':([0,8,13,14,15,22,39,41,54,56,60,77,115,126,141,149,150,151,153,173,229,232,248,287,295,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'enumerator':([58,147,236,],[144,144,306,]),'postfix_expression':([41,57,69,76,77,80,84,91,107,113,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,205,206,207,208,213,214,222,227,238,243,270,289,296,309,314,315,316,319,322,323,325,326,347,348,352,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'primary_expression':([41,57,69,76,77,80,84,91,107,113,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,205,206,207,208,213,214,222,227,238,243,270,289,296,309,314,315,316,319,322,323,325,326,347,348,352,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'specifier_qualifier_list':([60,115,141,149,150,151,153,173,248,],[148,210,210,148,246,247,148,210,148,]),'type_name':([115,141,173,],[212,212,264,]),'declaration_list':([13,41,54,],[39,77,126,]),'multiplicative_expression':([41,57,69,77,80,91,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,279,280,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'init_declarator_list':([23,40,],[52,52,]),'direct_declarator':([0,16,22,23,26,40,124,130,148,228,229,310,],[30,46,30,30,30,30,30,30,30,46,30,30,]),'declaration_specifiers':([0,8,13,14,15,22,39,41,54,56,77,126,229,232,287,295,],[23,38,40,44,45,23,40,40,40,130,40,40,130,130,130,130,]),'parameter_type_list':([56,229,287,295,],[131,301,301,301,]),'constant_expression_opt':([57,227,296,],[139,297,329,]),'shift_expression':([41,57,69,77,80,91,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,177,189,190,193,194,195,196,197,198,199,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,272,273,274,275,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'parameter_list':([56,229,287,295,],[132,132,132,132,]),'enumerator_list':([58,147,],[145,239,]),'declaration':([0,13,22,39,41,54,77,126,],[37,43,37,63,43,43,63,63,]),'expression':([41,69,77,80,115,119,141,157,164,165,168,169,171,173,193,200,208,214,270,314,319,322,323,325,347,348,352,],[83,83,83,83,211,83,211,252,258,211,83,260,83,211,83,83,284,291,83,335,83,83,83,83,83,83,83,]),'enum_specifier':([0,8,13,14,15,22,39,41,54,56,60,77,115,126,141,149,150,151,153,173,229,232,248,287,295,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'translation_unit':([0,],[22,]),'statement_list':([41,77,],[119,168,]),'unary_expression':([41,57,69,76,77,80,84,91,107,113,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,175,176,177,189,190,193,194,195,196,197,198,199,200,203,204,205,206,207,208,213,214,222,227,238,243,270,289,296,309,314,315,316,319,322,323,325,326,347,348,352,],[87,142,87,166,87,87,174,142,142,209,87,87,87,87,142,142,87,87,87,87,87,87,87,87,87,142,142,87,142,142,87,142,142,142,142,142,142,87,142,142,142,142,142,87,142,87,87,142,142,142,87,142,142,142,87,142,87,87,87,87,87,87,87,87,87,]),'struct_declarator':([148,310,],[242,334,]),'equality_expression':([41,57,69,77,80,91,115,119,128,141,154,156,157,163,164,165,168,169,171,172,173,177,193,198,199,200,208,213,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[89,89,89,89,89,89,89,89,89,89,249,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'expression_opt':([41,69,77,80,119,168,171,193,200,270,319,322,323,325,347,348,352,],[90,90,90,170,90,90,90,90,278,90,90,339,90,90,90,351,90,]),'abstract_declarator_opt':([130,210,],[224,285,]),'initializer_list':([222,],[294,]),'external_declaration':([0,22,],[35,50,]),'struct_declaration':([60,149,153,248,],[152,245,152,245,]),'initializer':([128,222,326,],[221,293,342,]),'jump_statement':([41,69,77,119,168,171,193,270,319,323,325,347,352,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'conditional_expression':([41,57,69,77,80,91,115,119,128,141,157,163,164,165,168,169,171,172,173,177,193,200,208,214,222,227,238,243,270,296,309,314,315,316,319,322,323,325,326,347,348,352,],[120,143,120,120,120,143,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,143,143,143,120,143,143,120,336,120,120,120,120,120,120,120,120,120,]),'argument_expression_list':([163,],[257,]),'selection_statement':([41,69,77,119,168,171,193,270,319,323,325,347,352,],[121,121,121,121,121,121,121,121,121,121,121,121,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','cparse.py',23),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','cparse.py',28),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','cparse.py',35),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','cparse.py',40),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_1','cparse.py',47),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','cparse.py',52),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_3','cparse.py',57),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_4','cparse.py',62),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_1','cparse.py',69),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_2','cparse.py',74),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','cparse.py',81),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','cparse.py',86),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_1','cparse.py',93),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','cparse.py',98),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_3','cparse.py',103),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_4','cparse.py',108),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','cparse.py',113),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_6','cparse.py',118),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','cparse.py',125),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','cparse.py',126),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','cparse.py',127),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','cparse.py',128),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','cparse.py',129),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','cparse.py',137),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','cparse.py',138),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','cparse.py',139),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','cparse.py',140),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','cparse.py',141),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','cparse.py',142),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','cparse.py',143),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','cparse.py',144),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','cparse.py',145),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','cparse.py',146),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','cparse.py',147),
  ('type_specifier -> TYPEID','type_specifier',1,'p_type_specifier','cparse.py',148),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','cparse.py',156),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','cparse.py',157),
  ('struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','cparse.py',164),
  ('struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','cparse.py',169),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','cparse.py',174),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','cparse.py',181),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','cparse.py',182),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','cparse.py',190),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','cparse.py',195),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','cparse.py',202),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','cparse.py',207),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','cparse.py',214),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator_2','cparse.py',219),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration','cparse.py',226),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','cparse.py',233),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_2','cparse.py',238),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_3','cparse.py',243),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_4','cparse.py',248),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','cparse.py',255),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','cparse.py',260),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','cparse.py',267),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','cparse.py',272),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_3','cparse.py',277),
  ('enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE','enum_specifier',5,'p_enum_specifier_1','cparse.py',284),
  ('enum_specifier -> ENUM LBRACE enumerator_list RBRACE','enum_specifier',4,'p_enum_specifier_2','cparse.py',289),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_3','cparse.py',294),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','cparse.py',301),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','cparse.py',306),
  ('enumerator -> ID','enumerator',1,'p_enumerator_1','cparse.py',313),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator_2','cparse.py',318),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_1','cparse.py',325),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_2','cparse.py',330),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator_1','cparse.py',337),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator_2','cparse.py',342),
  ('direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET','direct_declarator',4,'p_direct_declarator_3','cparse.py',347),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator_4','cparse.py',352),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator_5','cparse.py',357),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator_6','cparse.py',362),
  ('pointer -> TIMES type_qualifier_list','pointer',2,'p_pointer_1','cparse.py',369),
  ('pointer -> TIMES','pointer',1,'p_pointer_2','cparse.py',374),
  ('pointer -> TIMES type_qualifier_list pointer','pointer',3,'p_pointer_3','cparse.py',379),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer_4','cparse.py',384),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','cparse.py',391),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','cparse.py',396),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','cparse.py',403),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list_2','cparse.py',408),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','cparse.py',415),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','cparse.py',420),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','cparse.py',427),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','cparse.py',432),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list_1','cparse.py',439),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list_2','cparse.py',444),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','cparse.py',451),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer_2','cparse.py',456),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer_2','cparse.py',457),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','cparse.py',464),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','cparse.py',469),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','cparse.py',476),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt_1','cparse.py',481),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt_2','cparse.py',486),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','cparse.py',493),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','cparse.py',498),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','cparse.py',503),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','cparse.py',510),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','cparse.py',515),
  ('direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','cparse.py',520),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','cparse.py',525),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','cparse.py',530),
  ('constant_expression_opt -> empty','constant_expression_opt',1,'p_constant_expression_opt_1','cparse.py',537),
  ('constant_expression_opt -> constant_expression','constant_expression_opt',1,'p_constant_expression_opt_2','cparse.py',542),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt_1','cparse.py',547),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt_2','cparse.py',552),
  ('statement -> labeled_statement','statement',1,'p_statement','cparse.py',560),
  ('statement -> expression_statement','statement',1,'p_statement','cparse.py',561),
  ('statement -> compound_statement','statement',1,'p_statement','cparse.py',562),
  ('statement -> selection_statement','statement',1,'p_statement','cparse.py',563),
  ('statement -> iteration_statement','statement',1,'p_statement','cparse.py',564),
  ('statement -> jump_statement','statement',1,'p_statement','cparse.py',565),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','cparse.py',573),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','cparse.py',578),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','cparse.py',583),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','cparse.py',590),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement_1','cparse.py',597),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement_2','cparse.py',602),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement_3','cparse.py',607),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement_4','cparse.py',612),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','cparse.py',619),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','cparse.py',624),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','cparse.py',631),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','cparse.py',636),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','cparse.py',641),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','cparse.py',648),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_2','cparse.py',653),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_3','cparse.py',658),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','cparse.py',665),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','cparse.py',670),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','cparse.py',675),
  ('jump_statement -> RETURN expression_opt SEMI','jump_statement',3,'p_jump_statement_4','cparse.py',680),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt_1','cparse.py',685),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt_2','cparse.py',690),
  ('expression -> assignment_expression','expression',1,'p_expression_1','cparse.py',697),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','cparse.py',702),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','cparse.py',709),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','cparse.py',714),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','cparse.py',722),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',723),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',724),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',725),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',726),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',727),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',728),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',729),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',730),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',731),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','cparse.py',732),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','cparse.py',740),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','cparse.py',745),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','cparse.py',752),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','cparse.py',759),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','cparse.py',764),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','cparse.py',771),
  ('logical_and_expression -> logical_and_expression LAND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','cparse.py',776),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','cparse.py',783),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','cparse.py',788),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','cparse.py',795),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','cparse.py',800),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','cparse.py',807),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression_2','cparse.py',812),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','cparse.py',818),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_2','cparse.py',823),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression_3','cparse.py',828),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','cparse.py',834),
  ('relational_expression -> relational_expression LT shift_expression','relational_expression',3,'p_relational_expression_2','cparse.py',839),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','cparse.py',844),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_4','cparse.py',849),
  ('relational_expression -> relational_expression GE shift_expression','relational_expression',3,'p_relational_expression_5','cparse.py',854),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','cparse.py',861),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression_2','cparse.py',866),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression_3','cparse.py',871),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','cparse.py',878),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','cparse.py',883),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','cparse.py',888),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','cparse.py',895),
  ('multiplicative_expression -> multiplicative_expression TIMES cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','cparse.py',900),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','cparse.py',905),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','cparse.py',910),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','cparse.py',917),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','cparse.py',922),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','cparse.py',929),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','cparse.py',934),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_3','cparse.py',939),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','cparse.py',944),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','cparse.py',949),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_6','cparse.py',954),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','cparse.py',961),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','cparse.py',962),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','cparse.py',963),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','cparse.py',964),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','cparse.py',965),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','cparse.py',966),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','cparse.py',973),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','cparse.py',978),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','cparse.py',983),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_4','cparse.py',988),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_5','cparse.py',993),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_6','cparse.py',998),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_7','cparse.py',1003),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_8','cparse.py',1008),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','cparse.py',1015),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','cparse.py',1016),
  ('primary_expression -> SCONST','primary_expression',1,'p_primary_expression','cparse.py',1017),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','cparse.py',1018),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','cparse.py',1025),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','cparse.py',1026),
  ('constant -> ICONST','constant',1,'p_constant','cparse.py',1033),
  ('constant -> FCONST','constant',1,'p_constant','cparse.py',1034),
  ('constant -> CCONST','constant',1,'p_constant','cparse.py',1035),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',1040),
]
