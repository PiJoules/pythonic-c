
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQNEGTLTleftPLUSMINUSleftMULTDIVleftNOTleftARROWINCDECARROW ASSIGN BREAK CASE COLON COMMA DEC DEDENT DEF DEFINE DIV DO ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GT IF IFNDEF INC INCLUDE INCLUDE_LOCAL INDENT INT LBRACE LBRACKET LPAR LT MINUS MULT NAME NE NEWLINE NOT NULL PASS PLUS RBRACE RBRACKET RETURN RPAR STRING STRUCT SWITCH TYPEDEF WHILE WSmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGinclude_stmt : INCLUDE_LOCAL STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DO COLON suite WHILE exprwhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr MULT expr\n                | expr DIV expr\n                | expr LT expr\n                | expr EQ expr\n                | expr GT expr\n                | powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT exprexpr : MULT exprexpr : PLUS exprexpr : MINUS exprexpr : expr INCexpr : expr DECexpr : NOT exprexpr : NULLpower : atompower : atom traileratom : NAMEexpr : INTexpr : FLOATexpr : STRINGatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprtrailer : LPAR arglist RPARtrailer : LPAR RPARtestlist : testlist_multi COMMA\n                    | testlist_multi testlist_multi : testlist_multi COMMA expr\n                        | exprarglist : arglist COMMA argument\n                | argumentargument : exprempty : '
    
_lr_action_items = {'IF':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[1,1,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,1,-131,-113,-80,-88,-84,1,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'COMMA':([14,16,19,31,41,60,63,66,70,80,83,86,95,96,97,99,100,104,107,109,110,111,112,114,115,116,117,118,121,122,123,124,126,129,130,131,133,134,136,140,147,152,153,155,156,157,160,162,163,164,167,169,170,171,172,173,174,185,186,187,188,205,206,207,220,221,230,],[-121,-126,-109,-125,-124,-120,-123,-118,-117,-122,-56,-54,-129,-127,139,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-139,-132,-138,151,-64,-62,-63,-65,-60,159,-52,-128,-112,-131,-57,-67,-113,-66,-55,-41,189,-130,-12,-10,-11,194,-13,-48,195,-137,-68,-61,-53,-42,-14,-47,-97,226,-98,]),'DEDENT':([12,14,16,19,22,29,31,36,37,39,41,51,60,63,66,70,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,152,156,176,178,180,182,183,184,192,198,203,204,210,212,214,215,216,218,219,223,224,225,228,229,231,],[-75,-121,-126,-109,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,-131,-113,-80,-88,-84,203,-100,-79,-7,-81,-99,-101,219,-94,-90,-92,-85,-82,-89,-95,-91,-86,-93,-87,-96,]),'DO':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[3,3,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,3,-131,-113,-80,-88,-84,3,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'ASSIGN':([2,14,16,19,25,31,41,60,63,66,70,80,83,86,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,126,129,130,131,136,140,147,152,153,155,156,157,160,186,],[69,-121,-126,-109,-123,-125,-124,-120,-123,-118,-117,-122,-56,-54,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-64,-62,-63,-65,161,-128,-112,-131,-57,-67,-113,-66,-55,-68,]),'INC':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,140,144,147,152,154,156,164,184,188,202,220,230,],[70,-121,-126,-109,-123,-125,-124,-120,70,-123,-118,-117,-122,70,70,-127,70,70,70,70,70,70,70,-111,70,70,70,70,70,70,70,70,70,70,-132,-128,70,-112,-131,70,70,70,70,70,70,70,70,]),'RBRACKET':([14,16,19,31,38,41,60,63,66,70,80,95,96,97,99,100,104,107,109,110,111,112,114,115,116,117,118,122,127,140,147,152,154,156,164,],[-121,-126,-109,-125,96,-124,-120,-123,-118,-117,-122,-129,-127,140,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,155,-128,-112,-131,186,-113,-130,]),'ELSE':([148,176,200,203,212,214,223,225,231,],[179,199,213,-99,-94,213,-95,179,-96,]),'NEWLINE':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,21,22,24,25,27,28,29,31,33,34,36,37,39,40,41,43,44,47,51,52,59,60,61,63,66,70,76,77,78,80,81,82,83,86,89,92,94,96,99,100,102,104,107,108,109,110,111,112,113,114,115,116,117,118,122,126,129,130,131,136,137,140,141,144,145,146,147,148,152,153,155,156,157,160,166,168,176,178,180,184,186,188,190,191,192,193,198,201,203,208,209,216,217,218,219,222,225,227,229,],[10,-71,-24,-38,-23,-28,-43,77,-5,-18,-75,-19,-121,81,-126,-26,-109,-6,-16,-39,-123,-36,-22,-77,-125,-25,-29,-78,-76,-74,-27,-124,-37,-51,-21,-15,-30,-31,-120,-20,-123,-118,-117,119,-3,-4,-122,-17,-73,-56,-54,-70,-69,-35,-127,-116,-119,-34,-114,-115,119,-111,-110,-108,-105,-72,-107,-106,-104,-102,-103,-132,-64,-62,-63,-65,-52,-32,-128,-49,-33,119,177,-112,-83,-131,-57,-67,-113,-66,-55,119,-8,-80,-88,-84,-79,-68,-53,-40,-50,-7,-9,-81,119,-99,-44,119,-85,119,-82,-89,119,-86,119,-87,]),'DIV':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,140,144,147,152,154,156,164,184,188,202,220,230,],[68,-121,-126,-109,-123,-125,-124,-120,68,-123,-118,-117,-122,68,68,-127,68,-119,68,-114,68,68,68,-111,68,68,-105,68,68,68,-104,68,68,68,-132,-128,68,-112,-131,68,68,68,68,68,68,68,68,]),'DEC':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,140,144,147,152,154,156,164,184,188,202,220,230,],[66,-121,-126,-109,-123,-125,-124,-120,66,-123,-118,-117,-122,66,66,-127,66,66,66,66,66,66,66,-111,66,66,66,66,66,66,66,66,66,66,-132,-128,66,-112,-131,66,66,66,66,66,66,66,66,]),'RPAR':([14,16,19,31,41,60,63,66,70,79,80,83,86,87,96,99,100,104,106,107,109,110,111,112,114,115,116,117,118,121,122,123,124,126,129,130,131,133,134,136,140,142,147,152,153,155,156,157,160,167,169,170,171,172,185,186,187,188,206,],[-121,-126,-109,-125,-124,-120,-123,-118,-117,122,-122,-56,-54,132,-127,-116,-119,-114,147,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-139,-132,-138,152,-64,-62,-63,-65,-60,158,-52,-128,168,-112,-131,-57,-67,-113,-66,-55,-12,-10,-11,193,-13,-137,-68,-61,-53,-14,]),'STRING':([0,1,9,10,12,14,16,18,19,21,22,23,29,30,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,127,128,139,140,147,148,149,150,151,152,156,161,176,178,180,181,182,183,184,192,198,203,204,211,216,218,219,225,226,229,],[16,16,16,-5,-75,-121,-126,16,-109,-6,-16,89,-77,92,-125,-78,-76,16,-74,-124,16,16,-15,16,16,16,16,16,-120,-123,16,-118,16,16,16,-117,16,16,16,16,16,-3,-4,16,-122,-17,-127,-116,-119,16,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,16,16,16,-128,-112,-83,16,16,16,-131,-113,16,-80,-88,-84,16,16,-100,-79,-7,-81,-99,-101,16,-85,-82,-89,-86,16,-87,]),'ARROW':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,84,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,132,140,141,144,147,152,154,156,158,164,168,184,188,193,202,220,230,],[64,-121,-126,-109,-123,-125,-124,-120,64,-123,-118,-117,-122,64,125,64,-127,64,64,64,64,64,64,64,-111,64,64,64,64,64,64,64,64,64,64,-132,-58,-128,165,64,-112,-131,64,64,-59,64,-8,64,64,-9,64,64,64,]),'RETURN':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[18,18,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,18,-131,-113,-80,-88,-84,18,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'NOT':([0,1,9,10,12,14,16,18,19,21,22,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,127,128,139,140,147,148,149,150,151,152,156,161,176,178,180,181,182,183,184,192,198,203,204,211,216,218,219,225,226,229,],[46,46,46,-5,-75,-121,-126,46,-109,-6,-16,-77,-125,-78,-76,46,-74,-124,46,46,-15,46,46,46,46,46,-120,-123,46,-118,46,46,46,-117,46,46,46,46,46,-3,-4,46,-122,-17,-127,-116,-119,46,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,46,46,46,-128,-112,-83,46,46,46,-131,-113,46,-80,-88,-84,46,46,-100,-79,-7,-81,-99,-101,46,-85,-82,-89,-86,46,-87,]),'COLON':([3,14,16,19,25,31,41,60,62,63,66,70,80,96,99,100,103,104,105,107,109,110,111,112,114,115,116,117,118,122,140,141,147,152,156,168,170,175,179,193,199,202,213,220,221,230,],[76,-121,-126,-109,90,-125,-124,-120,108,-123,-118,-117,-122,-127,-116,-119,145,-114,146,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,166,-112,-131,-113,-8,90,90,201,-9,209,217,222,-97,227,-98,]),'INDENT':([119,177,],[149,200,]),'NAME':([0,1,9,10,12,14,16,18,19,20,21,22,26,29,31,32,35,36,37,38,39,41,42,45,46,49,50,51,54,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,83,86,87,88,90,91,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,125,126,127,128,129,130,131,138,139,140,142,143,147,148,149,150,151,152,153,155,156,157,159,160,161,165,176,178,180,181,182,183,184,186,189,192,194,195,198,203,204,211,216,218,219,225,226,229,],[25,63,25,-5,-75,-121,-126,63,-109,86,-6,-16,86,-77,-125,93,94,-78,-76,63,-74,-124,98,63,63,101,102,-15,63,63,63,63,63,-120,-123,109,63,-118,63,63,63,-117,63,63,63,63,63,-3,-4,63,-122,-17,-56,-54,86,86,86,137,-127,-116,-119,63,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,86,-64,63,63,-62,-63,-65,162,63,-128,170,175,-112,-83,25,63,63,-131,-57,-67,-113,-66,86,-55,63,86,-80,-88,-84,63,25,-100,-79,-68,205,-7,170,175,-81,-99,-101,63,-85,-82,-89,-86,63,-87,]),'TYPEDEF':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[26,26,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,26,-131,-113,-80,-88,-84,26,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'ENDIF':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[27,27,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,27,-131,-113,-80,-88,-84,27,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'MINUS':([0,1,2,9,10,12,14,16,18,19,21,22,25,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,127,128,139,140,144,147,148,149,150,151,152,154,156,161,164,176,178,180,181,182,183,184,188,192,198,202,203,204,211,216,218,219,220,225,226,229,230,],[45,45,75,45,-5,-75,-121,-126,45,-109,-6,-16,-123,-77,-125,-78,-76,45,-74,-124,45,45,-15,45,45,45,45,45,-120,75,-123,45,-118,45,45,45,-117,45,45,45,45,45,-3,-4,45,-122,-17,75,75,-127,-116,-119,45,75,-114,75,75,-115,-111,75,75,-105,75,75,75,-104,-102,-103,75,-132,45,45,45,-128,75,-112,-83,45,45,45,-131,75,75,45,75,-80,-88,-84,45,45,-100,75,75,-7,-81,75,-99,-101,45,-85,-82,-89,75,-86,45,-87,75,]),'ELLIPSIS':([142,194,],[172,172,]),'$end':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,48,51,53,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,152,156,176,178,180,184,192,198,203,216,218,219,225,229,],[-140,-1,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-2,-15,0,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,-131,-113,-80,-88,-84,-79,-7,-81,-99,-85,-82,-89,-86,-87,]),'NE':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,140,144,147,152,154,156,164,184,188,202,220,230,],[65,-121,-126,-109,-123,-125,-124,-120,65,-123,-118,-117,-122,65,65,-127,-116,-119,65,-114,65,65,-115,-111,-110,-108,-105,65,-107,-106,-104,-102,-103,65,-132,-128,65,-112,-131,65,-113,65,65,65,65,65,65,]),'CASE':([200,203,212,214,223,231,],[211,-99,-94,211,-95,-96,]),'ENUM':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[32,32,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,32,-131,-113,-80,-88,-84,32,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'IFNDEF':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[35,35,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,35,-131,-113,-80,-88,-84,35,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'INCLUDE':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[30,30,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,30,-131,-113,-80,-88,-84,30,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'RBRACE':([14,16,19,31,41,60,63,66,70,80,83,86,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,126,129,130,131,135,136,140,147,152,153,155,156,157,160,162,163,173,174,186,188,195,196,197,205,207,],[-121,-126,-109,-125,-124,-120,-123,-118,-117,-122,-56,-54,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-64,-62,-63,-65,160,-52,-128,-112,-131,-57,-67,-113,-66,-55,-41,190,-48,-140,-68,-53,-45,208,-46,-42,-47,]),'BREAK':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[5,5,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,5,-131,-113,-80,-88,-84,5,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'LBRACKET':([0,1,9,10,12,14,16,18,19,21,22,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,83,85,86,91,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,126,127,128,129,130,131,133,135,136,139,140,147,148,149,150,151,152,153,155,156,157,160,161,176,178,180,181,182,183,184,186,187,191,192,198,203,204,211,216,218,219,225,226,229,],[38,38,38,-5,-75,-121,-126,38,-109,-6,-16,-77,-125,-78,-76,38,-74,-124,38,38,-15,38,38,38,38,38,-120,-123,38,-118,38,38,38,-117,38,38,38,38,38,-3,-4,38,-122,-17,-56,127,-54,127,-127,-116,-119,38,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-64,38,38,127,-63,-65,127,127,127,38,-128,-112,-83,38,38,38,-131,-57,-67,-113,-66,-55,38,-80,-88,-84,38,38,-100,-79,-68,127,127,-7,-81,-99,-101,38,-85,-82,-89,-86,38,-87,]),'INT':([0,1,9,10,12,14,16,18,19,21,22,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,127,128,139,140,147,148,149,150,151,152,156,161,176,178,180,181,182,183,184,192,198,203,204,211,216,218,219,225,226,229,],[41,41,41,-5,-75,-121,-126,41,-109,-6,-16,-77,-125,-78,-76,41,-74,-124,41,41,-15,41,41,41,41,41,-120,-123,41,-118,41,41,41,-117,41,41,41,41,41,-3,-4,41,-122,-17,-127,-116,-119,41,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,41,41,41,-128,-112,-83,41,41,41,-131,-113,41,-80,-88,-84,41,41,-100,-79,-7,-81,-99,-101,41,-85,-82,-89,-86,41,-87,]),'DEF':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[42,42,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,42,-131,-113,-80,-88,-84,42,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'ELIF':([148,203,225,],[181,-99,181,]),'PASS':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[43,43,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,43,-131,-113,-80,-88,-84,43,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'GT':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,83,85,86,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,126,129,130,131,140,144,147,152,153,154,155,156,157,160,164,184,186,188,202,220,230,],[67,-121,-126,-109,-123,-125,-124,-120,67,-123,-118,-117,-122,67,-56,128,-54,67,-127,-116,-119,67,-114,67,67,-115,-111,-110,-108,-105,67,-107,-106,-104,-102,-103,67,-132,-64,-62,-63,-65,-128,67,-112,-131,-57,67,-67,-113,-66,-55,67,67,-68,67,67,67,67,]),'STRUCT':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[49,49,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,49,-131,-113,-80,-88,-84,49,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'DEFINE':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[50,50,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,50,-131,-113,-80,-88,-84,50,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'EQ':([2,14,16,19,25,31,41,60,62,63,66,70,80,82,95,96,99,100,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,140,144,147,152,154,156,164,184,188,202,220,230,],[71,-121,-126,-109,-123,-125,-124,-120,71,-123,-118,-117,-122,71,71,-127,-116,-119,71,-114,71,71,-115,-111,-110,-108,-105,71,-107,-106,-104,-102,-103,71,-132,-128,71,-112,-131,71,-113,71,71,71,71,71,71,]),'INCLUDE_LOCAL':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[23,23,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,23,-131,-113,-80,-88,-84,23,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'LT':([0,1,2,9,10,12,14,16,18,19,21,22,25,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,127,128,139,140,144,147,148,149,150,151,152,154,156,161,164,176,178,180,181,182,183,184,188,192,198,202,203,204,211,216,218,219,220,225,226,229,230,],[20,20,72,20,-5,-75,-121,-126,20,-109,-6,-16,-123,-77,-125,-78,-76,20,-74,-124,20,20,-15,20,20,20,20,20,-120,72,-123,20,-118,20,20,20,-117,20,20,20,20,20,-3,-4,20,-122,-17,72,72,-127,-116,-119,20,72,-114,72,72,-115,-111,-110,-108,-105,72,-107,-106,-104,-102,-103,72,-132,20,20,20,-128,72,-112,-83,20,20,20,-131,72,-113,20,72,-80,-88,-84,20,20,-100,72,72,-7,-81,72,-99,-101,20,-85,-82,-89,72,-86,20,-87,72,]),'FLOAT':([0,1,9,10,12,14,16,18,19,21,22,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,127,128,139,140,147,148,149,150,151,152,156,161,176,178,180,181,182,183,184,192,198,203,204,211,216,218,219,225,226,229,],[31,31,31,-5,-75,-121,-126,31,-109,-6,-16,-77,-125,-78,-76,31,-74,-124,31,31,-15,31,31,31,31,31,-120,-123,31,-118,31,31,31,-117,31,31,31,31,31,-3,-4,31,-122,-17,-127,-116,-119,31,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,31,31,31,-128,-112,-83,31,31,31,-131,-113,31,-80,-88,-84,31,31,-100,-79,-7,-81,-99,-101,31,-85,-82,-89,-86,31,-87,]),'WHILE':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,120,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[54,54,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,150,-132,-128,-112,-83,54,-131,-113,-80,-88,-84,54,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'MULT':([0,1,2,9,10,12,14,16,18,19,21,22,25,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,127,128,139,140,144,147,148,149,150,151,152,154,156,161,164,176,178,180,181,182,183,184,188,192,198,202,203,204,211,216,218,219,220,225,226,229,230,],[55,55,73,55,-5,-75,-121,-126,55,-109,-6,-16,-123,-77,-125,-78,-76,55,-74,-124,55,55,-15,55,55,55,55,55,-120,73,-123,55,-118,55,55,55,-117,55,55,55,55,55,-3,-4,55,-122,-17,73,73,-127,73,-119,55,73,-114,73,73,73,-111,73,73,-105,73,73,73,-104,73,73,73,-132,55,55,55,-128,73,-112,-83,55,55,55,-131,73,73,55,73,-80,-88,-84,55,55,-100,73,73,-7,-81,73,-99,-101,55,-85,-82,-89,73,-86,55,-87,73,]),'SWITCH':([0,9,10,12,14,16,19,21,22,29,31,36,37,39,41,51,60,63,66,70,77,78,80,81,96,99,100,104,107,109,110,111,112,114,115,116,117,118,122,140,147,148,149,152,156,176,178,180,182,183,184,192,198,203,204,216,218,219,225,229,],[56,56,-5,-75,-121,-126,-109,-6,-16,-77,-125,-78,-76,-74,-124,-15,-120,-123,-118,-117,-3,-4,-122,-17,-127,-116,-119,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,-128,-112,-83,56,-131,-113,-80,-88,-84,56,-100,-79,-7,-81,-99,-101,-85,-82,-89,-86,-87,]),'LPAR':([0,1,9,10,12,14,16,18,19,20,21,22,25,26,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,87,88,90,96,98,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,125,127,128,139,140,147,148,149,150,151,152,156,159,161,165,176,178,180,181,182,183,184,192,198,203,204,211,216,218,219,225,226,229,],[57,57,57,-5,-75,79,-126,57,-109,87,-6,-16,-123,87,-77,-125,-78,-76,57,-74,-124,57,57,-15,57,57,57,57,57,-120,-123,57,-118,57,57,57,-117,57,57,57,57,57,-3,-4,57,-122,-17,87,87,87,-127,142,-116,-119,57,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,87,57,57,57,-128,-112,-83,57,57,57,-131,-113,87,57,87,-80,-88,-84,57,57,-100,-79,-7,-81,-99,-101,57,-85,-82,-89,-86,57,-87,]),'PLUS':([0,1,2,9,10,12,14,16,18,19,21,22,25,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,95,96,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,122,127,128,139,140,144,147,148,149,150,151,152,154,156,161,164,176,178,180,181,182,183,184,188,192,198,202,203,204,211,216,218,219,220,225,226,229,230,],[58,58,74,58,-5,-75,-121,-126,58,-109,-6,-16,-123,-77,-125,-78,-76,58,-74,-124,58,58,-15,58,58,58,58,58,-120,74,-123,58,-118,58,58,58,-117,58,58,58,58,58,-3,-4,58,-122,-17,74,74,-127,-116,-119,58,74,-114,74,74,-115,-111,74,74,-105,74,74,74,-104,-102,-103,74,-132,58,58,58,-128,74,-112,-83,58,58,58,-131,74,74,58,74,-80,-88,-84,58,58,-100,74,74,-7,-81,74,-99,-101,58,-85,-82,-89,74,-86,58,-87,74,]),'NULL':([0,1,9,10,12,14,16,18,19,21,22,29,31,36,37,38,39,41,45,46,51,54,55,56,57,58,60,63,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,96,99,100,102,104,107,109,110,111,112,114,115,116,117,118,122,127,128,139,140,147,148,149,150,151,152,156,161,176,178,180,181,182,183,184,192,198,203,204,211,216,218,219,225,226,229,],[60,60,60,-5,-75,-121,-126,60,-109,-6,-16,-77,-125,-78,-76,60,-74,-124,60,60,-15,60,60,60,60,60,-120,-123,60,-118,60,60,60,-117,60,60,60,60,60,-3,-4,60,-122,-17,-127,-116,-119,60,-114,-115,-111,-110,-108,-105,-107,-106,-104,-102,-103,-132,60,60,60,-128,-112,-83,60,60,60,-131,-113,60,-80,-88,-84,60,60,-100,-79,-7,-81,-99,-101,60,-85,-82,-89,-86,60,-87,]),'LBRACE':([20,26,87,88,90,93,101,125,159,165,],[88,88,88,88,88,138,143,88,88,88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'array':([85,91,129,133,135,136,153,187,191,],[126,126,126,126,126,126,126,126,126,]),'expr':([0,1,9,18,38,45,46,54,55,56,57,58,65,67,68,69,71,72,73,74,75,79,102,127,128,139,149,150,151,161,181,182,211,226,],[2,62,2,82,95,99,100,103,104,105,106,107,110,111,112,113,114,115,116,117,118,121,144,154,156,164,2,184,121,188,202,2,220,230,]),'trailer':([14,],[80,]),'assign_stmt':([0,9,149,182,],[4,4,4,4,]),'compound_stmt':([0,9,149,182,],[22,22,22,22,]),'argument':([79,151,],[123,185,]),'struct_decl_stmt':([0,9,149,182,],[7,7,7,7,]),'struct_decl':([0,9,149,182,],[8,8,8,8,]),'stmt_list':([0,],[9,]),'case_expr_list':([211,],[221,]),'param_list_contents':([87,],[134,]),'optional_comma':([174,],[196,]),'return_stmt':([0,9,149,182,],[11,11,11,11,]),'while_stmt':([0,9,149,182,],[12,12,12,12,]),'include_stmt':([0,9,149,182,],[13,13,13,13,]),'atom':([0,1,9,18,38,45,46,54,55,56,57,58,65,67,68,69,71,72,73,74,75,79,102,127,128,139,149,150,151,161,181,182,211,226,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'small_stmt':([0,9,149,182,],[15,15,15,15,]),'array_contents':([38,],[97,]),'var_decl_stmt':([0,9,149,182,],[17,17,17,17,]),'while_orelse':([176,],[198,]),'power':([0,1,9,18,38,45,46,54,55,56,57,58,65,67,68,69,71,72,73,74,75,79,102,127,128,139,149,150,151,161,181,182,211,226,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'type_declaration':([20,26,87,88,90,125,159,165,],[85,91,133,135,136,153,187,191,]),'stmt':([0,9,149,182,],[21,78,183,204,]),'expr_stmt':([0,9,149,182,],[6,6,6,6,]),'varaglist_elem':([142,194,],[169,206,]),'param_type_list':([20,26,87,88,90,125,159,165,],[84,84,84,84,84,84,84,84,]),'inline_func_decl':([20,26,87,88,90,125,159,165,],[83,83,83,83,83,83,83,83,]),'case_list':([200,],[214,]),'enum_decl':([0,9,149,182,],[24,24,24,24,]),'endif_stmt':([0,9,149,182,],[28,28,28,28,]),'switch_stmt':([0,9,149,182,],[29,29,29,29,]),'varargslist':([142,],[171,]),'bracket_list':([85,91,133,135,136,153,187,191,],[129,129,129,129,129,129,129,129,]),'switch_stmts':([200,],[210,]),'func_decl':([0,9,149,182,],[33,33,33,33,]),'typedef_stmt':([0,9,149,182,],[34,34,34,34,]),'case':([200,214,],[212,223,]),'funcdef':([0,9,149,182,],[36,36,36,36,]),'dowhile_stmt':([0,9,149,182,],[37,37,37,37,]),'if_orelse':([148,225,],[180,229,]),'if_stmt':([0,9,149,182,],[39,39,39,39,]),'enum_decl_stmt':([0,9,149,182,],[40,40,40,40,]),'parameters':([98,],[141,]),'default':([200,214,],[215,224,]),'enum_name_list':([138,],[163,]),'var_decl':([0,9,142,143,149,182,194,195,],[44,44,167,173,44,44,167,207,]),'struct_decl_list':([143,],[174,]),'suite':([76,108,145,166,201,209,217,222,227,],[120,148,176,192,216,218,225,228,231,]),'ifndef_stmt':([0,9,149,182,],[47,47,47,47,]),'empty':([0,174,],[48,197,]),'stmts':([149,],[182,]),'pointer_or_array':([85,91,129,133,135,136,153,187,191,],[131,131,157,131,131,131,131,131,131,]),'arglist':([79,],[124,]),'simple_stmt':([0,9,149,182,],[51,51,51,51,]),'break':([0,9,149,182,],[52,52,52,52,]),'module':([0,],[53,]),'switch_suite':([146,],[178,]),'pass':([0,9,149,182,],[59,59,59,59,]),'pointer':([85,91,129,133,135,136,153,187,191,],[130,130,130,130,130,130,130,130,130,]),'define_stmt':([0,9,149,182,],[61,61,61,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',39),
  ('module -> empty','module',1,'p_empty_module','cparse.py',43),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',48),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',53),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',58),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',63),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',115),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',127),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',132),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',137),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',141),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',142),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',146),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',150),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',155),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',156),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',160),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',164),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',165),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',166),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',167),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',168),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',169),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',170),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',171),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',172),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',173),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',174),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',175),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',176),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',177),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',183),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',189),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',193),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',197),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',201),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',206),
  ('break -> BREAK','break',1,'p_break','cparse.py',210),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',215),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',219),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',223),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',227),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',233),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',237),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',241),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',242),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',247),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',251),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',256),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',262),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',266),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',271),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',276),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',281),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',285),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',292),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',296),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',300),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',304),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',308),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',312),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',319),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',335),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',336),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',340),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',344),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',348),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',352),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',357),
  ('include_stmt -> INCLUDE_LOCAL STRING','include_stmt',2,'p_include_local','cparse.py',361),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',366),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',371),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',376),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',384),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',385),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',386),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',387),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',388),
  ('dowhile_stmt -> DO COLON suite WHILE expr','dowhile_stmt',5,'p_dowhile','cparse.py',396),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',401),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',405),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',409),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',415),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',419),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',423),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',427),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',431),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',436),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',440),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',444),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',448),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',452),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',456),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',460),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',464),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',468),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',472),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',476),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',481),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',485),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',489),
  ('expr -> expr PLUS expr','expr',3,'p_comparison','cparse.py',522),
  ('expr -> expr MINUS expr','expr',3,'p_comparison','cparse.py',523),
  ('expr -> expr MULT expr','expr',3,'p_comparison','cparse.py',524),
  ('expr -> expr DIV expr','expr',3,'p_comparison','cparse.py',525),
  ('expr -> expr LT expr','expr',3,'p_comparison','cparse.py',526),
  ('expr -> expr EQ expr','expr',3,'p_comparison','cparse.py',527),
  ('expr -> expr GT expr','expr',3,'p_comparison','cparse.py',528),
  ('expr -> power','expr',1,'p_comparison','cparse.py',529),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',536),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',540),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',544),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',548),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',552),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',556),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',560),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',564),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',568),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',572),
  ('expr -> NULL','expr',1,'p_null','cparse.py',580),
  ('power -> atom','power',1,'p_power_1','cparse.py',584),
  ('power -> atom trailer','power',2,'p_power_2','cparse.py',588),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',592),
  ('expr -> INT','expr',1,'p_atom_int','cparse.py',596),
  ('expr -> FLOAT','expr',1,'p_atom_float','cparse.py',600),
  ('expr -> STRING','expr',1,'p_atom_str','cparse.py',604),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',608),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',612),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',616),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',620),
  ('trailer -> LPAR arglist RPAR','trailer',3,'p_trailer','cparse.py',627),
  ('trailer -> LPAR RPAR','trailer',2,'p_trailer_empty','cparse.py',631),
  ('testlist -> testlist_multi COMMA','testlist',2,'p_testlist','cparse.py',639),
  ('testlist -> testlist_multi','testlist',1,'p_testlist','cparse.py',640),
  ('testlist_multi -> testlist_multi COMMA expr','testlist_multi',3,'p_testlist_multi','cparse.py',655),
  ('testlist_multi -> expr','testlist_multi',1,'p_testlist_multi','cparse.py',656),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',671),
  ('arglist -> argument','arglist',1,'p_arglist','cparse.py',672),
  ('argument -> expr','argument',1,'p_argument','cparse.py',681),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',685),
]
