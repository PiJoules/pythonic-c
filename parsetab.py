
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVDEREFUSUBUADDleftARROWPOSTINCPOSTDECPERIODLBRACKETADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DEREF DIV DOWHILE ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PERIOD PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF UADD USUB WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suitefuncdef : DEF NAME parameters ARROW type_declaration COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE stringexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DOWHILE expr COLON suitewhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr DIV exprexpr : expr MOD exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : expr PERIOD NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT expr %prec DEREFexpr : PLUS expr %prec UADDexpr : MINUS expr %prec USUBexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : stringstring : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarray_contents : array_contents COMMAarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'DEF':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[1,1,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,1,-81,-84,1,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'EQ':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,87,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,87,87,-126,-139,-130,87,87,-129,-128,87,87,-146,-133,-125,-131,-132,87,-123,-107,87,-103,-110,87,-111,-105,-109,-104,87,-102,87,87,-122,-106,-120,87,-117,-108,-121,87,-118,-147,87,-136,87,87,-124,-138,87,-137,87,87,87,87,]),'MINUS':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[2,2,2,-145,2,2,2,-74,-76,2,2,-78,-75,2,2,89,-143,-141,2,-140,-16,2,2,-17,-77,2,-134,-144,-142,-6,2,-119,2,-5,-135,2,-127,-140,-4,-3,89,89,-126,-139,-130,89,89,2,2,2,2,-129,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-128,2,2,-18,89,89,-146,-133,-125,-131,2,-132,2,89,-123,2,2,89,89,-103,89,89,89,-105,89,-104,89,-102,89,89,-122,-106,89,89,89,89,-121,89,89,-147,2,89,-136,89,89,-124,-80,-88,-138,-79,2,89,-137,2,-83,-7,2,-81,89,-84,2,2,-100,2,89,-8,-99,-101,-82,89,-89,-85,2,-86,89,-87,]),'LE':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,90,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,90,90,-126,-139,-130,90,90,-129,-128,90,90,-146,-133,-125,-131,-132,90,-123,90,90,-103,-110,90,-111,-105,-109,-104,90,-102,90,90,-122,-106,90,90,-117,-108,-121,90,-118,-147,90,-136,90,90,-124,-138,90,-137,90,90,90,90,]),'INV':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[37,37,37,37,37,37,-74,-76,37,37,-78,-75,37,37,37,-16,37,37,-17,-77,37,-6,37,37,-5,37,-4,-3,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-18,37,37,37,37,37,-80,-88,-79,37,37,-83,-7,37,-81,-84,37,37,-100,37,-8,-99,-101,-82,-89,-85,37,-86,-87,]),'RBRACE':([5,26,27,45,48,51,61,64,68,69,75,78,81,83,84,91,108,118,119,120,121,123,129,131,133,134,135,139,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,168,169,172,187,188,189,192,193,194,195,200,204,206,208,214,222,224,225,226,232,243,],[-145,-143,-141,-134,-144,-142,-119,-135,-127,-140,-126,-57,-55,-139,-130,-129,-128,-146,-133,-125,-131,-132,-123,-66,-63,-65,-64,192,-107,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-122,-106,-120,-113,-117,-108,-121,-114,-118,-53,-147,-136,-68,-124,-67,-56,-58,217,-42,-138,-137,-154,-49,-69,-54,-47,242,-46,-43,-48,]),'LPAR':([0,2,4,5,6,8,9,11,13,15,19,20,21,22,23,24,26,27,28,31,32,34,35,37,40,41,42,45,48,51,52,56,62,63,64,66,67,69,70,71,77,79,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,115,118,122,124,130,132,140,169,170,179,191,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[6,6,6,-145,6,6,6,-74,-76,77,6,6,-78,-75,6,6,-143,-141,77,6,-140,-16,6,6,-17,-77,6,-134,-144,-142,-6,6,6,-5,124,6,128,-140,-4,-3,77,77,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-18,77,-146,6,6,6,6,77,-147,6,77,77,-80,-88,-79,6,6,-83,-7,6,-81,-84,6,6,-100,6,-8,-99,-101,-82,-89,-85,6,-86,-87,]),'IFNDEF':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[7,7,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,7,-81,-84,7,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'OR':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,104,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,104,104,-126,-139,-130,104,104,-129,-128,104,104,-146,-133,-125,-131,-132,104,-123,-107,104,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,104,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,104,-136,104,104,-124,-138,104,-137,104,104,104,104,]),'GT':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,76,78,81,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,131,133,134,135,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,187,188,189,192,193,200,203,204,214,222,244,251,263,],[-145,95,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,95,95,-126,132,-57,-55,-139,-130,95,95,-129,-128,95,95,-146,-133,-125,-131,-132,95,-123,-66,-63,-65,-64,95,95,-103,-110,95,-111,-105,-109,-104,95,-102,95,95,-122,-106,95,95,-117,-108,-121,95,-118,-147,95,-136,95,95,-68,-124,-67,-56,-58,-138,95,-137,-69,95,95,95,95,]),'MULT':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[42,42,42,-145,42,42,42,-74,-76,42,42,-78,-75,42,42,96,-143,-141,42,-140,-16,42,42,-17,-77,42,-134,-144,-142,-6,42,-119,42,-5,-135,42,-127,-140,-4,-3,96,96,-126,-139,-130,96,96,42,42,42,42,-129,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-128,42,42,-18,96,96,-146,-133,-125,-131,42,-132,42,96,-123,42,42,96,96,96,96,96,96,-105,96,-104,96,96,96,96,-122,-106,96,96,96,96,-121,96,96,-147,42,96,-136,96,96,-124,-80,-88,-138,-79,42,96,-137,42,-83,-7,42,-81,96,-84,42,42,-100,42,96,-8,-99,-101,-82,96,-89,-85,42,-86,96,-87,]),'RETURN':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[8,8,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,8,-81,-84,8,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'PLUS':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[9,9,9,-145,9,9,9,-74,-76,9,9,-78,-75,9,9,98,-143,-141,9,-140,-16,9,9,-17,-77,9,-134,-144,-142,-6,9,-119,9,-5,-135,9,-127,-140,-4,-3,98,98,-126,-139,-130,98,98,9,9,9,9,-129,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-128,9,9,-18,98,98,-146,-133,-125,-131,9,-132,9,98,-123,9,9,98,98,-103,98,98,98,-105,98,-104,98,-102,98,98,-122,-106,98,98,98,98,-121,98,98,-147,9,98,-136,98,98,-124,-80,-88,-138,-79,9,98,-137,9,-83,-7,9,-81,98,-84,9,9,-100,9,98,-8,-99,-101,-82,98,-89,-85,9,-86,98,-87,]),'ELIF':([209,247,261,],[228,-99,228,]),'ASSIGN':([5,25,26,27,32,45,48,51,61,64,68,69,75,78,81,83,84,91,108,118,119,120,121,123,129,131,133,134,135,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,168,169,172,187,188,189,192,193,200,204,214,],[-145,100,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,-126,-57,-55,-139,-130,-129,-128,-146,-133,-125,-131,-132,-123,-66,-63,-65,-64,-107,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-122,-106,-120,-113,-117,-108,-121,-114,-118,202,-147,-136,-68,-124,-67,-56,-58,-138,-137,-69,]),'NULL':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[45,45,45,45,45,45,-74,-76,45,45,-78,-75,45,45,45,-16,45,45,-17,-77,45,-6,45,45,-5,45,-4,-3,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-18,45,45,45,45,45,-80,-88,-79,45,45,-83,-7,45,-81,-84,45,45,-100,45,-8,-99,-101,-82,-89,-85,45,-86,-87,]),'CHAR':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[5,5,5,5,5,5,-74,-76,5,5,-78,-75,5,5,5,-16,5,5,-17,-77,5,-6,5,5,-5,5,-4,-3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-18,5,5,5,5,5,-80,-88,-79,5,5,-83,-7,5,-81,-84,5,5,-100,5,-8,-99,-101,-82,-89,-85,5,-86,-87,]),'CASE':([221,236,239,247,252,262,],[237,-94,237,-99,-95,-96,]),'NE':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,103,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,103,103,-126,-139,-130,103,103,-129,-128,103,103,-146,-133,-125,-131,-132,103,-123,-107,103,-103,-110,103,-111,-105,-109,-104,103,-102,103,103,-122,-106,-120,103,-117,-108,-121,103,-118,-147,103,-136,103,103,-124,-138,103,-137,103,103,103,103,]),'DIV':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,94,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,94,94,-126,-139,-130,94,94,-129,-128,94,94,-146,-133,-125,-131,-132,94,-123,94,94,94,94,94,94,-105,94,-104,94,94,94,94,-122,-106,94,94,94,94,-121,94,94,-147,94,-136,94,94,-124,-138,94,-137,94,94,94,94,]),'STRING':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,30,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[48,48,48,48,48,48,-74,-76,48,48,-78,-75,48,48,48,48,-16,48,48,-17,-77,48,-6,48,48,-5,48,-4,-3,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-18,48,48,48,48,48,-80,-88,-79,48,48,-83,-7,48,-81,-84,48,48,-100,48,-8,-99,-101,-82,-89,-85,48,-86,-87,]),'RBRACKET':([5,26,27,35,45,48,51,61,64,68,69,75,83,84,91,108,116,117,118,119,120,121,123,129,130,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,169,170,172,186,188,200,203,204,],[-145,-143,-141,118,-134,-144,-142,-119,-135,-127,-140,-126,-139,-130,-129,-128,-148,169,-146,-133,-125,-131,-132,-123,187,-107,200,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,-150,-136,214,-124,-138,-149,-137,]),'LSHIFT':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,105,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,105,105,-126,-139,-130,105,105,-129,-128,105,105,-146,-133,-125,-131,-132,105,-123,105,105,-103,105,105,105,-105,105,-104,105,-102,105,105,-122,-106,105,105,-117,105,-121,105,-118,-147,105,-136,105,105,-124,-138,105,-137,105,105,105,105,]),'LT':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[15,15,15,-145,15,15,15,-74,-76,15,15,-78,-75,15,15,106,-143,-141,15,-140,-16,15,15,-17,-77,15,-134,-144,-142,-6,15,-119,15,-5,-135,15,-127,-140,-4,-3,106,106,-126,-139,-130,106,106,15,15,15,15,-129,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-128,15,15,-18,106,106,-146,-133,-125,-131,15,-132,15,106,-123,15,15,106,106,-103,-110,106,-111,-105,-109,-104,106,-102,106,106,-122,-106,106,106,-117,-108,-121,106,-118,-147,15,106,-136,106,106,-124,-80,-88,-138,-79,15,106,-137,15,-83,-7,15,-81,106,-84,15,15,-100,15,106,-8,-99,-101,-82,106,-89,-85,15,-86,106,-87,]),'FLOAT':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[51,51,51,51,51,51,-74,-76,51,51,-78,-75,51,51,51,-16,51,51,-17,-77,51,-6,51,51,-5,51,-4,-3,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-18,51,51,51,51,51,-80,-88,-79,51,51,-83,-7,51,-81,-84,51,51,-100,51,-8,-99,-101,-82,-89,-85,51,-86,-87,]),'ARROW':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,80,83,84,85,86,91,108,114,116,118,119,120,121,123,126,127,129,136,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,180,186,188,190,200,203,204,212,222,244,251,263,],[-145,107,-143,-141,-140,-134,-144,-142,-119,-135,107,-140,107,107,107,140,107,107,107,107,-129,-128,107,107,-146,107,107,107,107,107,179,-123,-59,107,107,107,107,107,107,107,107,107,107,107,107,107,-122,107,107,107,107,107,-121,107,107,-147,107,-136,107,-9,107,107,-60,-138,107,-137,-10,107,107,107,107,]),'PASS':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[17,17,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,17,-81,-84,17,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'ENUM':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[18,18,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,18,-81,-84,18,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'AMP':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[19,19,19,-145,19,19,19,-74,-76,19,19,-78,-75,19,19,109,-143,-141,19,-140,-16,19,19,-17,-77,19,-134,-144,-142,-6,19,-119,19,-5,-135,19,-127,-140,-4,-3,109,109,-126,-139,-130,109,109,19,19,19,19,-129,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-128,19,19,-18,109,109,-146,-133,-125,-131,19,-132,19,109,-123,19,19,-107,109,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,109,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,19,109,-136,109,109,-124,-80,-88,-138,-79,19,109,-137,19,-83,-7,19,-81,109,-84,19,19,-100,19,109,-8,-99,-101,-82,109,-89,-85,19,-86,109,-87,]),'INC':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[20,20,20,-145,20,20,20,-74,-76,20,20,-78,-75,20,20,108,-143,-141,20,-140,-16,20,20,-17,-77,20,-134,-144,-142,-6,20,-119,20,-5,-135,20,-127,-140,-4,-3,108,108,-126,-139,-130,108,108,20,20,20,20,-129,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-128,20,20,-18,108,108,-146,-133,-125,-131,20,-132,20,108,-123,20,20,-107,108,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,108,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,20,108,-136,108,108,-124,-80,-88,-138,-79,20,108,-137,20,-83,-7,20,-81,108,-84,20,20,-100,20,108,-8,-99,-101,-82,108,-89,-85,20,-86,108,-87,]),'LBRACKET':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,76,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,114,116,118,119,120,121,122,123,124,126,129,130,131,132,133,134,135,137,139,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,174,186,187,188,189,192,193,197,199,200,201,202,203,204,205,209,210,211,214,215,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[35,35,35,-145,35,35,35,-74,-76,35,35,-78,-75,35,35,88,-143,-141,35,-140,-16,35,35,-17,-77,35,-134,-144,-142,-6,35,-119,35,-5,-135,35,88,-140,-4,-3,88,88,88,130,-57,-55,88,88,88,88,35,35,35,35,-129,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-128,35,35,130,-18,88,88,-146,88,88,88,35,88,35,88,-123,35,-66,35,130,-65,-64,130,130,88,88,88,88,88,88,88,88,88,88,88,88,88,-122,88,88,88,88,88,-121,88,88,130,-147,35,88,-136,88,88,-68,88,-67,-56,-58,-80,-88,-138,-79,35,88,-137,35,-83,-7,130,-69,130,35,-81,88,-84,35,35,-100,35,88,-8,-99,-101,-82,88,-89,-85,35,-86,88,-87,]),'RPAR':([5,26,27,45,48,51,61,64,68,69,72,75,77,78,81,83,84,91,108,118,119,120,121,123,124,128,129,131,133,134,135,137,138,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,168,169,172,173,174,175,181,182,183,184,185,187,188,189,192,193,200,204,214,215,222,223,231,],[-145,-143,-141,-134,-144,-142,-119,-135,-127,-140,129,-126,136,-57,-55,-139,-130,-129,-128,-146,-133,-125,-131,-132,172,180,-123,-66,-63,-65,-64,-61,190,-107,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-122,-106,-120,-113,-117,-108,-121,-114,-118,-53,-147,-136,204,-153,-152,-11,212,-12,-13,-14,-68,-124,-67,-56,-58,-138,-137,-69,-62,-54,-151,-15,]),'COMMA':([5,26,27,45,48,51,61,64,68,69,75,78,81,83,84,91,108,116,117,118,119,120,121,123,129,131,133,134,135,137,138,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,168,169,170,172,173,174,175,181,182,183,184,185,187,188,189,192,193,194,195,200,203,204,206,208,214,215,222,223,231,232,243,250,251,263,],[-145,-143,-141,-134,-144,-142,-119,-135,-127,-140,-126,-57,-55,-139,-130,-129,-128,-148,170,-146,-133,-125,-131,-132,-123,-66,-63,-65,-64,-61,191,-107,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-122,-106,-120,-113,-117,-108,-121,-114,-118,-53,-147,-150,-136,205,-153,-152,-11,213,-12,-13,-14,-68,-124,-67,-56,-58,216,-42,-138,-149,-137,226,-49,-69,-62,-54,-151,-15,-43,-48,259,-97,-98,]),'WHILE':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[23,23,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,23,-81,-84,23,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'AND':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,99,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,99,99,-126,-139,-130,99,99,-129,-128,99,99,-146,-133,-125,-131,-132,99,-123,-107,99,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,99,-122,-106,-120,99,-117,-108,-121,-114,-118,-147,99,-136,99,99,-124,-138,99,-137,99,99,99,99,]),'DEC':([0,2,4,5,6,8,9,11,13,19,20,21,22,23,24,25,26,27,31,32,34,35,37,40,41,42,45,48,51,52,56,61,62,63,64,66,68,69,70,71,72,74,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,112,114,116,118,119,120,121,122,123,124,126,129,130,132,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,172,174,186,188,197,199,200,201,202,203,204,205,209,210,218,220,222,227,228,233,234,237,244,246,247,248,249,251,254,257,259,261,263,264,],[56,56,56,-145,56,56,56,-74,-76,56,56,-78,-75,56,56,91,-143,-141,56,-140,-16,56,56,-17,-77,56,-134,-144,-142,-6,56,-119,56,-5,-135,56,-127,-140,-4,-3,91,91,-126,-139,-130,91,91,56,56,56,56,-129,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-128,56,56,-18,91,91,-146,-133,-125,-131,56,-132,56,91,-123,56,56,-107,91,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,91,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,56,91,-136,91,91,-124,-80,-88,-138,-79,56,91,-137,56,-83,-7,56,-81,91,-84,56,56,-100,56,91,-8,-99,-101,-82,91,-89,-85,56,-86,91,-87,]),'BREAK':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[57,57,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,57,-81,-84,57,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'PIPE':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,92,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,92,92,-126,-139,-130,92,92,-129,-128,92,92,-146,-133,-125,-131,-132,92,-123,-107,92,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,92,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,92,-136,92,92,-124,-138,92,-137,92,92,92,92,]),'$end':([0,4,11,13,21,22,34,40,41,52,53,58,63,70,71,112,197,199,201,209,210,220,227,246,247,249,254,257,261,264,],[-154,-1,-74,-76,-78,-75,-16,-17,-77,-6,0,-2,-5,-4,-3,-18,-80,-88,-79,-83,-7,-81,-84,-8,-99,-82,-89,-85,-86,-87,]),'GE':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,93,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,93,93,-126,-139,-130,93,93,-129,-128,93,93,-146,-133,-125,-131,-132,93,-123,93,93,-103,-110,93,-111,-105,-109,-104,93,-102,93,93,-122,-106,93,93,-117,-108,-121,93,-118,-147,93,-136,93,93,-124,-138,93,-137,93,93,93,93,]),'LBRACE':([15,28,77,79,82,115,125,140,179,191,],[79,79,79,79,141,79,176,79,79,79,]),'DEFINE':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[59,59,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,59,-81,-84,59,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'CARROT':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,97,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,97,97,-126,-139,-130,97,97,-129,-128,97,97,-146,-133,-125,-131,-132,97,-123,-107,97,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,97,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,97,-136,97,97,-124,-138,97,-137,97,97,97,97,]),'ELSE':([197,209,221,236,239,247,252,261,262,],[219,229,241,-94,241,-99,-95,229,-96,]),'INT':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[27,27,27,27,27,27,-74,-76,27,27,-78,-75,27,27,27,-16,27,27,-17,-77,27,-6,27,27,-5,27,-4,-3,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-18,27,27,27,27,27,-80,-88,-79,27,27,-83,-7,27,-81,-84,27,27,-100,27,-8,-99,-101,-82,-89,-85,27,-86,-87,]),'COLON':([5,26,27,32,45,48,51,61,64,68,69,75,78,81,83,84,85,86,91,108,114,118,119,120,121,123,126,127,129,131,133,134,135,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,169,172,180,183,187,188,189,192,193,200,204,207,211,212,214,219,229,241,244,250,251,263,],[-145,-143,-141,115,-134,-144,-142,-119,-135,-127,-140,-126,-57,-55,-139,-130,142,143,-129,-128,167,-146,-133,-125,-131,-132,177,178,-123,-66,-63,-65,-64,-107,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-122,-106,-120,-113,-117,-108,-121,-114,-118,-147,-136,-9,115,-68,-124,-67,-56,-58,-138,-137,115,230,-10,-69,235,245,255,256,258,-97,-98,]),'SWITCH':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[24,24,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,24,-81,-84,24,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'INDENT':([196,198,],[218,221,]),'TYPEDEF':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[28,28,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,28,-81,-84,28,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'INCLUDE':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[30,30,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,30,-81,-84,30,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'NOT':([0,2,4,6,8,9,11,13,19,20,21,22,23,24,31,34,35,37,40,41,42,52,56,62,63,66,70,71,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,112,122,124,130,132,170,197,199,201,202,205,209,210,218,220,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[62,62,62,62,62,62,-74,-76,62,62,-78,-75,62,62,62,-16,62,62,-17,-77,62,-6,62,62,-5,62,-4,-3,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-18,62,62,62,62,62,-80,-88,-79,62,62,-83,-7,62,-81,-84,62,62,-100,62,-8,-99,-101,-82,-89,-85,62,-86,-87,]),'PERIOD':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,101,-143,-141,-140,-134,-144,-142,-119,-135,101,-140,101,101,101,101,101,101,101,-129,-128,101,101,-146,101,101,101,101,101,-123,101,101,101,101,101,101,101,101,101,101,101,101,101,-122,101,101,101,101,101,-121,101,101,-147,101,-136,101,101,101,-138,101,-137,101,101,101,101,]),'NEWLINE':([0,3,4,5,10,11,12,13,14,16,17,21,22,25,26,27,29,32,33,34,36,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,57,60,61,63,64,68,69,70,71,73,74,75,78,81,83,84,91,108,112,113,118,119,120,121,122,123,127,129,131,133,134,135,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,177,178,180,187,188,189,192,193,197,199,200,201,204,209,210,211,212,214,217,220,222,227,230,235,242,245,246,247,249,254,255,256,257,258,261,264,],[63,-26,71,-145,-28,-74,-20,-76,-44,-31,-38,-78,-75,-71,-143,-141,112,-140,-52,-16,-29,-24,-21,-17,-77,-27,-25,-134,-23,-37,-144,-19,-40,-142,-6,-32,-30,-39,-22,-119,-5,-135,-127,-140,-4,-3,-36,-73,-126,-57,-55,-139,-130,-129,-128,-18,-70,-146,-133,-125,-131,-35,-132,-50,-123,-66,-63,-65,-64,196,198,-107,-103,-110,-115,-111,-105,-109,-104,-116,-102,-112,-72,-122,-106,-120,-113,-117,-108,-121,-114,-118,-33,196,-53,-147,-34,-136,196,196,-9,-68,-124,-67,-56,-58,-80,-88,-138,-79,-137,-83,-7,-51,-10,-69,-41,-81,-54,-84,196,196,-45,196,-8,-99,-82,-89,196,196,-85,196,-86,-87,]),'DEDENT':([11,13,21,22,34,40,41,112,197,199,201,209,210,220,227,233,234,236,238,239,240,246,247,248,249,252,253,254,257,260,261,262,264,],[-74,-76,-78,-75,-16,-17,-77,-18,-80,-88,-79,-83,-7,-81,-84,247,-100,-94,-92,-90,254,-8,-99,-101,-82,-95,-91,-89,-85,-93,-86,-96,-87,]),'MOD':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,102,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,102,102,-126,-139,-130,102,102,-129,-128,102,102,-146,-133,-125,-131,-132,102,-123,102,102,102,102,102,102,-105,102,-104,102,102,102,102,-122,-106,102,102,102,102,-121,102,102,-147,102,-136,102,102,-124,-138,102,-137,102,102,102,102,]),'ENDIF':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[47,47,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,47,-81,-84,47,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'DOWHILE':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[31,31,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,31,-81,-84,31,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'STRUCT':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[65,65,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,65,-81,-84,65,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'NAME':([0,1,2,4,6,7,8,9,11,13,15,18,19,20,21,22,23,24,28,31,34,35,37,40,41,42,52,56,59,62,63,65,66,70,71,77,78,79,81,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,115,122,124,128,130,131,132,133,134,135,140,141,170,176,179,187,189,191,192,193,197,199,201,202,205,209,210,213,214,216,218,220,226,227,228,233,234,237,246,247,248,249,254,257,259,261,264,],[32,67,69,32,69,73,69,69,-74,-76,81,82,69,69,-78,-75,69,69,81,69,-16,69,69,-17,-77,69,-6,69,122,69,-5,125,69,-4,-3,81,-57,81,-55,69,69,69,69,69,69,69,69,69,69,69,69,69,157,69,69,69,69,69,163,69,69,166,-18,81,69,69,183,69,-66,69,-63,-65,-64,81,195,69,207,81,-68,-67,81,-56,-58,-80,-88,-79,69,69,-83,-7,183,-69,232,32,-81,207,-84,69,32,-100,69,-8,-99,-101,-82,-89,-85,69,-86,-87,]),'ELLIPSIS':([128,213,],[185,185,]),'IF':([0,4,11,13,21,22,34,40,41,52,63,70,71,112,197,199,201,209,210,218,220,227,233,234,246,247,248,249,254,257,261,264,],[66,66,-74,-76,-78,-75,-16,-17,-77,-6,-5,-4,-3,-18,-80,-88,-79,-83,-7,66,-81,-84,66,-100,-8,-99,-101,-82,-89,-85,-86,-87,]),'RSHIFT':([5,25,26,27,32,45,48,51,61,64,68,69,72,74,75,83,84,85,86,91,108,114,116,118,119,120,121,123,126,129,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,171,172,174,186,188,200,203,204,222,244,251,263,],[-145,110,-143,-141,-140,-134,-144,-142,-119,-135,-127,-140,110,110,-126,-139,-130,110,110,-129,-128,110,110,-146,-133,-125,-131,-132,110,-123,110,110,-103,110,110,110,-105,110,-104,110,-102,110,110,-122,-106,110,110,-117,110,-121,110,-118,-147,110,-136,110,110,-124,-138,110,-137,110,110,110,110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_decl':([0,4,218,233,],[3,3,3,3,]),'struct_decl_stmt':([0,4,218,233,],[36,36,36,36,]),'stmt_list':([0,],[4,]),'expr_stmt':([0,4,218,233,],[38,38,38,38,]),'default':([221,239,],[238,253,]),'define_stmt':([0,4,218,233,],[39,39,39,39,]),'suite':([142,167,177,178,230,235,245,255,256,258,],[197,201,209,210,246,249,257,260,261,262,]),'while_orelse':([197,],[220,]),'compound_stmt':([0,4,218,233,],[40,40,40,40,]),'enum_name_list':([141,],[194,]),'stmts':([218,],[233,]),'switch_stmt':([0,4,218,233,],[41,41,41,41,]),'case':([221,239,],[236,252,]),'enum_decl_stmt':([0,4,218,233,],[10,10,10,10,]),'var_decl_stmt':([0,4,218,233,],[43,43,43,43,]),'pointer':([76,111,133,137,139,168,193,211,215,],[135,135,135,135,135,135,135,135,135,]),'assign_stmt':([0,4,218,233,],[44,44,44,44,]),'if_stmt':([0,4,218,233,],[11,11,11,11,]),'endif_stmt':([0,4,218,233,],[46,46,46,46,]),'include_stmt':([0,4,218,233,],[12,12,12,12,]),'array_contents':([35,],[117,]),'enum_decl':([0,4,218,233,],[50,50,50,50,]),'dowhile_stmt':([0,4,218,233,],[13,13,13,13,]),'struct_decl':([0,4,218,233,],[14,14,14,14,]),'return_stmt':([0,4,218,233,],[49,49,49,49,]),'argument':([124,205,],[175,223,]),'type_declaration':([15,28,77,79,115,140,179,191,],[76,111,137,139,168,193,211,215,]),'inline_func_decl':([15,28,77,79,115,140,179,191,],[78,78,78,78,78,78,78,78,]),'stmt':([0,4,218,233,],[52,70,234,248,]),'varaglist_elem':([128,213,],[181,231,]),'break':([0,4,218,233,],[16,16,16,16,]),'switch_stmts':([221,],[240,]),'module':([0,],[53,]),'pass':([0,4,218,233,],[54,54,54,54,]),'typedef_stmt':([0,4,218,233,],[55,55,55,55,]),'while_stmt':([0,4,218,233,],[22,22,22,22,]),'struct_decl_list':([176,],[206,]),'arglist':([124,],[173,]),'expr':([0,2,4,6,8,9,19,20,23,24,31,35,37,42,56,62,66,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,122,124,130,132,170,202,205,218,228,233,237,259,],[25,68,25,72,74,75,83,84,85,86,114,116,119,120,121,123,126,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,164,165,171,174,186,188,203,222,174,25,244,25,251,263,]),'string':([0,2,4,6,8,9,19,20,23,24,30,31,35,37,42,56,62,66,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,122,124,130,132,170,202,205,218,228,233,237,259,],[26,26,26,26,26,26,26,26,26,26,113,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'empty':([0,206,],[58,224,]),'if_orelse':([209,261,],[227,264,]),'switch_suite':([143,],[199,]),'param_list_contents':([77,],[138,]),'funcdef':([0,4,218,233,],[21,21,21,21,]),'case_list':([221,],[239,]),'small_stmt':([0,4,218,233,],[29,29,29,29,]),'var_decl':([0,4,128,176,213,218,226,233,],[33,33,184,208,184,33,243,33,]),'pointer_or_array':([76,111,133,137,139,168,193,211,215,],[131,131,189,131,131,131,131,131,131,]),'power':([0,2,4,6,8,9,19,20,23,24,31,35,37,42,56,62,66,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,122,124,130,132,170,202,205,218,228,233,237,259,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'param_type_list':([15,28,77,79,115,140,179,191,],[80,80,80,80,80,80,80,80,]),'parameters':([67,],[127,]),'varargslist':([128,],[182,]),'array':([76,111,133,137,139,168,193,211,215,],[134,134,134,134,134,134,134,134,134,]),'case_expr_list':([237,],[250,]),'atom':([0,2,4,6,8,9,19,20,23,24,31,35,37,42,56,62,66,87,88,89,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,109,110,122,124,130,132,170,202,205,218,228,233,237,259,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'optional_comma':([206,],[225,]),'bracket_list':([76,111,137,139,168,193,211,215,],[133,133,133,133,133,133,133,133,]),'ifndef_stmt':([0,4,218,233,],[60,60,60,60,]),'simple_stmt':([0,4,218,233,],[34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',90),
  ('module -> empty','module',1,'p_empty_module','cparse.py',96),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',103),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',107),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',111),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',115),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',120),
  ('funcdef -> DEF NAME parameters ARROW type_declaration COLON suite','funcdef',7,'p_funcdef2','cparse.py',126),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',133),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',137),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',141),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',145),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',146),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',150),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',155),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',159),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',160),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',168),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',172),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',173),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',174),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',175),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',176),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',177),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',178),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',179),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',180),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',181),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',182),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',183),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',184),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',185),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',191),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',198),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',203),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',208),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',213),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',218),
  ('break -> BREAK','break',1,'p_break','cparse.py',223),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',229),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',234),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',239),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',243),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',249),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',254),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',259),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',260),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',265),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',269),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',274),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',280),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',285),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',291),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',297),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',302),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',307),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',313),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',317),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',322),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',326),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',330),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',334),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',340),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',357),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',358),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',362),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',366),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',370),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',374),
  ('include_stmt -> INCLUDE string','include_stmt',2,'p_include_standard','cparse.py',378),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',383),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',389),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',394),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',401),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',402),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',403),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',404),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',405),
  ('dowhile_stmt -> DOWHILE expr COLON suite','dowhile_stmt',4,'p_dowhile','cparse.py',413),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',419),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',424),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',429),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',434),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',439),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',444),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',448),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',453),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',459),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',464),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',468),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',472),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',476),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',480),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',485),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',489),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',493),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',498),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',502),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',507),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',511),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',515),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',523),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',528),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',533),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',538),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',543),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',548),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',553),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',558),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',563),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',568),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',573),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',578),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',585),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',590),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',595),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',600),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',605),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',610),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',614),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',619),
  ('expr -> expr PERIOD NAME','expr',3,'p_expr_struct_access','cparse.py',624),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',629),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',633),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',638),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',643),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',648),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',655),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',660),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',667),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',672),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',677),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',682),
  ('atom -> NULL','atom',1,'p_null','cparse.py',687),
  ('power -> atom','power',1,'p_power_1','cparse.py',692),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',696),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',701),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',708),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',715),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',720),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',725),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',730),
  ('atom -> string','atom',1,'p_atom_str','cparse.py',735),
  ('string -> STRING','string',1,'p_str','cparse.py',739),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',744),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',749),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',754),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',759),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',763),
  ('array_contents -> array_contents COMMA','array_contents',2,'p_array_litral_contents_3','cparse.py',767),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',777),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',781),
  ('argument -> expr','argument',1,'p_argument','cparse.py',785),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',789),
]
