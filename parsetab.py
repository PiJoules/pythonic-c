
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftBITORleftXORleftBITANDleftEQNEleftGTLTLEGEleftLSHIFTRSHIFTleftPLUSMINUSleftMULTDIVMODrightADDROFNOTCASTPREINCPREDECINVleftARROWPOSTINCPOSTDECADDROF AMP AND ARROW ASSIGN BITAND BITOR BREAK CARROT CASE CAST CHAR COLON COMMA DEC DEDENT DEF DEFINE DIV DO ELIF ELLIPSIS ELSE ENDIF ENUM EQ FLOAT GE GT IF IFNDEF INC INCLUDE INDENT INT INV LBRACE LBRACKET LE LPAR LSHIFT LT MINUS MOD MULT NAME NE NEWLINE NOT NULL OR PASS PIPE PLUS POSTDEC POSTINC PREDEC PREINC RBRACE RBRACKET RETURN RPAR RSHIFT STRING STRUCT SWITCH TYPEDEF WHILE WS XORmodule : stmt_listmodule : emptystmt_list : stmt_list NEWLINEstmt_list : stmt_list stmtstmt_list : NEWLINEstmt_list : stmtfuncdef : DEF NAME parameters COLON suiteparameters : LPAR RPARparameters : LPAR varargslist RPARvarargslist : varaglist_elemvaraglist_elem : NAME\n                          | var_declvaraglist_elem : ELLIPSISvarargslist : varargslist COMMA varaglist_elemstmt : simple_stmt\n                | compound_stmtsimple_stmt : small_stmt NEWLINEsmall_stmt : return_stmt\n                      | include_stmt\n                      | define_stmt\n                      | ifndef_stmt\n                      | endif_stmt\n                      | expr_stmt\n                      | assign_stmt\n                      | func_decl\n                      | var_decl_stmt\n                      | enum_decl_stmt\n                      | struct_decl_stmt\n                      | typedef_stmt\n                      | break\n                      | passtypedef_stmt : TYPEDEF type_declaration NAMEdefine_stmt : DEFINE NAME exprdefine_stmt : DEFINE NAMEifndef_stmt : IFNDEF NAMEendif_stmt : ENDIFpass : PASSbreak : BREAKenum_decl_stmt : enum_declenum_decl : ENUM NAME LBRACE enum_name_list RBRACEenum_name_list : NAMEenum_name_list : enum_name_list COMMA NAMEstruct_decl_stmt : struct_declstruct_decl : STRUCT NAME LBRACE struct_decl_list optional_comma RBRACEoptional_comma : COMMA\n                          | emptystruct_decl_list : struct_decl_list COMMA var_declstruct_decl_list : var_declfunc_decl : DEF NAME parametersfunc_decl : DEF NAME parameters ARROW type_declarationvar_decl_stmt : var_declvar_decl : NAME COLON type_declarationvar_decl : NAME COLON type_declaration ASSIGN exprtype_declaration : NAMEtype_declaration : LBRACE type_declaration RBRACEtype_declaration : inline_func_declinline_func_decl : param_type_list ARROW type_declarationparam_type_list : LPAR RPARparam_type_list : LPAR param_list_contents RPARparam_list_contents : type_declarationparam_list_contents : param_list_contents COMMA type_declarationtype_declaration : type_declaration bracket_listpointer_or_array : pointer\n                            | arraybracket_list : pointer_or_arraybracket_list : bracket_list pointer_or_arraypointer : LBRACKET RBRACKETarray : LBRACKET expr RBRACKETinclude_stmt : INCLUDE STRINGexpr_stmt : exprassign_stmt : expr ASSIGN exprreturn_stmt : RETURN exprcompound_stmt : if_stmt\n                         | while_stmt\n                         | dowhile_stmt\n                         | switch_stmt\n                         | funcdefdowhile_stmt : DO COLON suite WHILE exprwhile_stmt : WHILE expr COLON suitewhile_stmt : WHILE expr COLON suite while_orelsewhile_orelse : ELSE COLON suiteif_stmt : IF expr COLON suiteif_stmt : IF expr COLON suite if_orelseif_orelse : ELSE COLON suiteif_orelse : ELIF expr COLON suiteif_orelse : ELIF expr COLON suite if_orelseswitch_stmt : SWITCH expr COLON switch_suiteswitch_suite : NEWLINE INDENT switch_stmts DEDENTswitch_stmts : case_listswitch_stmts : case_list defaultswitch_stmts : defaultdefault : ELSE COLON suitecase_list : casecase_list : case_list casecase : CASE case_expr_list COLON suitecase_expr_list : exprcase_expr_list : case_expr_list COMMA exprsuite : NEWLINE INDENT stmts DEDENTstmts : stmtstmts : stmts stmtexpr : expr PLUS exprexpr : expr MINUS exprexpr : expr MULT exprexpr : expr MOD exprexpr : expr DIV exprexpr : expr EQ exprexpr : expr LT exprexpr : expr GT exprexpr : expr LE exprexpr : expr GE exprexpr : expr AND exprexpr : expr OR exprexpr : expr AMP expr %prec BITANDexpr : expr PIPE expr %prec BITORexpr : expr CARROT expr %prec XORexpr : expr LSHIFT exprexpr : expr RSHIFT exprexpr : powerexpr : expr NE exprexpr : expr ARROW NAMEexpr : LPAR expr RPARexpr : LT type_declaration GT expr %prec CASTexpr : MULT exprexpr : PLUS exprexpr : MINUS exprexpr : expr INC %prec POSTINCexpr : expr DEC %prec POSTDECexpr : INC expr %prec PREINCexpr : DEC expr %prec PREDECexpr : NOT exprexpr : INV expratom : NULLpower : atompower : atom LPAR RPARpower : atom LPAR arglist RPARexpr : expr LBRACKET expr RBRACKETexpr : AMP expr %prec ADDROFatom : NAMEatom : INTatom : FLOATatom : STRINGatom : CHARatom : LBRACKET RBRACKETatom : LBRACKET array_contents RBRACKETarray_contents : exprarray_contents : array_contents COMMA exprarglist : arglist COMMA argumentarglist : argumentargument : exprempty : '
    
_lr_action_items = {'INC':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[9,9,-118,-15,-142,9,-132,9,-139,-75,9,-5,9,9,-74,-138,9,9,-140,-6,-16,-73,9,9,9,9,-133,-141,9,-77,100,9,9,-76,-138,-129,-128,100,-17,-3,-4,-124,100,9,-143,100,100,-125,-131,100,-137,9,100,-126,9,9,9,9,9,9,9,9,-127,9,9,9,9,9,9,9,9,9,9,9,9,-130,-123,9,100,9,-144,-134,100,9,-121,-111,-112,-101,100,-120,-109,-102,-119,-105,-108,-107,100,-117,-103,-113,-116,-114,-110,-104,-106,-115,100,-82,-87,9,100,-79,9,-135,9,9,-122,-136,-7,9,-83,100,-80,-99,9,100,100,9,-100,-98,-84,100,-88,-81,-85,9,-86,100,]),'ARROW':([2,6,10,17,26,32,47,49,58,66,67,71,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,134,137,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,181,189,197,203,206,207,215,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,105,-138,105,132,105,105,105,105,-143,105,105,105,105,105,105,105,-126,-127,105,105,-58,186,105,-144,-134,105,-121,105,105,105,105,-120,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-59,-8,105,-135,105,-136,-9,105,105,105,105,105,]),'AND':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,101,-138,-129,-128,101,-124,101,-143,101,101,-125,-131,101,-137,101,-126,-127,-130,-123,101,-144,-134,101,-121,-111,101,-101,101,-120,-109,-102,-119,-105,-108,-107,101,-117,-103,-113,-116,-114,-110,-104,-106,-115,101,101,-135,-122,-136,101,101,101,101,101,]),'INDENT':([151,194,],[204,219,]),'RBRACKET':([2,6,10,17,27,32,47,49,66,67,75,82,86,87,88,91,92,94,100,110,123,124,129,144,147,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,],[-118,-142,-132,-139,86,-140,-133,-141,-138,-129,-128,-124,-143,144,-145,-125,-131,-137,-126,-127,-130,-123,178,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,207,-117,-103,-113,-116,-114,-110,-104,-106,-115,208,-146,-135,-122,-136,]),'RPAR':([2,6,10,17,32,47,49,66,67,70,72,73,75,82,86,91,92,94,95,98,100,110,123,124,126,127,128,131,133,135,138,142,144,147,148,149,150,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,187,188,190,191,192,203,206,207,208,209,220,226,231,],[-118,-142,-132,-139,-140,-133,-141,-138,-129,-56,134,-54,-128,-124,-143,-125,-131,-137,147,154,-126,-127,-130,-123,-63,-65,-62,-64,-60,181,189,-52,-144,-134,203,-149,-148,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,-57,-13,-12,-10,215,-11,-135,-122,-136,-68,-61,-53,-147,-14,]),'BREAK':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[40,-118,-15,-142,-132,-139,-75,40,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,40,-122,-136,-7,-83,-80,-99,40,-78,-100,-98,-84,-88,-81,-85,-86,]),'TYPEDEF':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[4,-118,-15,-142,-132,-139,-75,4,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,4,-122,-136,-7,-83,-80,-99,4,-78,-100,-98,-84,-88,-81,-85,-86,]),'ELSE':([193,198,219,234,237,244,247,254,260,],[218,221,236,236,-93,-98,-94,218,-95,]),'ENUM':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[5,-118,-15,-142,-132,-139,-75,5,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,5,-122,-136,-7,-83,-80,-99,5,-78,-100,-98,-84,-88,-81,-85,-86,]),'LBRACE':([4,50,68,72,74,85,90,132,182,186,],[68,68,68,68,136,68,146,68,68,68,]),'MINUS':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[41,41,-118,-15,-142,41,-132,41,-139,-75,41,-5,41,41,-74,-138,41,41,-140,-6,-16,-73,41,41,41,41,-133,-141,41,-77,107,41,41,-76,-138,-129,-128,107,-17,-3,-4,-124,107,41,-143,107,107,-125,-131,107,-137,41,107,-126,41,41,41,41,41,41,41,41,-127,41,41,41,41,41,41,41,41,41,41,41,41,-130,-123,41,107,41,-144,-134,107,41,-121,107,107,-101,107,-120,107,-102,107,-105,107,107,107,107,-103,107,107,107,107,-104,107,107,107,-82,-87,41,107,-79,41,-135,41,41,-122,-136,-7,41,-83,107,-80,-99,41,107,107,41,-100,-98,-84,107,-88,-81,-85,41,-86,107,]),'DIV':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,109,-138,-129,-128,109,109,109,-143,109,109,109,-131,109,-137,109,-126,-127,-130,-123,109,-144,-134,109,-121,109,109,109,109,-120,109,109,109,-105,109,109,109,109,-103,109,109,109,109,-104,109,109,109,109,-135,-122,-136,109,109,109,109,109,]),'CHAR':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[6,6,-118,-15,-142,6,-132,6,-139,-75,6,-5,6,6,-74,6,6,-140,-6,-16,-73,6,6,6,6,-133,-141,6,-77,6,6,-76,-138,-129,-128,-17,-3,-4,-124,6,-143,-125,-131,-137,6,-126,6,6,6,6,6,6,6,6,-127,6,6,6,6,6,6,6,6,6,6,6,6,-130,-123,6,6,-144,-134,6,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,6,-79,6,-135,6,6,-122,-136,-7,6,-83,-80,-99,6,-78,6,-100,-98,-84,-88,-81,-85,6,-86,]),'GT':([2,6,10,17,26,32,47,49,58,66,67,70,73,75,78,82,83,86,88,89,91,92,93,94,97,98,100,110,123,124,126,127,128,131,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,197,203,206,207,208,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,111,-138,-129,-56,-54,-128,111,-124,111,-143,111,111,-125,-131,111,-137,153,111,-126,-127,-130,-123,-63,-65,-62,-64,111,-144,-134,111,-121,111,111,-101,111,-120,-109,-102,111,-105,-108,-107,111,-117,-103,111,-116,111,-110,-104,111,111,-55,-66,-67,111,-57,111,-135,-122,-136,-68,111,111,111,111,111,]),'LT':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[50,50,-118,-15,-142,50,-132,50,-139,-75,50,-5,50,50,-74,-138,50,50,-140,-6,-16,-73,50,50,50,50,-133,-141,50,-77,112,50,50,-76,-138,-129,-128,112,-17,-3,-4,-124,112,50,-143,112,112,-125,-131,112,-137,50,112,-126,50,50,50,50,50,50,50,50,-127,50,50,50,50,50,50,50,50,50,50,50,50,-130,-123,50,112,50,-144,-134,112,50,-121,112,112,-101,112,-120,-109,-102,112,-105,-108,-107,112,-117,-103,112,-116,112,-110,-104,112,112,112,-82,-87,50,112,-79,50,-135,50,50,-122,-136,-7,50,-83,112,-80,-99,50,112,112,50,-100,-98,-84,112,-88,-81,-85,50,-86,112,]),'NULL':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[10,10,-118,-15,-142,10,-132,10,-139,-75,10,-5,10,10,-74,10,10,-140,-6,-16,-73,10,10,10,10,-133,-141,10,-77,10,10,-76,-138,-129,-128,-17,-3,-4,-124,10,-143,-125,-131,-137,10,-126,10,10,10,10,10,10,10,10,-127,10,10,10,10,10,10,10,10,10,10,10,10,-130,-123,10,10,-144,-134,10,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,10,-79,10,-135,10,10,-122,-136,-7,10,-83,-80,-99,10,-78,10,-100,-98,-84,-88,-81,-85,10,-86,]),'ELLIPSIS':([138,214,],[187,187,]),'ELIF':([193,244,254,],[216,-98,216,]),'RBRACE':([2,6,10,17,32,47,49,66,67,70,73,75,82,86,91,92,94,100,110,123,124,125,126,127,128,131,142,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,183,184,199,200,203,206,207,208,220,223,224,225,230,241,],[-118,-142,-132,-139,-140,-133,-141,-138,-129,-56,-54,-128,-124,-143,-125,-131,-137,-126,-127,-130,-123,176,-63,-65,-62,-64,-52,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,-57,211,-41,-48,-150,-135,-122,-136,-68,-53,-45,242,-46,-42,-47,]),'DEF':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[12,-118,-15,-142,-132,-139,-75,12,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,12,-122,-136,-7,-83,-80,-99,12,-78,-100,-98,-84,-88,-81,-85,-86,]),'DEDENT':([2,3,6,10,17,18,25,32,35,37,47,49,54,64,66,67,75,79,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,206,207,212,217,222,227,228,229,234,237,238,239,243,244,246,247,248,252,253,254,257,258,260,],[-118,-15,-142,-132,-139,-75,-74,-140,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,-122,-136,-7,-83,-80,-99,244,-78,-89,-93,252,-91,-100,-98,-84,-94,-90,-88,-81,-85,-92,-86,-95,]),'CASE':([219,234,237,244,247,260,],[235,235,-93,-98,-94,-95,]),'AMP':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[46,46,-118,-15,-142,46,-132,46,-139,-75,46,-5,46,46,-74,-138,46,46,-140,-6,-16,-73,46,46,46,46,-133,-141,46,-77,116,46,46,-76,-138,-129,-128,116,-17,-3,-4,-124,116,46,-143,116,116,-125,-131,116,-137,46,116,-126,46,46,46,46,46,46,46,46,-127,46,46,46,46,46,46,46,46,46,46,46,46,-130,-123,46,116,46,-144,-134,116,46,-121,-111,-112,-101,116,-120,-109,-102,-119,-105,-108,-107,116,-117,-103,-113,-116,-114,-110,-104,-106,-115,116,-82,-87,46,116,-79,46,-135,46,46,-122,-136,-7,46,-83,116,-80,-99,46,116,116,46,-100,-98,-84,116,-88,-81,-85,46,-86,116,]),'IF':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[15,-118,-15,-142,-132,-139,-75,15,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,15,-122,-136,-7,-83,-80,-99,15,-78,-100,-98,-84,-88,-81,-85,-86,]),'COMMA':([2,6,10,17,32,47,49,66,67,70,73,75,82,86,87,88,91,92,94,100,110,123,124,126,127,128,131,133,135,142,144,147,148,149,150,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,183,184,187,188,190,191,192,197,199,200,203,206,207,208,209,220,226,230,231,241,249,250,259,],[-118,-142,-132,-139,-140,-133,-141,-138,-129,-56,-54,-128,-124,-143,143,-145,-125,-131,-137,-126,-127,-130,-123,-63,-65,-62,-64,-60,182,-52,-144,-134,202,-149,-148,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,-57,210,-41,-13,-12,-10,214,-11,-146,-48,223,-135,-122,-136,-68,-61,-53,-147,-42,-14,-47,255,-96,-97,]),'FLOAT':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[32,32,-118,-15,-142,32,-132,32,-139,-75,32,-5,32,32,-74,32,32,-140,-6,-16,-73,32,32,32,32,-133,-141,32,-77,32,32,-76,-138,-129,-128,-17,-3,-4,-124,32,-143,-125,-131,-137,32,-126,32,32,32,32,32,32,32,32,-127,32,32,32,32,32,32,32,32,32,32,32,32,-130,-123,32,32,-144,-134,32,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,32,-79,32,-135,32,32,-122,-136,-7,32,-83,-80,-99,32,-78,32,-100,-98,-84,-88,-81,-85,32,-86,]),'INT':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[17,17,-118,-15,-142,17,-132,17,-139,-75,17,-5,17,17,-74,17,17,-140,-6,-16,-73,17,17,17,17,-133,-141,17,-77,17,17,-76,-138,-129,-128,-17,-3,-4,-124,17,-143,-125,-131,-137,17,-126,17,17,17,17,17,17,17,17,-127,17,17,17,17,17,17,17,17,17,17,17,17,-130,-123,17,17,-144,-134,17,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,17,-79,17,-135,17,17,-122,-136,-7,17,-83,-80,-99,17,-78,17,-100,-98,-84,-88,-81,-85,17,-86,]),'STRUCT':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[31,-118,-15,-142,-132,-139,-75,31,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,31,-122,-136,-7,-83,-80,-99,31,-78,-100,-98,-84,-88,-81,-85,-86,]),'DO':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[48,-118,-15,-142,-132,-139,-75,48,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,48,-122,-136,-7,-83,-80,-99,48,-78,-100,-98,-84,-88,-81,-85,-86,]),'EQ':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,121,-138,-129,-128,121,-124,121,-143,121,121,-125,-131,121,-137,121,-126,-127,-130,-123,121,-144,-134,121,-121,121,121,-101,121,-120,-109,-102,-119,-105,-108,-107,121,-117,-103,121,-116,121,-110,-104,-106,121,121,121,-135,-122,-136,121,121,121,121,121,]),'PIPE':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,118,-138,-129,-128,118,-124,118,-143,118,118,-125,-131,118,-137,118,-126,-127,-130,-123,118,-144,-134,118,-121,-111,-112,-101,118,-120,-109,-102,-119,-105,-108,-107,118,-117,-103,-113,-116,-114,-110,-104,-106,-115,118,118,-135,-122,-136,118,118,118,118,118,]),'RETURN':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[44,-118,-15,-142,-132,-139,-75,44,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,44,-122,-136,-7,-83,-80,-99,44,-78,-100,-98,-84,-88,-81,-85,-86,]),'NEWLINE':([0,2,3,6,7,10,11,13,16,17,18,19,20,23,25,26,28,30,32,33,34,35,36,37,38,40,42,45,47,49,51,52,54,55,56,58,59,61,63,64,65,66,67,70,73,75,77,79,80,81,82,84,86,91,92,93,94,96,99,100,110,123,124,126,127,128,130,131,137,139,140,141,142,144,145,147,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,185,189,193,195,198,203,206,207,208,211,212,213,215,217,220,222,229,233,240,242,244,245,246,251,252,253,254,256,258,],[20,-118,-15,-142,-21,-132,-19,-26,79,-139,-75,80,-5,-20,-74,-138,-39,-51,-140,-6,-23,-16,-24,-73,-43,-38,-27,-22,-133,-141,-28,-37,-77,-25,-29,-70,-18,-30,-36,-76,-31,-138,-129,-56,-54,-128,-69,-17,-3,-4,-124,-34,-143,-125,-131,-72,-137,151,-35,-126,-127,-130,-123,-63,-65,-62,-32,-64,-49,151,194,-33,-52,-144,151,-134,-121,-111,-112,-101,-71,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,-57,151,-8,-82,-87,-79,-135,-122,-136,-68,-40,-7,-50,-9,-83,-53,-80,-78,151,151,-44,-98,151,-84,151,-88,-81,-85,151,-86,]),'COLON':([2,6,10,17,26,32,47,48,49,66,67,75,78,82,83,86,89,91,92,94,100,110,123,124,137,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,189,192,201,203,206,207,215,218,221,232,236,249,250,259,],[-118,-142,-132,-139,85,-140,-133,96,-141,-138,-129,-128,139,-124,140,-143,145,-125,-131,-137,-126,-127,-130,-123,185,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-8,85,85,-135,-122,-136,-9,233,240,245,251,256,-96,-97,]),'OR':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,102,-138,-129,-128,102,-124,102,-143,102,102,-125,-131,102,-137,102,-126,-127,-130,-123,102,-144,-134,102,-121,-111,-112,-101,102,-120,-109,-102,-119,-105,-108,-107,102,-117,-103,-113,-116,-114,-110,-104,-106,-115,102,102,-135,-122,-136,102,102,102,102,102,]),'PASS':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[52,-118,-15,-142,-132,-139,-75,52,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,52,-122,-136,-7,-83,-80,-99,52,-78,-100,-98,-84,-88,-81,-85,-86,]),'PLUS':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[21,21,-118,-15,-142,21,-132,21,-139,-75,21,-5,21,21,-74,-138,21,21,-140,-6,-16,-73,21,21,21,21,-133,-141,21,-77,103,21,21,-76,-138,-129,-128,103,-17,-3,-4,-124,103,21,-143,103,103,-125,-131,103,-137,21,103,-126,21,21,21,21,21,21,21,21,-127,21,21,21,21,21,21,21,21,21,21,21,21,-130,-123,21,103,21,-144,-134,103,21,-121,103,103,-101,103,-120,103,-102,103,-105,103,103,103,103,-103,103,103,103,103,-104,103,103,103,-82,-87,21,103,-79,21,-135,21,21,-122,-136,-7,21,-83,103,-80,-99,21,103,103,21,-100,-98,-84,103,-88,-81,-85,21,-86,103,]),'ASSIGN':([2,6,10,17,26,32,47,49,58,66,67,70,73,75,82,86,91,92,94,100,110,123,124,126,127,128,131,142,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,203,206,207,208,],[-118,-142,-132,-139,-138,-140,-133,-141,104,-138,-129,-56,-54,-128,-124,-143,-125,-131,-137,-126,-127,-130,-123,-63,-65,-62,-64,196,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,-57,-135,-122,-136,-68,]),'IFNDEF':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[57,-118,-15,-142,-132,-139,-75,57,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,57,-122,-136,-7,-83,-80,-99,57,-78,-100,-98,-84,-88,-81,-85,-86,]),'$end':([0,2,3,6,8,10,17,18,19,20,25,32,33,35,37,39,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,206,207,212,217,222,229,244,246,252,253,254,258,],[-150,-118,-15,-142,-2,-132,-139,-75,-1,-5,-74,-140,-6,-16,-73,0,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,-122,-136,-7,-83,-80,-78,-98,-84,-88,-81,-85,-86,]),'LPAR':([0,1,2,3,4,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,50,53,54,60,62,64,66,67,68,72,75,76,79,80,81,82,84,85,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,132,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,182,186,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[53,53,-118,-15,72,-142,53,-132,53,-139,-75,53,-5,53,53,-74,-138,53,53,-140,-6,-16,-73,53,53,53,53,95,-141,72,53,-77,53,53,-76,-138,-129,72,72,-128,138,-17,-3,-4,-124,53,72,-143,-125,-131,-137,53,-126,53,53,53,53,53,53,53,53,-127,53,53,53,53,53,53,53,53,53,53,53,53,-130,-123,53,72,53,-144,-134,53,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,72,72,-82,-87,53,-79,53,-135,53,53,-122,-136,-7,53,-83,-80,-99,53,-78,53,-100,-98,-84,-88,-81,-85,53,-86,]),'NE':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,108,-138,-129,-128,108,-124,108,-143,108,108,-125,-131,108,-137,108,-126,-127,-130,-123,108,-144,-134,108,-121,108,108,-101,108,-120,-109,-102,-119,-105,-108,-107,108,-117,-103,108,-116,108,-110,-104,-106,108,108,108,-135,-122,-136,108,108,108,108,108,]),'SWITCH':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[22,-118,-15,-142,-132,-139,-75,22,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,22,-122,-136,-7,-83,-80,-99,22,-78,-100,-98,-84,-88,-81,-85,-86,]),'DEC':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[1,1,-118,-15,-142,1,-132,1,-139,-75,1,-5,1,1,-74,-138,1,1,-140,-6,-16,-73,1,1,1,1,-133,-141,1,-77,110,1,1,-76,-138,-129,-128,110,-17,-3,-4,-124,110,1,-143,110,110,-125,-131,110,-137,1,110,-126,1,1,1,1,1,1,1,1,-127,1,1,1,1,1,1,1,1,1,1,1,1,-130,-123,1,110,1,-144,-134,110,1,-121,-111,-112,-101,110,-120,-109,-102,-119,-105,-108,-107,110,-117,-103,-113,-116,-114,-110,-104,-106,-115,110,-82,-87,1,110,-79,1,-135,1,1,-122,-136,-7,1,-83,110,-80,-99,1,110,110,1,-100,-98,-84,110,-88,-81,-85,1,-86,110,]),'DEFINE':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[24,-118,-15,-142,-132,-139,-75,24,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,24,-122,-136,-7,-83,-80,-99,24,-78,-100,-98,-84,-88,-81,-85,-86,]),'NAME':([0,1,2,3,4,5,6,9,10,12,15,17,18,19,20,21,22,24,25,27,29,31,32,33,35,37,41,43,44,46,47,49,50,53,54,57,60,62,64,66,67,68,69,70,72,73,75,79,80,81,82,84,85,86,91,92,94,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,131,132,136,138,143,144,146,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,180,182,186,193,195,196,198,202,203,204,205,206,207,208,210,212,214,216,217,222,223,227,228,229,235,243,244,246,252,253,254,255,258,],[26,66,-118,-15,73,74,-142,66,-132,76,66,-139,-75,26,-5,66,66,84,-74,66,66,90,-140,-6,-16,-73,66,66,66,66,-133,-141,73,66,-77,99,66,66,-76,-138,-129,73,130,-56,73,-54,-128,-17,-3,-4,-124,66,73,-143,-125,-131,-137,66,-126,66,66,66,66,159,66,66,66,66,-127,66,66,66,66,66,66,66,66,66,66,66,66,-130,-123,-63,-65,-62,66,-64,73,184,192,66,-144,201,-134,66,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,-57,73,73,-82,-87,66,-79,66,-135,26,66,-122,-136,-68,230,-7,192,66,-83,-80,201,-99,26,-78,66,-100,-98,-84,-88,-81,-85,66,-86,]),'CARROT':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,122,-138,-129,-128,122,-124,122,-143,122,122,-125,-131,122,-137,122,-126,-127,-130,-123,122,-144,-134,122,-121,-111,-112,-101,122,-120,-109,-102,-119,-105,-108,-107,122,-117,-103,-113,-116,-114,-110,-104,-106,-115,122,122,-135,-122,-136,122,122,122,122,122,]),'LE':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,106,-138,-129,-128,106,-124,106,-143,106,106,-125,-131,106,-137,106,-126,-127,-130,-123,106,-144,-134,106,-121,106,106,-101,106,-120,-109,-102,106,-105,-108,-107,106,-117,-103,106,-116,106,-110,-104,106,106,106,106,-135,-122,-136,106,106,106,106,106,]),'WHILE':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,152,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[29,-118,-15,-142,-132,-139,-75,29,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,205,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,29,-122,-136,-7,-83,-80,-99,29,-78,-100,-98,-84,-88,-81,-85,-86,]),'INCLUDE':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[14,-118,-15,-142,-132,-139,-75,14,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,14,-122,-136,-7,-83,-80,-99,14,-78,-100,-98,-84,-88,-81,-85,-86,]),'LBRACKET':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,69,70,73,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,97,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,133,141,142,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,193,195,196,197,198,202,203,204,205,206,207,208,209,212,213,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[27,27,-118,-15,-142,27,-132,27,-139,-75,27,-5,27,27,-74,-138,27,27,-140,-6,-16,-73,27,27,27,27,-133,-141,27,-77,113,27,27,-76,-138,-129,129,-56,-54,-128,113,-17,-3,-4,-124,113,27,-143,113,113,-125,-131,113,-137,27,129,113,-126,27,27,27,27,27,27,27,27,-127,27,27,27,27,27,27,27,27,27,27,27,27,-130,-123,129,-63,-65,129,27,-64,129,113,129,27,-144,-134,113,27,-121,-111,-112,-101,113,-120,-109,-102,-119,-105,-108,-107,113,-117,-103,-113,-116,-114,-110,-104,-106,-115,-55,-66,-67,113,-57,-82,-87,27,113,-79,27,-135,27,27,-122,-136,-68,129,-7,129,27,-83,113,-80,-99,27,113,113,27,-100,-98,-84,113,-88,-81,-85,27,-86,113,]),'NOT':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[60,60,-118,-15,-142,60,-132,60,-139,-75,60,-5,60,60,-74,60,60,-140,-6,-16,-73,60,60,60,60,-133,-141,60,-77,60,60,-76,-138,-129,-128,-17,-3,-4,-124,60,-143,-125,-131,-137,60,-126,60,60,60,60,60,60,60,60,-127,60,60,60,60,60,60,60,60,60,60,60,60,-130,-123,60,60,-144,-134,60,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,60,-79,60,-135,60,60,-122,-136,-7,60,-83,-80,-99,60,-78,60,-100,-98,-84,-88,-81,-85,60,-86,]),'RSHIFT':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,114,-138,-129,-128,114,-124,114,-143,114,114,-125,-131,114,-137,114,-126,-127,-130,-123,114,-144,-134,114,-121,114,114,-101,114,-120,114,-102,114,-105,114,114,114,-117,-103,114,-116,114,114,-104,114,114,114,114,-135,-122,-136,114,114,114,114,114,]),'MULT':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,26,27,29,32,33,35,37,41,43,44,46,47,49,53,54,58,60,62,64,66,67,75,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,98,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,141,143,144,147,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,193,195,196,197,198,202,203,204,205,206,207,212,216,217,220,222,227,228,229,232,235,243,244,246,250,252,253,254,255,258,259,],[62,62,-118,-15,-142,62,-132,62,-139,-75,62,-5,62,62,-74,-138,62,62,-140,-6,-16,-73,62,62,62,62,-133,-141,62,-77,115,62,62,-76,-138,-129,-128,115,-17,-3,-4,115,115,62,-143,115,115,115,-131,115,-137,62,115,-126,62,62,62,62,62,62,62,62,-127,62,62,62,62,62,62,62,62,62,62,62,62,-130,-123,62,115,62,-144,-134,115,62,-121,115,115,115,115,-120,115,115,115,-105,115,115,115,115,-103,115,115,115,115,-104,115,115,115,-82,-87,62,115,-79,62,-135,62,62,-122,-136,-7,62,-83,115,-80,-99,62,115,115,62,-100,-98,-84,115,-88,-81,-85,62,-86,115,]),'ENDIF':([0,2,3,6,10,17,18,19,20,25,32,33,35,37,47,49,54,64,66,67,75,79,80,81,82,86,91,92,94,100,110,123,124,144,147,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,198,203,204,206,207,212,217,222,227,228,229,243,244,246,252,253,254,258,],[63,-118,-15,-142,-132,-139,-75,63,-5,-74,-140,-6,-16,-73,-133,-141,-77,-76,-138,-129,-128,-17,-3,-4,-124,-143,-125,-131,-137,-126,-127,-130,-123,-144,-134,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,-79,-135,63,-122,-136,-7,-83,-80,-99,63,-78,-100,-98,-84,-88,-81,-85,-86,]),'INV':([0,1,2,3,6,9,10,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[43,43,-118,-15,-142,43,-132,43,-139,-75,43,-5,43,43,-74,43,43,-140,-6,-16,-73,43,43,43,43,-133,-141,43,-77,43,43,-76,-138,-129,-128,-17,-3,-4,-124,43,-143,-125,-131,-137,43,-126,43,43,43,43,43,43,43,43,-127,43,43,43,43,43,43,43,43,43,43,43,43,-130,-123,43,43,-144,-134,43,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,43,-79,43,-135,43,43,-122,-136,-7,43,-83,-80,-99,43,-78,43,-100,-98,-84,-88,-81,-85,43,-86,]),'LSHIFT':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,117,-138,-129,-128,117,-124,117,-143,117,117,-125,-131,117,-137,117,-126,-127,-130,-123,117,-144,-134,117,-121,117,117,-101,117,-120,117,-102,117,-105,117,117,117,-117,-103,117,-116,117,117,-104,117,117,117,117,-135,-122,-136,117,117,117,117,117,]),'GE':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,119,-138,-129,-128,119,-124,119,-143,119,119,-125,-131,119,-137,119,-126,-127,-130,-123,119,-144,-134,119,-121,119,119,-101,119,-120,-109,-102,119,-105,-108,-107,119,-117,-103,119,-116,119,-110,-104,119,119,119,119,-135,-122,-136,119,119,119,119,119,]),'STRING':([0,1,2,3,6,9,10,14,15,17,18,19,20,21,22,25,27,29,32,33,35,37,41,43,44,46,47,49,53,54,60,62,64,66,67,75,79,80,81,82,84,86,91,92,94,95,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,129,143,144,147,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,193,195,196,198,202,203,204,205,206,207,212,216,217,222,227,228,229,235,243,244,246,252,253,254,255,258,],[49,49,-118,-15,-142,49,-132,77,49,-139,-75,49,-5,49,49,-74,49,49,-140,-6,-16,-73,49,49,49,49,-133,-141,49,-77,49,49,-76,-138,-129,-128,-17,-3,-4,-124,49,-143,-125,-131,-137,49,-126,49,49,49,49,49,49,49,49,-127,49,49,49,49,49,49,49,49,49,49,49,49,-130,-123,49,49,-144,-134,49,-121,-111,-112,-101,-120,-109,-102,-119,-105,-108,-107,-117,-103,-113,-116,-114,-110,-104,-106,-115,-82,-87,49,-79,49,-135,49,49,-122,-136,-7,49,-83,-80,-99,49,-78,49,-100,-98,-84,-88,-81,-85,49,-86,]),'MOD':([2,6,10,17,26,32,47,49,58,66,67,75,78,82,83,86,88,89,91,92,93,94,98,100,110,123,124,141,144,147,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,203,206,207,220,229,232,250,259,],[-118,-142,-132,-139,-138,-140,-133,-141,120,-138,-129,-128,120,120,120,-143,120,120,120,-131,120,-137,120,-126,-127,-130,-123,120,-144,-134,120,-121,120,120,120,120,-120,120,120,120,-105,120,120,120,120,-103,120,120,120,120,-104,120,120,120,120,-135,-122,-136,120,120,120,120,120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'struct_decl':([0,19,204,228,],[38,38,38,38,]),'module':([0,],[39,]),'enum_name_list':([136,],[183,]),'default':([219,234,],[239,248,]),'if_stmt':([0,19,204,228,],[37,37,37,37,]),'power':([0,1,9,15,19,21,22,27,29,41,43,44,46,53,60,62,84,95,101,102,103,104,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,129,143,153,196,202,204,205,216,228,235,255,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'simple_stmt':([0,19,204,228,],[3,3,3,3,]),'inline_func_decl':([4,50,68,72,85,132,182,186,],[70,70,70,70,70,70,70,70,]),'param_type_list':([4,50,68,72,85,132,182,186,],[71,71,71,71,71,71,71,71,]),'pointer_or_array':([69,97,125,128,133,142,180,209,213,],[127,127,127,177,127,127,127,127,127,]),'ifndef_stmt':([0,19,204,228,],[7,7,7,7,]),'case':([219,234,],[237,247,]),'array_contents':([27,],[87,]),'empty':([0,200,],[8,225,]),'enum_decl_stmt':([0,19,204,228,],[42,42,42,42,]),'varaglist_elem':([138,214,],[190,231,]),'switch_stmt':([0,19,204,228,],[64,64,64,64,]),'atom':([0,1,9,15,19,21,22,27,29,41,43,44,46,53,60,62,84,95,101,102,103,104,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,129,143,153,196,202,204,205,216,228,235,255,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'param_list_contents':([72,],[135,]),'endif_stmt':([0,19,204,228,],[45,45,45,45,]),'include_stmt':([0,19,204,228,],[11,11,11,11,]),'parameters':([76,],[137,]),'if_orelse':([193,254,],[217,258,]),'var_decl_stmt':([0,19,204,228,],[13,13,13,13,]),'small_stmt':([0,19,204,228,],[16,16,16,16,]),'enum_decl':([0,19,204,228,],[28,28,28,28,]),'dowhile_stmt':([0,19,204,228,],[18,18,18,18,]),'while_orelse':([198,],[222,]),'stmt_list':([0,],[19,]),'optional_comma':([200,],[224,]),'type_declaration':([4,50,68,72,85,132,182,186,],[69,97,125,133,142,180,209,213,]),'struct_decl_stmt':([0,19,204,228,],[51,51,51,51,]),'case_list':([219,],[234,]),'arglist':([95,],[148,]),'stmts':([204,],[228,]),'argument':([95,202,],[150,226,]),'funcdef':([0,19,204,228,],[54,54,54,54,]),'func_decl':([0,19,204,228,],[55,55,55,55,]),'typedef_stmt':([0,19,204,228,],[56,56,56,56,]),'varargslist':([138,],[191,]),'while_stmt':([0,19,204,228,],[25,25,25,25,]),'switch_suite':([140,],[195,]),'case_expr_list':([235,],[249,]),'array':([69,97,125,128,133,142,180,209,213,],[131,131,131,131,131,131,131,131,131,]),'expr':([0,1,9,15,19,21,22,27,29,41,43,44,46,53,60,62,84,95,101,102,103,104,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,129,143,153,196,202,204,205,216,228,235,255,],[58,67,75,78,58,82,83,88,89,91,92,93,94,98,123,124,141,149,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,197,206,220,149,58,229,232,58,250,259,]),'return_stmt':([0,19,204,228,],[59,59,59,59,]),'pointer':([69,97,125,128,133,142,180,209,213,],[126,126,126,126,126,126,126,126,126,]),'var_decl':([0,19,138,146,204,214,223,228,],[30,30,188,199,30,188,241,30,]),'break':([0,19,204,228,],[61,61,61,61,]),'stmt':([0,19,204,228,],[33,81,227,243,]),'expr_stmt':([0,19,204,228,],[34,34,34,34,]),'assign_stmt':([0,19,204,228,],[36,36,36,36,]),'compound_stmt':([0,19,204,228,],[35,35,35,35,]),'bracket_list':([69,97,125,133,142,180,209,213,],[128,128,128,128,128,128,128,128,]),'struct_decl_list':([146,],[200,]),'switch_stmts':([219,],[238,]),'suite':([96,139,145,185,233,240,245,251,256,],[152,193,198,212,246,253,254,257,260,]),'define_stmt':([0,19,204,228,],[23,23,23,23,]),'pass':([0,19,204,228,],[65,65,65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> stmt_list','module',1,'p_module','cparse.py',52),
  ('module -> empty','module',1,'p_empty_module','cparse.py',56),
  ('stmt_list -> stmt_list NEWLINE','stmt_list',2,'p_stmt_list_1','cparse.py',61),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_2','cparse.py',65),
  ('stmt_list -> NEWLINE','stmt_list',1,'p_stmt_list_3','cparse.py',69),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_4','cparse.py',73),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','cparse.py',78),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters_empty','cparse.py',83),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters_exist','cparse.py',87),
  ('varargslist -> varaglist_elem','varargslist',1,'p_varargslist_one','cparse.py',91),
  ('varaglist_elem -> NAME','varaglist_elem',1,'p_name_or_var_decl','cparse.py',95),
  ('varaglist_elem -> var_decl','varaglist_elem',1,'p_name_or_var_decl','cparse.py',96),
  ('varaglist_elem -> ELLIPSIS','varaglist_elem',1,'p_ellipsis','cparse.py',100),
  ('varargslist -> varargslist COMMA varaglist_elem','varargslist',3,'p_varargslist_many','cparse.py',104),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','cparse.py',108),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','cparse.py',109),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt','cparse.py',117),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt','cparse.py',121),
  ('small_stmt -> include_stmt','small_stmt',1,'p_small_stmt','cparse.py',122),
  ('small_stmt -> define_stmt','small_stmt',1,'p_small_stmt','cparse.py',123),
  ('small_stmt -> ifndef_stmt','small_stmt',1,'p_small_stmt','cparse.py',124),
  ('small_stmt -> endif_stmt','small_stmt',1,'p_small_stmt','cparse.py',125),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','cparse.py',126),
  ('small_stmt -> assign_stmt','small_stmt',1,'p_small_stmt','cparse.py',127),
  ('small_stmt -> func_decl','small_stmt',1,'p_small_stmt','cparse.py',128),
  ('small_stmt -> var_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',129),
  ('small_stmt -> enum_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',130),
  ('small_stmt -> struct_decl_stmt','small_stmt',1,'p_small_stmt','cparse.py',131),
  ('small_stmt -> typedef_stmt','small_stmt',1,'p_small_stmt','cparse.py',132),
  ('small_stmt -> break','small_stmt',1,'p_small_stmt','cparse.py',133),
  ('small_stmt -> pass','small_stmt',1,'p_small_stmt','cparse.py',134),
  ('typedef_stmt -> TYPEDEF type_declaration NAME','typedef_stmt',3,'p_typedef_stmt','cparse.py',140),
  ('define_stmt -> DEFINE NAME expr','define_stmt',3,'p_define_stmt','cparse.py',146),
  ('define_stmt -> DEFINE NAME','define_stmt',2,'p_define_stmt_empty','cparse.py',150),
  ('ifndef_stmt -> IFNDEF NAME','ifndef_stmt',2,'p_ifndef_stmt','cparse.py',154),
  ('endif_stmt -> ENDIF','endif_stmt',1,'p_endif_stmt','cparse.py',158),
  ('pass -> PASS','pass',1,'p_pass','cparse.py',162),
  ('break -> BREAK','break',1,'p_break','cparse.py',166),
  ('enum_decl_stmt -> enum_decl','enum_decl_stmt',1,'p_enum_decl_stmt','cparse.py',171),
  ('enum_decl -> ENUM NAME LBRACE enum_name_list RBRACE','enum_decl',5,'p_enum_decl','cparse.py',175),
  ('enum_name_list -> NAME','enum_name_list',1,'p_enum_name_list','cparse.py',179),
  ('enum_name_list -> enum_name_list COMMA NAME','enum_name_list',3,'p_enum_name_list_many','cparse.py',183),
  ('struct_decl_stmt -> struct_decl','struct_decl_stmt',1,'p_struct_decl_stmt','cparse.py',189),
  ('struct_decl -> STRUCT NAME LBRACE struct_decl_list optional_comma RBRACE','struct_decl',6,'p_struct_decl','cparse.py',193),
  ('optional_comma -> COMMA','optional_comma',1,'p_optional_seq_comma','cparse.py',197),
  ('optional_comma -> empty','optional_comma',1,'p_optional_seq_comma','cparse.py',198),
  ('struct_decl_list -> struct_decl_list COMMA var_decl','struct_decl_list',3,'p_struct_decl_list','cparse.py',203),
  ('struct_decl_list -> var_decl','struct_decl_list',1,'p_struct_decl_list_one','cparse.py',207),
  ('func_decl -> DEF NAME parameters','func_decl',3,'p_func_decl','cparse.py',212),
  ('func_decl -> DEF NAME parameters ARROW type_declaration','func_decl',5,'p_func_declwith_ret','cparse.py',217),
  ('var_decl_stmt -> var_decl','var_decl_stmt',1,'p_var_decl_stmt','cparse.py',221),
  ('var_decl -> NAME COLON type_declaration','var_decl',3,'p_vardecl','cparse.py',226),
  ('var_decl -> NAME COLON type_declaration ASSIGN expr','var_decl',5,'p_vardecl_assign','cparse.py',231),
  ('type_declaration -> NAME','type_declaration',1,'p_declaration_name','cparse.py',235),
  ('type_declaration -> LBRACE type_declaration RBRACE','type_declaration',3,'p_type_declaration_scoped','cparse.py',239),
  ('type_declaration -> inline_func_decl','type_declaration',1,'p_function_declaration','cparse.py',246),
  ('inline_func_decl -> param_type_list ARROW type_declaration','inline_func_decl',3,'p_inline_func_decl','cparse.py',250),
  ('param_type_list -> LPAR RPAR','param_type_list',2,'p_param_type_list_empty','cparse.py',254),
  ('param_type_list -> LPAR param_list_contents RPAR','param_type_list',3,'p_param_type_list_something','cparse.py',258),
  ('param_list_contents -> type_declaration','param_list_contents',1,'p_param_list_contents','cparse.py',262),
  ('param_list_contents -> param_list_contents COMMA type_declaration','param_list_contents',3,'p_param_list_contents_many','cparse.py',266),
  ('type_declaration -> type_declaration bracket_list','type_declaration',2,'p_declaration_array','cparse.py',272),
  ('pointer_or_array -> pointer','pointer_or_array',1,'p_pointer_or_array','cparse.py',286),
  ('pointer_or_array -> array','pointer_or_array',1,'p_pointer_or_array','cparse.py',287),
  ('bracket_list -> pointer_or_array','bracket_list',1,'p_bracket_list_one','cparse.py',291),
  ('bracket_list -> bracket_list pointer_or_array','bracket_list',2,'p_bracket_list_many','cparse.py',295),
  ('pointer -> LBRACKET RBRACKET','pointer',2,'p_pointer','cparse.py',299),
  ('array -> LBRACKET expr RBRACKET','array',3,'p_array','cparse.py',303),
  ('include_stmt -> INCLUDE STRING','include_stmt',2,'p_include_standard','cparse.py',307),
  ('expr_stmt -> expr','expr_stmt',1,'p_expr_stmt','cparse.py',311),
  ('assign_stmt -> expr ASSIGN expr','assign_stmt',3,'p_assign','cparse.py',316),
  ('return_stmt -> RETURN expr','return_stmt',2,'p_return_stmt','cparse.py',320),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',326),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',327),
  ('compound_stmt -> dowhile_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',328),
  ('compound_stmt -> switch_stmt','compound_stmt',1,'p_compound_stmt','cparse.py',329),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','cparse.py',330),
  ('dowhile_stmt -> DO COLON suite WHILE expr','dowhile_stmt',5,'p_dowhile','cparse.py',338),
  ('while_stmt -> WHILE expr COLON suite','while_stmt',4,'p_while_stmt','cparse.py',343),
  ('while_stmt -> WHILE expr COLON suite while_orelse','while_stmt',5,'p_while_stmt_orelse','cparse.py',347),
  ('while_orelse -> ELSE COLON suite','while_orelse',3,'p_while_orelse','cparse.py',351),
  ('if_stmt -> IF expr COLON suite','if_stmt',4,'p_if_stmt','cparse.py',357),
  ('if_stmt -> IF expr COLON suite if_orelse','if_stmt',5,'p_if_else','cparse.py',361),
  ('if_orelse -> ELSE COLON suite','if_orelse',3,'p_orelse_else','cparse.py',365),
  ('if_orelse -> ELIF expr COLON suite','if_orelse',4,'p_orelse_elif_no_orelse','cparse.py',369),
  ('if_orelse -> ELIF expr COLON suite if_orelse','if_orelse',5,'p_orelse_elif_with_orelse','cparse.py',373),
  ('switch_stmt -> SWITCH expr COLON switch_suite','switch_stmt',4,'p_switch','cparse.py',378),
  ('switch_suite -> NEWLINE INDENT switch_stmts DEDENT','switch_suite',4,'p_switch_suite','cparse.py',382),
  ('switch_stmts -> case_list','switch_stmts',1,'p_switch_stmts_case_list','cparse.py',386),
  ('switch_stmts -> case_list default','switch_stmts',2,'p_switch_stmts_cases_with_default','cparse.py',390),
  ('switch_stmts -> default','switch_stmts',1,'p_switch_stmts_default','cparse.py',394),
  ('default -> ELSE COLON suite','default',3,'p_default','cparse.py',398),
  ('case_list -> case','case_list',1,'p_case_list_one','cparse.py',402),
  ('case_list -> case_list case','case_list',2,'p_case_list','cparse.py',406),
  ('case -> CASE case_expr_list COLON suite','case',4,'p_case','cparse.py',410),
  ('case_expr_list -> expr','case_expr_list',1,'p_case_expr_list_one','cparse.py',414),
  ('case_expr_list -> case_expr_list COMMA expr','case_expr_list',3,'p_case_expr_list','cparse.py',418),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','cparse.py',423),
  ('stmts -> stmt','stmts',1,'p_stmts_1','cparse.py',427),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_2','cparse.py',431),
  ('expr -> expr PLUS expr','expr',3,'p_add_expr','cparse.py',439),
  ('expr -> expr MINUS expr','expr',3,'p_sub_expr','cparse.py',443),
  ('expr -> expr MULT expr','expr',3,'p_mult_expr','cparse.py',447),
  ('expr -> expr MOD expr','expr',3,'p_mod_expr','cparse.py',451),
  ('expr -> expr DIV expr','expr',3,'p_div_expr','cparse.py',455),
  ('expr -> expr EQ expr','expr',3,'p_eq_expr','cparse.py',459),
  ('expr -> expr LT expr','expr',3,'p_lt_expr','cparse.py',463),
  ('expr -> expr GT expr','expr',3,'p_gt_expr','cparse.py',467),
  ('expr -> expr LE expr','expr',3,'p_le_expr','cparse.py',471),
  ('expr -> expr GE expr','expr',3,'p_ge_expr','cparse.py',475),
  ('expr -> expr AND expr','expr',3,'p_and_expr','cparse.py',479),
  ('expr -> expr OR expr','expr',3,'p_or_expr','cparse.py',483),
  ('expr -> expr AMP expr','expr',3,'p_bitand_expr','cparse.py',489),
  ('expr -> expr PIPE expr','expr',3,'p_bitor_expr','cparse.py',493),
  ('expr -> expr CARROT expr','expr',3,'p_xor_expr','cparse.py',497),
  ('expr -> expr LSHIFT expr','expr',3,'p_lshift_expr','cparse.py',501),
  ('expr -> expr RSHIFT expr','expr',3,'p_rshift_expr','cparse.py',505),
  ('expr -> power','expr',1,'p_comparison_power','cparse.py',509),
  ('expr -> expr NE expr','expr',3,'p_ne','cparse.py',513),
  ('expr -> expr ARROW NAME','expr',3,'p_expr_struct_deref','cparse.py',517),
  ('expr -> LPAR expr RPAR','expr',3,'p_comparison_scoped','cparse.py',521),
  ('expr -> LT type_declaration GT expr','expr',4,'p_comparison_cast','cparse.py',525),
  ('expr -> MULT expr','expr',2,'p_comparison_deref','cparse.py',529),
  ('expr -> PLUS expr','expr',2,'p_comparison_uadd','cparse.py',533),
  ('expr -> MINUS expr','expr',2,'p_comparison_usub','cparse.py',537),
  ('expr -> expr INC','expr',2,'p_post_inc','cparse.py',543),
  ('expr -> expr DEC','expr',2,'p_post_dec','cparse.py',547),
  ('expr -> INC expr','expr',2,'p_pre_inc','cparse.py',553),
  ('expr -> DEC expr','expr',2,'p_pre_dec','cparse.py',557),
  ('expr -> NOT expr','expr',2,'p_comparison_not','cparse.py',561),
  ('expr -> INV expr','expr',2,'p_inv_expr','cparse.py',565),
  ('atom -> NULL','atom',1,'p_null','cparse.py',569),
  ('power -> atom','power',1,'p_power_1','cparse.py',573),
  ('power -> atom LPAR RPAR','power',3,'p_power_2','cparse.py',577),
  ('power -> atom LPAR arglist RPAR','power',4,'p_power_call_args','cparse.py',581),
  ('expr -> expr LBRACKET expr RBRACKET','expr',4,'p_index','cparse.py',587),
  ('expr -> AMP expr','expr',2,'p_address_of','cparse.py',593),
  ('atom -> NAME','atom',1,'p_atom_name','cparse.py',597),
  ('atom -> INT','atom',1,'p_atom_int','cparse.py',601),
  ('atom -> FLOAT','atom',1,'p_atom_float','cparse.py',605),
  ('atom -> STRING','atom',1,'p_atom_str','cparse.py',609),
  ('atom -> CHAR','atom',1,'p_atom_char','cparse.py',613),
  ('atom -> LBRACKET RBRACKET','atom',2,'p_atom_array_empty','cparse.py',617),
  ('atom -> LBRACKET array_contents RBRACKET','atom',3,'p_atom_array','cparse.py',621),
  ('array_contents -> expr','array_contents',1,'p_array_litral_contents','cparse.py',625),
  ('array_contents -> array_contents COMMA expr','array_contents',3,'p_array_litral_contents_2','cparse.py',629),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','cparse.py',639),
  ('arglist -> argument','arglist',1,'p_arglist_one_arg','cparse.py',643),
  ('argument -> expr','argument',1,'p_argument','cparse.py',647),
  ('empty -> <empty>','empty',0,'p_empty','cparse.py',651),
]
